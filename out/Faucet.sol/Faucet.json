{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "kernel_",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "ohm_",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "reserve_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ethDrip_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ohmDrip_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveDrip_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dripInterval_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "asset",
          "type": "uint8"
        }
      ],
      "name": "Faucet_DripFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "asset",
          "type": "uint8"
        }
      ],
      "name": "Faucet_DripOnCooldown",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "asset",
          "type": "uint8"
        }
      ],
      "name": "Faucet_InsufficientFunds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller_",
          "type": "address"
        }
      ],
      "name": "KernelAdapter_OnlyKernel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "Role",
          "name": "role_",
          "type": "bytes32"
        }
      ],
      "name": "Policy_OnlyRole",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Faucet.Asset",
          "name": "asset",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Drip",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "newKernel_",
          "type": "address"
        }
      ],
      "name": "changeKernel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "configureDependencies",
      "outputs": [
        {
          "internalType": "Keycode[]",
          "name": "dependencies",
          "type": "bytes5[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "asset_",
          "type": "uint8"
        }
      ],
      "name": "drip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "dripAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dripInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dripTestAmounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract Kernel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum Faucet.Asset",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "lastDrip",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestPermissions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "Keycode",
              "name": "keycode",
              "type": "bytes5"
            },
            {
              "internalType": "bytes4",
              "name": "funcSelector",
              "type": "bytes4"
            }
          ],
          "internalType": "struct Permissions[]",
          "name": "requests",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "activate_",
          "type": "bool"
        }
      ],
      "name": "setActiveStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "asset_",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "setDripAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "interval_",
          "type": "uint256"
        }
      ],
      "name": "setDripInterval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Faucet.Asset",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        },
        {
          "internalType": "enum Faucet.Asset",
          "name": "asset_",
          "type": "uint8"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "265:2834:54:-:0;;;454:1:10;429:26;;1023:470:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1944:6:11;:16;;-1:-1:-1;;;;;1944:16:11;;;-1:-1:-1;;;;;;1944:16:11;;;;;;1248::54;:23;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1281:20;:31;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;1287:13:::1;1248:16;1323:21:::0;;;;:32;;;;1365:21;:32;1407:25;;;;:40;1458:12:::1;:28:::0;265:2834;;14:139:76;-1:-1:-1;;;;;97:31:76;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:837::-;328:6;336;344;352;360;368;376;429:3;417:9;408:7;404:23;400:33;397:53;;;446:1;443;436:12;397:53;478:9;472:16;497:39;530:5;497:39;:::i;:::-;605:2;590:18;;584:25;555:5;;-1:-1:-1;618:41:76;584:25;618:41;:::i;:::-;730:2;715:18;;709:25;678:7;;-1:-1:-1;743:41:76;709:25;743:41;:::i;:::-;803:7;793:17;;;850:2;839:9;835:18;829:25;819:35;;894:3;883:9;879:19;873:26;863:36;;939:3;928:9;924:19;918:26;908:36;;984:3;973:9;969:19;963:26;953:36;;158:837;;;;;;;;;;:::o;1000:127::-;265:2834:54;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100ec5760003560e01c806370fef9f61161008a578063cd3a886111610059578063cd3a886114610279578063d4aae0c4146102a6578063ec7404b1146102de578063fd00ea1c146102fe57600080fd5b806370fef9f6146101fd57806392c667281461021d5780639459b8751461023d578063a9a89db91461025957600080fd5b80634657b36c116100c65780634657b36c14610165578063558d0423146101855780635924be70146101cb5780636a214811146101e757600080fd5b80631a624b17146100f857806322f3e2d41461010f5780632c35c40b1461014557600080fd5b366100f357005b600080fd5b34801561010457600080fd5b5061010d610334565b005b34801561011b57600080fd5b5060005461013090600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b34801561015157600080fd5b5061010d610160366004610c2d565b610354565b34801561017157600080fd5b5061010d610180366004610c62565b6105a8565b34801561019157600080fd5b506101bd6101a0366004610c2d565b600460209081526000928352604080842090915290825290205481565b60405190815260200161013c565b3480156101d757600080fd5b50606060405161013c9190610c86565b3480156101f357600080fd5b506101bd60055481565b34801561020957600080fd5b5061010d610218366004610ce9565b6105f7565b34801561022957600080fd5b5061010d610238366004610d04565b610915565b34801561024957600080fd5b50606060405161013c9190610d2e565b34801561026557600080fd5b5061010d610274366004610d7c565b6109fb565b34801561028557600080fd5b506101bd610294366004610ce9565b60026020526000908152604090205481565b3480156102b257600080fd5b506000546102c6906001600160a01b031681565b6040516001600160a01b03909116815260200161013c565b3480156102ea57600080fd5b5061010d6102f9366004610da3565b610aa9565b34801561030a57600080fd5b506102c6610319366004610ce9565b6003602052600090815260409020546001600160a01b031681565b61033e60006105f7565b61034860016105f7565b61035260026105f7565b565b6b3330bab1b2ba2fb0b236b4b760a11b60008160005460405163ac4ab3fb60e01b8152336004820152602481018390529192506001600160a01b03169063ac4ab3fb90604401602060405180830381865afa1580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db9190610dc0565b610400576040516371324ef360e11b8152600481018290526024015b60405180910390fd5b600083600281111561041457610414610ddd565b036104b4576000846001600160a01b03164760405160006040518083038185875af1925050503d8060008114610466576040519150601f19603f3d011682016040523d82523d6000602084013e61046b565b606091505b50509050806104ae5760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc811985a5b1959608a1b60448201526064016103f7565b506105a2565b6105a284600360008660028111156104ce576104ce610ddd565b60028111156104df576104df610ddd565b8152602081019190915260409081016000205490516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a9190610df3565b6003600087600281111561057057610570610ddd565b600281111561058157610581610ddd565b81526020810191909152604001600020546001600160a01b03169190610af4565b50505050565b6000546001600160a01b031633146105d55760405163053e900f60e21b81523360048201526024016103f7565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001146106365760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016103f7565b600260018190556005543360009081526004602052604081209192849081111561066257610662610ddd565b600281111561067357610673610ddd565b81526020019081526020016000205461068c9190610e0c565b4210156106ae57806040516368a886b760e11b81526004016103f79190610e32565b60008160028111156106c2576106c2610ddd565b036107c557600260008260028111156106dd576106dd610ddd565b60028111156106ee576106ee610ddd565b81526020019081526020016000205447101561071f57806040516363dbac9160e01b81526004016103f79190610e32565b600033600282848281111561073657610736610ddd565b600281111561074757610747610ddd565b81526020019081526020016000205460405160006040518083038185875af1925050503d8060008114610796576040519150601f19603f3d011682016040523d82523d6000602084013e61079b565b606091505b50509050806107bf5781604051639e73bbe760e01b81526004016103f79190610e32565b5061090e565b600260008260028111156107db576107db610ddd565b60028111156107ec576107ec610ddd565b8152602001908152602001600020546003600083600281111561081157610811610ddd565b600281111561082257610822610ddd565b8152602081019190915260409081016000205490516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089d9190610df3565b10156108be57806040516363dbac9160e01b81526004016103f79190610e32565b61090e33600260008460028111156108d8576108d8610ddd565b60028111156108e9576108e9610ddd565b8152602001908152602001600020546003600085600281111561057057610570610ddd565b5060018055565b6b3330bab1b2ba2fb0b236b4b760a11b60008160005460405163ac4ab3fb60e01b8152336004820152602481018390529192506001600160a01b03169063ac4ab3fb90604401602060405180830381865afa158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c9190610dc0565b6109bc576040516371324ef360e11b8152600481018290526024016103f7565b82600260008660028111156109d3576109d3610ddd565b60028111156109e4576109e4610ddd565b815260208101919091526040016000205550505050565b6b3330bab1b2ba2fb0b236b4b760a11b60008160005460405163ac4ab3fb60e01b8152336004820152602481018390529192506001600160a01b03169063ac4ab3fb90604401602060405180830381865afa158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a829190610dc0565b610aa2576040516371324ef360e11b8152600481018290526024016103f7565b5050600555565b6000546001600160a01b03163314610ad65760405163053e900f60e21b81523360048201526024016103f7565b60008054911515600160a01b0260ff60a01b19909216919091179055565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610b509190610e5a565b6000604051808303816000865af19150503d8060008114610b8d576040519150601f19603f3d011682016040523d82523d6000602084013e610b92565b606091505b5091509150818015610bbc575080511580610bbc575080806020019051810190610bbc9190610dc0565b610bfa5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016103f7565b5050505050565b6001600160a01b0381168114610c1657600080fd5b50565b803560038110610c2857600080fd5b919050565b60008060408385031215610c4057600080fd5b8235610c4b81610c01565b9150610c5960208401610c19565b90509250929050565b600060208284031215610c7457600080fd5b8135610c7f81610c01565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015610cdc57815180516001600160d81b03191685528601516001600160e01b031916868501529284019290850190600101610ca3565b5091979650505050505050565b600060208284031215610cfb57600080fd5b610c7f82610c19565b60008060408385031215610d1757600080fd5b610d2083610c19565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b81811015610d705783516001600160d81b03191683529284019291840191600101610d4a565b50909695505050505050565b600060208284031215610d8e57600080fd5b5035919050565b8015158114610c1657600080fd5b600060208284031215610db557600080fd5b8135610c7f81610d95565b600060208284031215610dd257600080fd5b8151610c7f81610d95565b634e487b7160e01b600052602160045260246000fd5b600060208284031215610e0557600080fd5b5051919050565b60008219821115610e2d57634e487b7160e01b600052601160045260246000fd5b500190565b6020810160038310610e5457634e487b7160e01b600052602160045260246000fd5b91905290565b6000825160005b81811015610e7b5760208186018101518583015201610e61565b81811115610e8a576000828501525b50919091019291505056fea2646970667358221220afc2f6dac2f5056cc0fc2b0b16496209b9e5223513ee9aa8f14c6fec4948490064736f6c634300080f0033",
    "sourceMap": "265:2834:54:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2252:122;;;;;;;;;;;;;:::i;:::-;;4099:20:11;;;;;;;;;;-1:-1:-1;4099:20:11;;;;-1:-1:-1;;;4099:20:11;;;;;;;;;179:14:76;;172:22;154:41;;142:2;127:18;4099:20:11;;;;;;;;2464:369:54;;;;;;;;;;-1:-1:-1;2464:369:54;;;;;:::i;:::-;;:::i;2255:97:11:-;;;;;;;;;;-1:-1:-1;2255:97:11;;;;;:::i;:::-;;:::i;878:61:54:-;;;;;;;;;;-1:-1:-1;878:61:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1247:25:76;;;1235:2;1220:18;878:61:54;1101:177:76;5461:94:11;;;;;;;;;;-1:-1:-1;5522:29:11;5461:94;;;;;;:::i;945:27:54:-;;;;;;;;;;;;;;;;1548:698;;;;;;;;;;-1:-1:-1;1548:698:54;;;;;:::i;:::-;;:::i;2964:133::-;;;;;;;;;;-1:-1:-1;2964:133:54;;;;;:::i;:::-;;:::i;5190:92:11:-;;;;;;;;;;-1:-1:-1;5522:29:11;5190:92;;;;;;:::i;2839:119:54:-;;;;;;;;;;-1:-1:-1;2839:119:54;;;;;:::i;:::-;;:::i;787:43::-;;;;;;;;;;-1:-1:-1;787:43:54;;;;;:::i;:::-;;;;;;;;;;;;;;1879:20:11;;;;;;;;;;-1:-1:-1;1879:20:11;;;;-1:-1:-1;;;;;1879:20:11;;;;;;-1:-1:-1;;;;;3679:32:76;;;3661:51;;3649:2;3634:18;1879:20:11;3499:219:76;4595:98:11;;;;;;;;;;-1:-1:-1;4595:98:11;;;;;:::i;:::-;;:::i;836:36:54:-;;;;;;;;;;-1:-1:-1;836:36:54;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;836:36:54;;;2252:122;2298:15;2303:9;2298:4;:15::i;:::-;2323;2328:9;2323:4;:15::i;:::-;2348:19;2353:13;2348:4;:19::i;:::-;2252:122::o;2464:369::-;-1:-1:-1;;;4399:9:11;4356:163;4439:6;;:32;;-1:-1:-1;;;4439:32:11;;4454:10;4439:32;;;4515:51:76;4582:18;;;4575:34;;;4399:25:11;;-1:-1:-1;;;;;;4439:6:11;;:14;;4488:18:76;;4439:32:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4434:67;;4480:21;;-1:-1:-1;;;4480:21:11;;;;;1247:25:76;;;1220:18;;4480:21:11;;;;;;;;4434:67;2570:9:54::1;2560:6;:19;;;;;;;;:::i;:::-;::::0;2556:271:::1;;2596:12;2622:3;-1:-1:-1::0;;;;;2614:17:54::1;2639:21;2614:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2595:70;;;2687:7;2679:35;;;::::0;-1:-1:-1;;;2679:35:54;;5622:2:76;2679:35:54::1;::::0;::::1;5604:21:76::0;5661:2;5641:18;;;5634:30;-1:-1:-1;;;5680:18:76;;;5673:45;5735:18;;2679:35:54::1;5420:339:76::0;2679:35:54::1;2581:144;2556:271;;;2745:71;2772:3;2777:5;:13;2783:6;2777:13;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;;;;;;;;-1:-1:-1;2777:13:54;;:38;;-1:-1:-1;;;2777:38:54;;2809:4:::1;2777:38;::::0;::::1;3661:51:76::0;-1:-1:-1;;;;;2777:13:54;;::::1;::::0;:23:::1;::::0;3634:18:76;;2777:38:54::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2745:5;:13;2751:6;2745:13;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;2745:13:54;;-1:-1:-1;;;;;2745:13:54::1;::::0;:71;:26:::1;:71::i;:::-;4389:130:11::0;2464:369:54;;;:::o;2255:97:11:-;2107:6;;-1:-1:-1;;;;;2107:6:11;2085:10;:29;2081:78;;2123:36;;-1:-1:-1;;;2123:36:11;;2148:10;2123:36;;;3661:51:76;3634:18;;2123:36:11;3499:219:76;2081:78:11;2326:6:::1;:19:::0;;-1:-1:-1;;;;;;2326:19:11::1;-1:-1:-1::0;;;;;2326:19:11;;;::::1;::::0;;;::::1;::::0;;2255:97::o;1548:698:54:-;512:6:10;;522:1;512:11;504:34;;;;-1:-1:-1;;;504:34:10;;6363:2:76;504:34:10;;;6345:21:76;6402:2;6382:18;;;6375:30;-1:-1:-1;;;6421:18:76;;;6414:40;6471:18;;504:34:10;6161:334:76;504:34:10;558:1;549:6;:10;;;1659:12:54::1;::::0;1637:10:::1;1628:20;::::0;;;:8:::1;:20;::::0;;;;1659:12;;1649:6;;1628:28;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:43;;;;:::i;:::-;1610:15;:61;1606:115;;;1714:6;1692:29;;-1:-1:-1::0;;;1692:29:54::1;;;;;;;;:::i;1606:115::-;1746:9;1736:6;:19;;;;;;;;:::i;:::-;::::0;1732:508:::1;;1799:10;:18;1810:6;1799:18;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1775:21;:42;1771:87;;;1851:6;1826:32;;-1:-1:-1::0;;;1826:32:54::1;;;;;;;;:::i;1771:87::-;1873:12;1899:10;1923;1873:12:::0;1934:6;1923:18;;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1891:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1872:74;;;1965:7;1960:46;;1999:6;1981:25;;-1:-1:-1::0;;;1981:25:54::1;;;;;;;;:::i;1960:46::-;1757:260;1732:508;;;2082:10;:18;2093:6;2082:18;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2041:5;:13;2047:6;2041:13;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;;;;;;;;-1:-1:-1;2041:13:54;;:38;;-1:-1:-1;;;2041:38:54;;2073:4:::1;2041:38;::::0;::::1;3661:51:76::0;-1:-1:-1;;;;;2041:13:54;;::::1;::::0;:23:::1;::::0;3634:18:76;;2041:38:54::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;2037:120;;;2150:6;2125:32;;-1:-1:-1::0;;;2125:32:54::1;;;;;;;;:::i;2037:120::-;2171:58;2198:10;2210;:18;2221:6;2210:18;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2171:5;:13;2177:6;2171:13;;;;;;;;:::i;:58::-;-1:-1:-1::0;591:1:10;582:10;;1548:698:54:o;2964:133::-;-1:-1:-1;;;4399:9:11;4356:163;4439:6;;:32;;-1:-1:-1;;;4439:32:11;;4454:10;4439:32;;;4515:51:76;4582:18;;;4575:34;;;4399:25:11;;-1:-1:-1;;;;;;4439:6:11;;:14;;4488:18:76;;4439:32:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4434:67;;4480:21;;-1:-1:-1;;;4480:21:11;;;;;1247:25:76;;;1220:18;;4480:21:11;1101:177:76;4434:67:11;3083:7:54::1;3062:10;:18;3073:6;3062:18;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3062:18:54;:28;-1:-1:-1;;;;2964:133:54:o;2839:119::-;-1:-1:-1;;;4399:9:11;4356:163;4439:6;;:32;;-1:-1:-1;;;4439:32:11;;4454:10;4439:32;;;4515:51:76;4582:18;;;4575:34;;;4399:25:11;;-1:-1:-1;;;;;;4439:6:11;;:14;;4488:18:76;;4439:32:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4434:67;;4480:21;;-1:-1:-1;;;4480:21:11;;;;;1247:25:76;;;1220:18;;4480:21:11;1101:177:76;4434:67:11;-1:-1:-1;;2927:12:54::1;:24:::0;2839:119::o;4595:98:11:-;2107:6;;-1:-1:-1;;;;;2107:6:11;2085:10;:29;2081:78;;2123:36;;-1:-1:-1;;;2123:36:11;;2148:10;2123:36;;;3661:51:76;3634:18;;2123:36:11;3499:219:76;2081:78:11;4666:8:::1;:20:::0;;;::::1;;-1:-1:-1::0;;;4666:20:11::1;-1:-1:-1::0;;;;4666:20:11;;::::1;::::0;;;::::1;::::0;;4595:98::o;802:353:20:-;983:59;;;-1:-1:-1;;;;;4533:32:76;;;983:59:20;;;4515:51:76;4582:18;;;;4575:34;;;983:59:20;;;;;;;;;;4488:18:76;;;;983:59:20;;;;;;;-1:-1:-1;;;;;983:59:20;-1:-1:-1;;;983:59:20;;;950:102;;-1:-1:-1;;;;950:19:20;;;;:102;;983:59;950:102;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;914:138;;;;1071:7;:57;;;;-1:-1:-1;1083:11:20;;:16;;:44;;;1114:4;1103:24;;;;;;;;;;;;:::i;:::-;1063:85;;;;-1:-1:-1;;;1063:85:20;;7986:2:76;1063:85:20;;;7968:21:76;8025:2;8005:18;;;7998:30;-1:-1:-1;;;8044:18:76;;;8037:45;8099:18;;1063:85:20;7784:339:76;1063:85:20;904:251;;802:353;;;:::o;206:131:76:-;-1:-1:-1;;;;;281:31:76;;271:42;;261:70;;327:1;324;317:12;261:70;206:131;:::o;342:146::-;413:20;;462:1;452:12;;442:40;;478:1;475;468:12;442:40;342:146;;;:::o;493:335::-;572:6;580;633:2;621:9;612:7;608:23;604:32;601:52;;;649:1;646;639:12;601:52;688:9;675:23;707:31;732:5;707:31;:::i;:::-;757:5;-1:-1:-1;781:41:76;818:2;803:18;;781:41;:::i;:::-;771:51;;493:335;;;;;:::o;833:263::-;908:6;961:2;949:9;940:7;936:23;932:32;929:52;;;977:1;974;967:12;929:52;1016:9;1003:23;1035:31;1060:5;1035:31;:::i;:::-;1085:5;833:263;-1:-1:-1;;;833:263:76:o;1283:854::-;1514:2;1566:21;;;1636:13;;1539:18;;;1658:22;;;1485:4;;1514:2;1699;;1717:18;;;;1758:15;;;1485:4;1801:310;1815:6;1812:1;1809:13;1801:310;;;1874:13;;1916:9;;-1:-1:-1;;;;;;1912:38:76;1900:51;;1995:11;;1989:18;-1:-1:-1;;;;;;1985:45:76;1971:12;;;1964:67;2051:12;;;;2086:15;;;;1837:1;1830:9;1801:310;;;-1:-1:-1;2128:3:76;;1283:854;-1:-1:-1;;;;;;;1283:854:76:o;2142:200::-;2212:6;2265:2;2253:9;2244:7;2240:23;2236:32;2233:52;;;2281:1;2278;2271:12;2233:52;2304:32;2326:9;2304:32;:::i;2347:268::-;2426:6;2434;2487:2;2475:9;2466:7;2462:23;2458:32;2455:52;;;2503:1;2500;2493:12;2455:52;2526:32;2548:9;2526:32;:::i;:::-;2516:42;2605:2;2590:18;;;;2577:32;;-1:-1:-1;;;2347:268:76:o;2620:689::-;2819:2;2871:21;;;2941:13;;2844:18;;;2963:22;;;2790:4;;2819:2;3042:15;;;;3016:2;3001:18;;;2790:4;3085:198;3099:6;3096:1;3093:13;3085:198;;;3164:13;;-1:-1:-1;;;;;;3160:42:76;3148:55;;3258:15;;;;3223:12;;;;3121:1;3114:9;3085:198;;;-1:-1:-1;3300:3:76;;2620:689;-1:-1:-1;;;;;;2620:689:76:o;3314:180::-;3373:6;3426:2;3414:9;3405:7;3401:23;3397:32;3394:52;;;3442:1;3439;3432:12;3394:52;-1:-1:-1;3465:23:76;;3314:180;-1:-1:-1;3314:180:76:o;3723:118::-;3809:5;3802:13;3795:21;3788:5;3785:32;3775:60;;3831:1;3828;3821:12;3846:241;3902:6;3955:2;3943:9;3934:7;3930:23;3926:32;3923:52;;;3971:1;3968;3961:12;3923:52;4010:9;3997:23;4029:28;4051:5;4029:28;:::i;4620:245::-;4687:6;4740:2;4728:9;4719:7;4715:23;4711:32;4708:52;;;4756:1;4753;4746:12;4708:52;4788:9;4782:16;4807:28;4829:5;4807:28;:::i;5078:127::-;5139:10;5134:3;5130:20;5127:1;5120:31;5170:4;5167:1;5160:15;5194:4;5191:1;5184:15;5972:184;6042:6;6095:2;6083:9;6074:7;6070:23;6066:32;6063:52;;;6111:1;6108;6101:12;6063:52;-1:-1:-1;6134:16:76;;5972:184;-1:-1:-1;5972:184:76:o;6500:225::-;6540:3;6571:1;6567:6;6564:1;6561:13;6558:136;;;6616:10;6611:3;6607:20;6604:1;6597:31;6651:4;6648:1;6641:15;6679:4;6676:1;6669:15;6558:136;-1:-1:-1;6710:9:76;;6500:225::o;6730:339::-;6873:2;6858:18;;6906:1;6895:13;;6885:144;;6951:10;6946:3;6942:20;6939:1;6932:31;6986:4;6983:1;6976:15;7014:4;7011:1;7004:15;6885:144;7038:25;;;6730:339;:::o;7353:426::-;7482:3;7520:6;7514:13;7545:1;7555:129;7569:6;7566:1;7563:13;7555:129;;;7667:4;7651:14;;;7647:25;;7641:32;7628:11;;;7621:53;7584:12;7555:129;;;7702:6;7699:1;7696:13;7693:48;;;7737:1;7728:6;7723:3;7719:16;7712:27;7693:48;-1:-1:-1;7757:16:76;;;;;7353:426;-1:-1:-1;;7353:426:76:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "changeKernel(address)": "4657b36c",
    "configureDependencies()": "9459b875",
    "drip(uint8)": "70fef9f6",
    "dripAmount(uint8)": "cd3a8861",
    "dripInterval()": "6a214811",
    "dripTestAmounts()": "1a624b17",
    "isActive()": "22f3e2d4",
    "kernel()": "d4aae0c4",
    "lastDrip(address,uint8)": "558d0423",
    "requestPermissions()": "5924be70",
    "setActiveStatus(bool)": "ec7404b1",
    "setDripAmount(uint8,uint256)": "92c66728",
    "setDripInterval(uint256)": "a9a89db9",
    "token(uint8)": "fd00ea1c",
    "withdrawAll(address,uint8)": "2c35c40b"
  },
  "ast": {
    "absolutePath": "src/test/mocks/Faucet.sol",
    "id": 44762,
    "exportedSymbols": {
      "Actions": [
        22545
      ],
      "ERC20": [
        22445
      ],
      "Faucet": [
        44761
      ],
      "Instruction": [
        22551
      ],
      "InvalidKeycode": [
        65744
      ],
      "InvalidRole": [
        65749
      ],
      "Kernel": [
        23747
      ],
      "KernelAdapter": [
        22609
      ],
      "KernelAdapter_OnlyKernel": [
        22478
      ],
      "Kernel_AddressAlreadyHasRole": [
        22525
      ],
      "Kernel_AddressDoesNotHaveRole": [
        22532
      ],
      "Kernel_InvalidModuleUpgrade": [
        22510
      ],
      "Kernel_ModuleAlreadyInstalled": [
        22505
      ],
      "Kernel_OnlyAdmin": [
        22500
      ],
      "Kernel_OnlyExecutor": [
        22496
      ],
      "Kernel_PolicyAlreadyActivated": [
        22514
      ],
      "Kernel_PolicyNotActivated": [
        22518
      ],
      "Kernel_RoleDoesNotExist": [
        22537
      ],
      "Keycode": [
        22559
      ],
      "Module": [
        22670
      ],
      "Module_PolicyNotPermitted": [
        22482
      ],
      "Permissions": [
        22557
      ],
      "Policy": [
        22777
      ],
      "Policy_ModuleDoesNotExist": [
        22492
      ],
      "Policy_OnlyRole": [
        22487
      ],
      "ReentrancyGuard": [
        22471
      ],
      "Role": [
        22561
      ],
      "TargetNotAContract": [
        65739
      ],
      "TransferHelper": [
        26463
      ],
      "ensureContract": [
        65823
      ],
      "ensureValidKeycode": [
        65868
      ],
      "ensureValidRole": [
        65923
      ],
      "fromKeycode": [
        65777
      ],
      "fromRole": [
        65805
      ],
      "toKeycode": [
        65763
      ],
      "toRole": [
        65791
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:3063:54",
    "nodes": [
      {
        "id": 44427,
        "nodeType": "PragmaDirective",
        "src": "37:23:54",
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 44429,
        "nodeType": "ImportDirective",
        "src": "62:60:54",
        "absolutePath": "src/libraries/TransferHelper.sol",
        "file": "libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44762,
        "sourceUnit": 26464,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44428,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26463,
              "src": "70:14:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44431,
        "nodeType": "ImportDirective",
        "src": "123:47:54",
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44762,
        "sourceUnit": 22446,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44430,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22445,
              "src": "131:5:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44433,
        "nodeType": "ImportDirective",
        "src": "171:66:54",
        "absolutePath": "lib/solmate/src/utils/ReentrancyGuard.sol",
        "file": "solmate/utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44762,
        "sourceUnit": 22472,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44432,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22471,
              "src": "179:15:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44434,
        "nodeType": "ImportDirective",
        "src": "239:24:54",
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44762,
        "sourceUnit": 23748,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44761,
        "nodeType": "ContractDefinition",
        "src": "265:2834:54",
        "nodes": [
          {
            "id": 44442,
            "nodeType": "UsingForDirective",
            "src": "314:31:54",
            "global": false,
            "libraryName": {
              "id": 44439,
              "name": "TransferHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26463,
              "src": "320:14:54"
            },
            "typeName": {
              "id": 44441,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44440,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22445,
                "src": "339:5:54"
              },
              "referencedDeclaration": 22445,
              "src": "339:5:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$22445",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 44447,
            "nodeType": "ErrorDefinition",
            "src": "391:44:54",
            "errorSelector": "63dbac91",
            "name": "Faucet_InsufficientFunds",
            "nameLocation": "397:24:54",
            "parameters": {
              "id": 44446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44445,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "428:5:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44447,
                  "src": "422:11:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$44470",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 44444,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44443,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44470,
                      "src": "422:5:54"
                    },
                    "referencedDeclaration": 44470,
                    "src": "422:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$44470",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "421:13:54"
            }
          },
          {
            "id": 44452,
            "nodeType": "ErrorDefinition",
            "src": "440:41:54",
            "errorSelector": "d1510d6e",
            "name": "Faucet_DripOnCooldown",
            "nameLocation": "446:21:54",
            "parameters": {
              "id": 44451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44450,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "474:5:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44452,
                  "src": "468:11:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$44470",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 44449,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44448,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44470,
                      "src": "468:5:54"
                    },
                    "referencedDeclaration": 44470,
                    "src": "468:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$44470",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:13:54"
            }
          },
          {
            "id": 44457,
            "nodeType": "ErrorDefinition",
            "src": "486:37:54",
            "errorSelector": "9e73bbe7",
            "name": "Faucet_DripFailed",
            "nameLocation": "492:17:54",
            "parameters": {
              "id": 44456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44455,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "516:5:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44457,
                  "src": "510:11:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$44470",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 44454,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44453,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44470,
                      "src": "510:5:54"
                    },
                    "referencedDeclaration": 44470,
                    "src": "510:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$44470",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:13:54"
            }
          },
          {
            "id": 44466,
            "nodeType": "EventDefinition",
            "src": "569:58:54",
            "anonymous": false,
            "eventSelector": "5a472ace1fbd0245811452e40123d6cb2c0991f4c04c4e5ab26febfdfc469363",
            "name": "Drip",
            "nameLocation": "575:4:54",
            "parameters": {
              "id": 44465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44459,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "588:8:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44466,
                  "src": "580:16:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44462,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "604:5:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44466,
                  "src": "598:11:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$44470",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 44461,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44460,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44470,
                      "src": "598:5:54"
                    },
                    "referencedDeclaration": 44470,
                    "src": "598:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$44470",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44464,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "619:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44466,
                  "src": "611:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "579:47:54"
            }
          },
          {
            "id": 44470,
            "nodeType": "EnumDefinition",
            "src": "673:60:54",
            "canonicalName": "Faucet.Asset",
            "members": [
              {
                "id": 44467,
                "name": "ETH",
                "nameLocation": "694:3:54",
                "nodeType": "EnumValue",
                "src": "694:3:54"
              },
              {
                "id": 44468,
                "name": "OHM",
                "nameLocation": "707:3:54",
                "nodeType": "EnumValue",
                "src": "707:3:54"
              },
              {
                "id": 44469,
                "name": "RESERVE",
                "nameLocation": "720:7:54",
                "nodeType": "EnumValue",
                "src": "720:7:54"
              }
            ],
            "name": "Asset",
            "nameLocation": "678:5:54"
          },
          {
            "id": 44475,
            "nodeType": "VariableDeclaration",
            "src": "787:43:54",
            "constant": false,
            "functionSelector": "cd3a8861",
            "mutability": "mutable",
            "name": "dripAmount",
            "nameLocation": "820:10:54",
            "scope": 44761,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$",
              "typeString": "mapping(enum Faucet.Asset => uint256)"
            },
            "typeName": {
              "id": 44474,
              "keyType": {
                "id": 44472,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 44471,
                  "name": "Asset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44470,
                  "src": "795:5:54"
                },
                "referencedDeclaration": 44470,
                "src": "795:5:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Asset_$44470",
                  "typeString": "enum Faucet.Asset"
                }
              },
              "nodeType": "Mapping",
              "src": "787:25:54",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$",
                "typeString": "mapping(enum Faucet.Asset => uint256)"
              },
              "valueType": {
                "id": 44473,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "804:7:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44481,
            "nodeType": "VariableDeclaration",
            "src": "836:36:54",
            "constant": false,
            "functionSelector": "fd00ea1c",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "867:5:54",
            "scope": 44761,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_contract$_ERC20_$22445_$",
              "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
            },
            "typeName": {
              "id": 44480,
              "keyType": {
                "id": 44477,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 44476,
                  "name": "Asset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44470,
                  "src": "844:5:54"
                },
                "referencedDeclaration": 44470,
                "src": "844:5:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Asset_$44470",
                  "typeString": "enum Faucet.Asset"
                }
              },
              "nodeType": "Mapping",
              "src": "836:23:54",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_contract$_ERC20_$22445_$",
                "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
              },
              "valueType": {
                "id": 44479,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 44478,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22445,
                  "src": "853:5:54"
                },
                "referencedDeclaration": 22445,
                "src": "853:5:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$22445",
                  "typeString": "contract ERC20"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44488,
            "nodeType": "VariableDeclaration",
            "src": "878:61:54",
            "constant": false,
            "functionSelector": "558d0423",
            "mutability": "mutable",
            "name": "lastDrip",
            "nameLocation": "931:8:54",
            "scope": 44761,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(enum Faucet.Asset => uint256))"
            },
            "typeName": {
              "id": 44487,
              "keyType": {
                "id": 44482,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "886:7:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "878:45:54",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(enum Faucet.Asset => uint256))"
              },
              "valueType": {
                "id": 44486,
                "keyType": {
                  "id": 44484,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 44483,
                    "name": "Asset",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 44470,
                    "src": "905:5:54"
                  },
                  "referencedDeclaration": 44470,
                  "src": "905:5:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$44470",
                    "typeString": "enum Faucet.Asset"
                  }
                },
                "nodeType": "Mapping",
                "src": "897:25:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$",
                  "typeString": "mapping(enum Faucet.Asset => uint256)"
                },
                "valueType": {
                  "id": 44485,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "914:7:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44490,
            "nodeType": "VariableDeclaration",
            "src": "945:27:54",
            "constant": false,
            "functionSelector": "6a214811",
            "mutability": "mutable",
            "name": "dripInterval",
            "nameLocation": "960:12:54",
            "scope": 44761,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44489,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "945:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44553,
            "nodeType": "FunctionDefinition",
            "src": "1023:470:54",
            "body": {
              "id": 44552,
              "nodeType": "Block",
              "src": "1238:255:54",
              "statements": [
                {
                  "expression": {
                    "id": 44518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44513,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44481,
                        "src": "1248:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_contract$_ERC20_$22445_$",
                          "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
                        }
                      },
                      "id": 44516,
                      "indexExpression": {
                        "expression": {
                          "id": 44514,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44470,
                          "src": "1254:5:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$44470_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 44515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "OHM",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44468,
                        "src": "1254:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$44470",
                          "typeString": "enum Faucet.Asset"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1248:16:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$22445",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44517,
                      "name": "ohm_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44496,
                      "src": "1267:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$22445",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1248:23:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22445",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 44519,
                  "nodeType": "ExpressionStatement",
                  "src": "1248:23:54"
                },
                {
                  "expression": {
                    "id": 44525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44520,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44481,
                        "src": "1281:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_contract$_ERC20_$22445_$",
                          "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
                        }
                      },
                      "id": 44523,
                      "indexExpression": {
                        "expression": {
                          "id": 44521,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44470,
                          "src": "1287:5:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$44470_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 44522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "RESERVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44469,
                        "src": "1287:13:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$44470",
                          "typeString": "enum Faucet.Asset"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1281:20:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$22445",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44524,
                      "name": "reserve_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44499,
                      "src": "1304:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$22445",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1281:31:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22445",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 44526,
                  "nodeType": "ExpressionStatement",
                  "src": "1281:31:54"
                },
                {
                  "expression": {
                    "id": 44532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44527,
                        "name": "dripAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44475,
                        "src": "1323:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$",
                          "typeString": "mapping(enum Faucet.Asset => uint256)"
                        }
                      },
                      "id": 44530,
                      "indexExpression": {
                        "expression": {
                          "id": 44528,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44470,
                          "src": "1334:5:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$44470_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 44529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44467,
                        "src": "1334:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$44470",
                          "typeString": "enum Faucet.Asset"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1323:21:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44531,
                      "name": "ethDrip_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44501,
                      "src": "1347:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1323:32:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44533,
                  "nodeType": "ExpressionStatement",
                  "src": "1323:32:54"
                },
                {
                  "expression": {
                    "id": 44539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44534,
                        "name": "dripAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44475,
                        "src": "1365:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$",
                          "typeString": "mapping(enum Faucet.Asset => uint256)"
                        }
                      },
                      "id": 44537,
                      "indexExpression": {
                        "expression": {
                          "id": 44535,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44470,
                          "src": "1376:5:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$44470_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 44536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "OHM",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44468,
                        "src": "1376:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$44470",
                          "typeString": "enum Faucet.Asset"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1365:21:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44538,
                      "name": "ohmDrip_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44503,
                      "src": "1389:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1365:32:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44540,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:32:54"
                },
                {
                  "expression": {
                    "id": 44546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44541,
                        "name": "dripAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44475,
                        "src": "1407:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$",
                          "typeString": "mapping(enum Faucet.Asset => uint256)"
                        }
                      },
                      "id": 44544,
                      "indexExpression": {
                        "expression": {
                          "id": 44542,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44470,
                          "src": "1418:5:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$44470_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 44543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "RESERVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44469,
                        "src": "1418:13:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$44470",
                          "typeString": "enum Faucet.Asset"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1407:25:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44545,
                      "name": "reserveDrip_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44505,
                      "src": "1435:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1407:40:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44547,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:40:54"
                },
                {
                  "expression": {
                    "id": 44550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44548,
                      "name": "dripInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44490,
                      "src": "1458:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44549,
                      "name": "dripInterval_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44507,
                      "src": "1473:13:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1458:28:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44551,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:28:54"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 44510,
                    "name": "kernel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44493,
                    "src": "1229:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$23747",
                      "typeString": "contract Kernel"
                    }
                  }
                ],
                "id": 44511,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 44509,
                  "name": "Policy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22777,
                  "src": "1222:6:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "1222:15:54"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44493,
                  "mutability": "mutable",
                  "name": "kernel_",
                  "nameLocation": "1051:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44553,
                  "src": "1044:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Kernel_$23747",
                    "typeString": "contract Kernel"
                  },
                  "typeName": {
                    "id": 44492,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44491,
                      "name": "Kernel",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23747,
                      "src": "1044:6:54"
                    },
                    "referencedDeclaration": 23747,
                    "src": "1044:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$23747",
                      "typeString": "contract Kernel"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44496,
                  "mutability": "mutable",
                  "name": "ohm_",
                  "nameLocation": "1074:4:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44553,
                  "src": "1068:10:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$22445",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 44495,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44494,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 22445,
                      "src": "1068:5:54"
                    },
                    "referencedDeclaration": 22445,
                    "src": "1068:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22445",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44499,
                  "mutability": "mutable",
                  "name": "reserve_",
                  "nameLocation": "1094:8:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44553,
                  "src": "1088:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$22445",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 44498,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44497,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 22445,
                      "src": "1088:5:54"
                    },
                    "referencedDeclaration": 22445,
                    "src": "1088:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22445",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44501,
                  "mutability": "mutable",
                  "name": "ethDrip_",
                  "nameLocation": "1120:8:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44553,
                  "src": "1112:16:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44503,
                  "mutability": "mutable",
                  "name": "ohmDrip_",
                  "nameLocation": "1146:8:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44553,
                  "src": "1138:16:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44505,
                  "mutability": "mutable",
                  "name": "reserveDrip_",
                  "nameLocation": "1172:12:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44553,
                  "src": "1164:20:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44507,
                  "mutability": "mutable",
                  "name": "dripInterval_",
                  "nameLocation": "1202:13:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44553,
                  "src": "1194:21:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1034:187:54"
            },
            "returnParameters": {
              "id": 44512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1238:0:54"
            },
            "scope": 44761,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44650,
            "nodeType": "FunctionDefinition",
            "src": "1548:698:54",
            "body": {
              "id": 44649,
              "nodeType": "Block",
              "src": "1596:650:54",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 44561,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1610:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 44562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1610:15:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 44570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 44563,
                            "name": "lastDrip",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44488,
                            "src": "1628:8:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(enum Faucet.Asset => uint256))"
                            }
                          },
                          "id": 44566,
                          "indexExpression": {
                            "expression": {
                              "id": 44564,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1637:3:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 44565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1637:10:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1628:20:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$",
                            "typeString": "mapping(enum Faucet.Asset => uint256)"
                          }
                        },
                        "id": 44568,
                        "indexExpression": {
                          "id": 44567,
                          "name": "asset_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44556,
                          "src": "1649:6:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Asset_$44470",
                            "typeString": "enum Faucet.Asset"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1628:28:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 44569,
                        "name": "dripInterval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44490,
                        "src": "1659:12:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1628:43:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1610:61:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44576,
                  "nodeType": "IfStatement",
                  "src": "1606:115:54",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 44573,
                          "name": "asset_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44556,
                          "src": "1714:6:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Asset_$44470",
                            "typeString": "enum Faucet.Asset"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Asset_$44470",
                            "typeString": "enum Faucet.Asset"
                          }
                        ],
                        "id": 44572,
                        "name": "Faucet_DripOnCooldown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44452,
                        "src": "1692:21:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_enum$_Asset_$44470_$returns$__$",
                          "typeString": "function (enum Faucet.Asset) pure"
                        }
                      },
                      "id": 44574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1692:29:54",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44575,
                    "nodeType": "RevertStatement",
                    "src": "1685:36:54"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Asset_$44470",
                      "typeString": "enum Faucet.Asset"
                    },
                    "id": 44580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44577,
                      "name": "asset_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44556,
                      "src": "1736:6:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Asset_$44470",
                        "typeString": "enum Faucet.Asset"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 44578,
                        "name": "Asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44470,
                        "src": "1746:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Asset_$44470_$",
                          "typeString": "type(enum Faucet.Asset)"
                        }
                      },
                      "id": 44579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44467,
                      "src": "1746:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Asset_$44470",
                        "typeString": "enum Faucet.Asset"
                      }
                    },
                    "src": "1736:19:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 44647,
                    "nodeType": "Block",
                    "src": "2023:217:54",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 44630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 44624,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2073:4:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Faucet_$44761",
                                      "typeString": "contract Faucet"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Faucet_$44761",
                                      "typeString": "contract Faucet"
                                    }
                                  ],
                                  "id": 44623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2065:7:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 44622,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2065:7:54",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 44625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2065:13:54",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 44618,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44481,
                                  "src": "2041:5:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_contract$_ERC20_$22445_$",
                                    "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
                                  }
                                },
                                "id": 44620,
                                "indexExpression": {
                                  "id": 44619,
                                  "name": "asset_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44556,
                                  "src": "2047:6:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Asset_$44470",
                                    "typeString": "enum Faucet.Asset"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2041:13:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$22445",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 44621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22088,
                              "src": "2041:23:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 44626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2041:38:54",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 44627,
                              "name": "dripAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44475,
                              "src": "2082:10:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$",
                                "typeString": "mapping(enum Faucet.Asset => uint256)"
                              }
                            },
                            "id": 44629,
                            "indexExpression": {
                              "id": 44628,
                              "name": "asset_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44556,
                              "src": "2093:6:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Asset_$44470",
                                "typeString": "enum Faucet.Asset"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2082:18:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2041:59:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44635,
                        "nodeType": "IfStatement",
                        "src": "2037:120:54",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 44632,
                                "name": "asset_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44556,
                                "src": "2150:6:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Asset_$44470",
                                  "typeString": "enum Faucet.Asset"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Asset_$44470",
                                  "typeString": "enum Faucet.Asset"
                                }
                              ],
                              "id": 44631,
                              "name": "Faucet_InsufficientFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44447,
                              "src": "2125:24:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_enum$_Asset_$44470_$returns$__$",
                                "typeString": "function (enum Faucet.Asset) pure"
                              }
                            },
                            "id": 44633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2125:32:54",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 44634,
                          "nodeType": "RevertStatement",
                          "src": "2118:39:54"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 44640,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2198:3:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 44641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2198:10:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 44642,
                                "name": "dripAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44475,
                                "src": "2210:10:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$",
                                  "typeString": "mapping(enum Faucet.Asset => uint256)"
                                }
                              },
                              "id": 44644,
                              "indexExpression": {
                                "id": 44643,
                                "name": "asset_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44556,
                                "src": "2221:6:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Asset_$44470",
                                  "typeString": "enum Faucet.Asset"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2210:18:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 44636,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44481,
                                "src": "2171:5:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_contract$_ERC20_$22445_$",
                                  "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
                                }
                              },
                              "id": 44638,
                              "indexExpression": {
                                "id": 44637,
                                "name": "asset_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44556,
                                "src": "2177:6:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Asset_$44470",
                                  "typeString": "enum Faucet.Asset"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2171:13:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$22445",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 44639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26413,
                            "src": "2171:26:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$22445_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$22445_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 44645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2171:58:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44646,
                        "nodeType": "ExpressionStatement",
                        "src": "2171:58:54"
                      }
                    ]
                  },
                  "id": 44648,
                  "nodeType": "IfStatement",
                  "src": "1732:508:54",
                  "trueBody": {
                    "id": 44617,
                    "nodeType": "Block",
                    "src": "1757:260:54",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 44589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 44583,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1783:4:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Faucet_$44761",
                                    "typeString": "contract Faucet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Faucet_$44761",
                                    "typeString": "contract Faucet"
                                  }
                                ],
                                "id": 44582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1775:7:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 44581,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1775:7:54",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 44584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1775:13:54",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 44585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "1775:21:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 44586,
                              "name": "dripAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44475,
                              "src": "1799:10:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$",
                                "typeString": "mapping(enum Faucet.Asset => uint256)"
                              }
                            },
                            "id": 44588,
                            "indexExpression": {
                              "id": 44587,
                              "name": "asset_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44556,
                              "src": "1810:6:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Asset_$44470",
                                "typeString": "enum Faucet.Asset"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1799:18:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1775:42:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44594,
                        "nodeType": "IfStatement",
                        "src": "1771:87:54",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 44591,
                                "name": "asset_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44556,
                                "src": "1851:6:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Asset_$44470",
                                  "typeString": "enum Faucet.Asset"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Asset_$44470",
                                  "typeString": "enum Faucet.Asset"
                                }
                              ],
                              "id": 44590,
                              "name": "Faucet_InsufficientFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44447,
                              "src": "1826:24:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_enum$_Asset_$44470_$returns$__$",
                                "typeString": "function (enum Faucet.Asset) pure"
                              }
                            },
                            "id": 44592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1826:32:54",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 44593,
                          "nodeType": "RevertStatement",
                          "src": "1819:39:54"
                        }
                      },
                      {
                        "assignments": [
                          44596,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44596,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1878:7:54",
                            "nodeType": "VariableDeclaration",
                            "scope": 44617,
                            "src": "1873:12:54",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 44595,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1873:4:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 44609,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 44607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1943:2:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 44599,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "1899:3:54",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 44600,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1899:10:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 44598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1891:8:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 44597,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1891:8:54",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 44601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1891:19:54",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 44602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1891:24:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 44606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "baseExpression": {
                                  "id": 44603,
                                  "name": "dripAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44475,
                                  "src": "1923:10:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$",
                                    "typeString": "mapping(enum Faucet.Asset => uint256)"
                                  }
                                },
                                "id": 44605,
                                "indexExpression": {
                                  "id": 44604,
                                  "name": "asset_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44556,
                                  "src": "1934:6:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Asset_$44470",
                                    "typeString": "enum Faucet.Asset"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1923:18:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1891:51:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 44608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1891:55:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1872:74:54"
                      },
                      {
                        "condition": {
                          "id": 44611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1964:8:54",
                          "subExpression": {
                            "id": 44610,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44596,
                            "src": "1965:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44616,
                        "nodeType": "IfStatement",
                        "src": "1960:46:54",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 44613,
                                "name": "asset_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44556,
                                "src": "1999:6:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Asset_$44470",
                                  "typeString": "enum Faucet.Asset"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Asset_$44470",
                                  "typeString": "enum Faucet.Asset"
                                }
                              ],
                              "id": 44612,
                              "name": "Faucet_DripFailed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44457,
                              "src": "1981:17:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_enum$_Asset_$44470_$returns$__$",
                                "typeString": "function (enum Faucet.Asset) pure"
                              }
                            },
                            "id": 44614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1981:25:54",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 44615,
                          "nodeType": "RevertStatement",
                          "src": "1974:32:54"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "70fef9f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44559,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44558,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22470,
                  "src": "1583:12:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "1583:12:54"
              }
            ],
            "name": "drip",
            "nameLocation": "1557:4:54",
            "parameters": {
              "id": 44557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44556,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "1568:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44650,
                  "src": "1562:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$44470",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 44555,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44554,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44470,
                      "src": "1562:5:54"
                    },
                    "referencedDeclaration": 44470,
                    "src": "1562:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$44470",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1561:14:54"
            },
            "returnParameters": {
              "id": 44560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1596:0:54"
            },
            "scope": 44761,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44669,
            "nodeType": "FunctionDefinition",
            "src": "2252:122:54",
            "body": {
              "id": 44668,
              "nodeType": "Block",
              "src": "2288:86:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44654,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44470,
                          "src": "2303:5:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$44470_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 44655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44467,
                        "src": "2303:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$44470",
                          "typeString": "enum Faucet.Asset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Asset_$44470",
                          "typeString": "enum Faucet.Asset"
                        }
                      ],
                      "id": 44653,
                      "name": "drip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44650,
                      "src": "2298:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Asset_$44470_$returns$__$",
                        "typeString": "function (enum Faucet.Asset)"
                      }
                    },
                    "id": 44656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2298:15:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44657,
                  "nodeType": "ExpressionStatement",
                  "src": "2298:15:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44659,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44470,
                          "src": "2328:5:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$44470_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 44660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "OHM",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44468,
                        "src": "2328:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$44470",
                          "typeString": "enum Faucet.Asset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Asset_$44470",
                          "typeString": "enum Faucet.Asset"
                        }
                      ],
                      "id": 44658,
                      "name": "drip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44650,
                      "src": "2323:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Asset_$44470_$returns$__$",
                        "typeString": "function (enum Faucet.Asset)"
                      }
                    },
                    "id": 44661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2323:15:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44662,
                  "nodeType": "ExpressionStatement",
                  "src": "2323:15:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44664,
                          "name": "Asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44470,
                          "src": "2353:5:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Asset_$44470_$",
                            "typeString": "type(enum Faucet.Asset)"
                          }
                        },
                        "id": 44665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "RESERVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44469,
                        "src": "2353:13:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$44470",
                          "typeString": "enum Faucet.Asset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Asset_$44470",
                          "typeString": "enum Faucet.Asset"
                        }
                      ],
                      "id": 44663,
                      "name": "drip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44650,
                      "src": "2348:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Asset_$44470_$returns$__$",
                        "typeString": "function (enum Faucet.Asset)"
                      }
                    },
                    "id": 44666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2348:19:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44667,
                  "nodeType": "ExpressionStatement",
                  "src": "2348:19:54"
                }
              ]
            },
            "functionSelector": "1a624b17",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dripTestAmounts",
            "nameLocation": "2261:15:54",
            "parameters": {
              "id": 44651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2276:2:54"
            },
            "returnParameters": {
              "id": 44652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2288:0:54"
            },
            "scope": 44761,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44673,
            "nodeType": "FunctionDefinition",
            "src": "2380:29:54",
            "body": {
              "id": 44672,
              "nodeType": "Block",
              "src": "2407:2:54",
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2387:2:54"
            },
            "returnParameters": {
              "id": 44671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2407:0:54"
            },
            "scope": 44761,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44729,
            "nodeType": "FunctionDefinition",
            "src": "2464:369:54",
            "body": {
              "id": 44728,
              "nodeType": "Block",
              "src": "2546:287:54",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Asset_$44470",
                      "typeString": "enum Faucet.Asset"
                    },
                    "id": 44687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44684,
                      "name": "asset_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44678,
                      "src": "2560:6:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Asset_$44470",
                        "typeString": "enum Faucet.Asset"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 44685,
                        "name": "Asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44470,
                        "src": "2570:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Asset_$44470_$",
                          "typeString": "type(enum Faucet.Asset)"
                        }
                      },
                      "id": 44686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44467,
                      "src": "2570:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Asset_$44470",
                        "typeString": "enum Faucet.Asset"
                      }
                    },
                    "src": "2560:19:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 44726,
                    "nodeType": "Block",
                    "src": "2731:96:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44714,
                              "name": "to_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44675,
                              "src": "2772:3:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 44721,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2809:4:54",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Faucet_$44761",
                                        "typeString": "contract Faucet"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Faucet_$44761",
                                        "typeString": "contract Faucet"
                                      }
                                    ],
                                    "id": 44720,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2801:7:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 44719,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2801:7:54",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 44722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2801:13:54",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "id": 44715,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44481,
                                    "src": "2777:5:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_contract$_ERC20_$22445_$",
                                      "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
                                    }
                                  },
                                  "id": 44717,
                                  "indexExpression": {
                                    "id": 44716,
                                    "name": "asset_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44678,
                                    "src": "2783:6:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Asset_$44470",
                                      "typeString": "enum Faucet.Asset"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2777:13:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$22445",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 44718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 22088,
                                "src": "2777:23:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 44723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2777:38:54",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 44710,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44481,
                                "src": "2745:5:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_contract$_ERC20_$22445_$",
                                  "typeString": "mapping(enum Faucet.Asset => contract ERC20)"
                                }
                              },
                              "id": 44712,
                              "indexExpression": {
                                "id": 44711,
                                "name": "asset_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44678,
                                "src": "2751:6:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Asset_$44470",
                                  "typeString": "enum Faucet.Asset"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2745:13:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$22445",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 44713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26413,
                            "src": "2745:26:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$22445_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$22445_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 44724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2745:71:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44725,
                        "nodeType": "ExpressionStatement",
                        "src": "2745:71:54"
                      }
                    ]
                  },
                  "id": 44727,
                  "nodeType": "IfStatement",
                  "src": "2556:271:54",
                  "trueBody": {
                    "id": 44709,
                    "nodeType": "Block",
                    "src": "2581:144:54",
                    "statements": [
                      {
                        "assignments": [
                          44689,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44689,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2601:7:54",
                            "nodeType": "VariableDeclaration",
                            "scope": 44709,
                            "src": "2596:12:54",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 44688,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2596:4:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 44703,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 44701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2662:2:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 44692,
                                    "name": "to_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44675,
                                    "src": "2622:3:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 44691,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2614:8:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 44690,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2614:8:54",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 44693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2614:12:54",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 44694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2614:17:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 44700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 44697,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2647:4:54",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Faucet_$44761",
                                        "typeString": "contract Faucet"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Faucet_$44761",
                                        "typeString": "contract Faucet"
                                      }
                                    ],
                                    "id": 44696,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2639:7:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 44695,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2639:7:54",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 44698,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2639:13:54",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 44699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "2639:21:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2614:47:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 44702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2614:51:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2595:70:54"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44705,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44689,
                              "src": "2687:7:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5769746864726177204661696c6564",
                              "id": 44706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2696:17:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_544038b4753b2bdb650934475d09831c60eb7f6256f10d2a72bbe739349a33ab",
                                "typeString": "literal_string \"Withdraw Failed\""
                              },
                              "value": "Withdraw Failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_544038b4753b2bdb650934475d09831c60eb7f6256f10d2a72bbe739349a33ab",
                                "typeString": "literal_string \"Withdraw Failed\""
                              }
                            ],
                            "id": 44704,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2679:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 44707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2679:35:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44708,
                        "nodeType": "ExpressionStatement",
                        "src": "2679:35:54"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2c35c40b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6661756365745f61646d696e",
                    "id": 44681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2530:14:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4a716c395c3c7ce83857af4d7830b0a9767c28432e26864cdf103dcd8da41e32",
                      "typeString": "literal_string \"faucet_admin\""
                    },
                    "value": "faucet_admin"
                  }
                ],
                "id": 44682,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44680,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22712,
                  "src": "2521:8:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "2521:24:54"
              }
            ],
            "name": "withdrawAll",
            "nameLocation": "2473:11:54",
            "parameters": {
              "id": 44679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44675,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "2493:3:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44729,
                  "src": "2485:11:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44678,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "2504:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44729,
                  "src": "2498:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$44470",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 44677,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44676,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44470,
                      "src": "2498:5:54"
                    },
                    "referencedDeclaration": 44470,
                    "src": "2498:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$44470",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2484:27:54"
            },
            "returnParameters": {
              "id": 44683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2546:0:54"
            },
            "scope": 44761,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44742,
            "nodeType": "FunctionDefinition",
            "src": "2839:119:54",
            "body": {
              "id": 44741,
              "nodeType": "Block",
              "src": "2917:41:54",
              "statements": [
                {
                  "expression": {
                    "id": 44739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44737,
                      "name": "dripInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44490,
                      "src": "2927:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44738,
                      "name": "interval_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44731,
                      "src": "2942:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2927:24:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44740,
                  "nodeType": "ExpressionStatement",
                  "src": "2927:24:54"
                }
              ]
            },
            "functionSelector": "a9a89db9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6661756365745f61646d696e",
                    "id": 44734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2901:14:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4a716c395c3c7ce83857af4d7830b0a9767c28432e26864cdf103dcd8da41e32",
                      "typeString": "literal_string \"faucet_admin\""
                    },
                    "value": "faucet_admin"
                  }
                ],
                "id": 44735,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44733,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22712,
                  "src": "2892:8:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "2892:24:54"
              }
            ],
            "name": "setDripInterval",
            "nameLocation": "2848:15:54",
            "parameters": {
              "id": 44732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44731,
                  "mutability": "mutable",
                  "name": "interval_",
                  "nameLocation": "2872:9:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44742,
                  "src": "2864:17:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2864:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2863:19:54"
            },
            "returnParameters": {
              "id": 44736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2917:0:54"
            },
            "scope": 44761,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44760,
            "nodeType": "FunctionDefinition",
            "src": "2964:133:54",
            "body": {
              "id": 44759,
              "nodeType": "Block",
              "src": "3052:45:54",
              "statements": [
                {
                  "expression": {
                    "id": 44757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44753,
                        "name": "dripAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44475,
                        "src": "3062:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Asset_$44470_$_t_uint256_$",
                          "typeString": "mapping(enum Faucet.Asset => uint256)"
                        }
                      },
                      "id": 44755,
                      "indexExpression": {
                        "id": 44754,
                        "name": "asset_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44745,
                        "src": "3073:6:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Asset_$44470",
                          "typeString": "enum Faucet.Asset"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3062:18:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44756,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44747,
                      "src": "3083:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3062:28:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44758,
                  "nodeType": "ExpressionStatement",
                  "src": "3062:28:54"
                }
              ]
            },
            "functionSelector": "92c66728",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6661756365745f61646d696e",
                    "id": 44750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3036:14:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4a716c395c3c7ce83857af4d7830b0a9767c28432e26864cdf103dcd8da41e32",
                      "typeString": "literal_string \"faucet_admin\""
                    },
                    "value": "faucet_admin"
                  }
                ],
                "id": 44751,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44749,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22712,
                  "src": "3027:8:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "3027:24:54"
              }
            ],
            "name": "setDripAmount",
            "nameLocation": "2973:13:54",
            "parameters": {
              "id": 44748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44745,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "2993:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44760,
                  "src": "2987:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Asset_$44470",
                    "typeString": "enum Faucet.Asset"
                  },
                  "typeName": {
                    "id": 44744,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44743,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44470,
                      "src": "2987:5:54"
                    },
                    "referencedDeclaration": 44470,
                    "src": "2987:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Asset_$44470",
                      "typeString": "enum Faucet.Asset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44747,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "3009:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 44760,
                  "src": "3001:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3001:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2986:31:54"
            },
            "returnParameters": {
              "id": 44752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3052:0:54"
            },
            "scope": 44761,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44435,
              "name": "Policy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22777,
              "src": "284:6:54"
            },
            "id": 44436,
            "nodeType": "InheritanceSpecifier",
            "src": "284:6:54"
          },
          {
            "baseName": {
              "id": 44437,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22471,
              "src": "292:15:54"
            },
            "id": 44438,
            "nodeType": "InheritanceSpecifier",
            "src": "292:15:54"
          }
        ],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44761,
          22471,
          22777,
          22609
        ],
        "name": "Faucet",
        "nameLocation": "274:6:54",
        "scope": 44762,
        "usedErrors": [
          22478,
          22487,
          44447,
          44452,
          44457
        ]
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 54
}