{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_OnlyWhitelistedMarketsCanCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_amountsForMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_batchToTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_callbackMustReceiveTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_whitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCreator",
      "outputs": [
        {
          "internalType": "contract UserFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1632:21673:68:-:0;;;1572:26:0;;;-1:-1:-1;;165:28:1;;;;;1632:21673:68;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1632:21673:68:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2545:6092;;;:::i;:::-;;15654:1126;;;:::i;316:38:1:-;;-1:-1:-1;;;;;;;;;;;316:38:1;;;;;-1:-1:-1;;;;;302:32:76;;;284:51;;272:2;257:18;316:38:1;;;;;;;;22490:813:68;;;:::i;18573:3824::-;;;:::i;11000:3264::-;;;:::i;18011:556::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;607:14:76;;600:22;582:41;;570:2;555:18;1819:584:0;442:187:76;1705:30:68;;;;;-1:-1:-1;;;;;1705:30:68;;;16919:1086;;;:::i;14270:1378::-;;;:::i;165:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;2545:6092:68;2579:32;;-1:-1:-1;;;2579:32:68;;2587:23;2579:32;;;1026:25:76;-1:-1:-1;;;;;;;;;;;245:64:1;2579:7:68;;999:18:76;;2579:32:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2703:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2689:11:68;:31;;-1:-1:-1;;;;;;2689:31:68;-1:-1:-1;;;;;2689:31:68;;;;;;;;;2820:21;;-1:-1:-1;;;2820:21:68;;2839:1;2820:21;;;1026:25:76;-1:-1:-1;;2689:31:68;2820:18;;999::76;;2820:21:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2820:21:68;;;;;;;;;;;;:::i;:::-;2795:46;;2863:5;2869:1;2863:8;;;;;;;;:::i;:::-;;;;;;;2855:5;;:16;;;;;-1:-1:-1;;;;;2855:16:68;;;;;-1:-1:-1;;;;;2855:16:68;;;;;;2891:5;2897:1;2891:8;;;;;;;;:::i;:::-;;;;;;;2885:3;;:14;;;;;-1:-1:-1;;;;;2885:14:68;;;;;-1:-1:-1;;;;;2885:14:68;;;;;;2924:5;2930:1;2924:8;;;;;;;;:::i;:::-;;;;;;;2913;;:19;;;;;-1:-1:-1;;;;;2913:19:68;;;;;-1:-1:-1;;;;;2913:19:68;;;;;;2955:5;2961:1;2955:8;;;;;;;;:::i;:::-;;;;;;;;;;;2946:6;:17;;-1:-1:-1;;;;;;2946:17:68;-1:-1:-1;;;;;2946:17:68;;;;;;3003:8;;2984:58;;3003:8;;;-1:-1:-1;;2984:58:68;;;:::i;:::-;-1:-1:-1;;;;;3178:15:76;;;3160:34;;3230:15;;3225:2;3210:18;;3203:43;3110:2;3095:18;2984:58:68;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2977:4:68;:65;;-1:-1:-1;;;;;;2977:65:68;-1:-1:-1;;;;;2977:65:68;;;;;;;;;3128:8;;3109:34;;3128:8;;;3109:34;;;:::i;:::-;-1:-1:-1;;;;;3178:15:76;;;3160:34;;3230:15;;3225:2;3210:18;;3203:43;3110:2;3095:18;3109:34:68;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3096:10:68;:47;;-1:-1:-1;;;;;;3096:47:68;-1:-1:-1;;;;;3096:47:68;;;;;;;;;3190:8;;3222:4;;3166:61;;3190:8;;;;;;3222:4;;;3166:61;;;:::i;:::-;-1:-1:-1;;;;;3925:15:76;;;3907:34;;3977:15;;;3972:2;3957:18;;3950:43;4029:15;;;4024:2;4009:18;;4002:43;4081:15;;;4076:2;4061:18;;4054:43;3856:3;3841:19;3166:61:68;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3157:6:68;:70;;-1:-1:-1;;;;;;3157:70:68;-1:-1:-1;;;;;3157:70:68;;;;;;;;;3283:10;;3295:8;;3305:4;;3254:56;;3157:70;;3283:10;;;;3295:8;;;;3305:4;;3254:56;;;:::i;:::-;-1:-1:-1;;;;;3925:15:76;;;3907:34;;3977:15;;;3972:2;3957:18;;3950:43;4029:15;;;4024:2;4009:18;;4002:43;4081:15;;;4076:2;4061:18;;4054:43;3856:3;3841:19;3254:56:68;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3241:10:68;:69;;-1:-1:-1;;;;;;3241:69:68;-1:-1:-1;;;;;3241:69:68;;;;;;3389:8;;3380:18;;-1:-1:-1;;;3380:18:68;;3389:8;;3380:18;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;3380:8:68;;257:18:76;;3380::68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3412:10:68;;3442;;3412:41;;-1:-1:-1;;;3412:41:68;;-1:-1:-1;;;;;3442:10:68;;;3412:41;;;284:51:76;3412:10:68;;;-1:-1:-1;3412:29:68;;-1:-1:-1;257:18:76;;3412:41:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2730:734;3559:1;3529:32;;;;;:::i;:::-;5434:2:76;5416:21;;;5473:1;5453:18;;;5446:29;-1:-1:-1;;;5506:3:76;5491:19;;5484:38;5560:3;5553:4;5538:20;;5531:33;;;5601:1;5580:19;;;5573:30;-1:-1:-1;;;5634:3:76;5619:19;;5612:34;5730:4;5718:17;;;-1:-1:-1;5698:18:76;;5691:45;5678:3;5663:19;3529:32:68;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3523:3:68;:38;;-1:-1:-1;;;;;;3523:38:68;-1:-1:-1;;;;;3523:38:68;;;;;;;;;;3585:35;;3617:2;;3585:35;;;:::i;:::-;6085:2:76;6067:21;;;6124:1;6104:18;;;6097:29;-1:-1:-1;;;6157:3:76;6142:19;;6135:38;6211:3;6204:4;6189:20;;6182:33;;;6252:1;6231:19;;;6224:30;-1:-1:-1;;;6285:3:76;6270:19;;6263:34;6381:4;6369:17;;;-1:-1:-1;6349:18:76;;6342:45;6329:3;6314:19;3585:35:68;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3575:7:68;:45;;-1:-1:-1;;;;;;3575:45:68;-1:-1:-1;;;;;3575:45:68;;;;;;;;;;3642:33;;;;;:::i;:::-;6736:2:76;6718:21;;;6775:1;6755:18;;;6748:29;-1:-1:-1;;;6808:3:76;6793:19;;6786:36;6860:3;6853:4;6838:20;;6831:33;;;6901:1;6880:19;;;6873:30;-1:-1:-1;;;6934:3:76;6919:19;;6912:34;7030:4;7018:17;;;-1:-1:-1;6998:18:76;;6991:45;6978:3;6963:19;3642:33:68;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3634:5:68;:41;;-1:-1:-1;;;;;;3634:41:68;-1:-1:-1;;;;;3634:41:68;;;;;;;;;;3749:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3740:6:68;:21;;-1:-1:-1;;;;;;3740:21:68;-1:-1:-1;;;;;3740:21:68;;;;;;;;;3866:38;;3895:7;;3866:38;;;:::i;:::-;-1:-1:-1;;;;;7356:32:76;;;7338:51;;7437:14;7425:27;7420:2;7405:18;;7398:55;7326:2;7311:18;3866:38:68;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3858:5:68;:46;;-1:-1:-1;;;;;;3858:46:68;-1:-1:-1;;;;;3858:46:68;;;;;;3960:6;;3926:162;;;;;;;;3991:3;;;;3926:162;;4003:7;;;;3926:162;;;;;;;;;;;;;;;4039:3;3926:162;;4053:4;3926:162;;;;;;;4068:4;3926:162;;;;;;3960:6;;;;;3926:162;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3918:5:68;:170;;-1:-1:-1;;;;;;3918:170:68;-1:-1:-1;;;;;3918:170:68;;;;;;4133:6;;4113:27;;4133:6;;;4113:27;;;:::i;:::-;-1:-1:-1;;;;;302:32:76;;;284:51;;272:2;257:18;4113:27:68;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4102:8:68;:38;;-1:-1:-1;;;;;;4102:38:68;-1:-1:-1;;;;;4102:38:68;;;;;;4181:6;;4197:3;;4163:39;;4181:6;;;;4197:3;;4163:39;;;:::i;:::-;-1:-1:-1;;;;;3178:15:76;;;3160:34;;3230:15;;3225:2;3210:18;;3203:43;3110:2;3095:18;4163:39:68;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4154:6:68;:48;;-1:-1:-1;;;;;;4154:48:68;-1:-1:-1;;;;;4154:48:68;;;;;;4249:5;;:34;;-1:-1:-1;;;4249:34:68;;4272:10;4249:34;;;1026:25:76;4249:5:68;;;:22;;999:18:76;;4249:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4297:5:68;;:30;;-1:-1:-1;;;4297:30:68;;4316:10;4297:30;;;1026:25:76;-1:-1:-1;;;;;4297:5:68;;;;-1:-1:-1;4297:18:68;;-1:-1:-1;999:18:76;;4297:30:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4341:5:68;;:21;;-1:-1:-1;;;4341:21:68;;4359:2;4341:21;;;9498:36:76;-1:-1:-1;;;;;4341:5:68;;;;-1:-1:-1;4341:17:68;;-1:-1:-1;9471:18:76;;4341:21:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4462:6:68;;4494:10;;4508:3;;4445:67;;-1:-1:-1;;;;;4462:6:68;;;;-1:-1:-1;4494:10:68;;;;-1:-1:-1;4508:3:68;;;;4445:67;;;:::i;:::-;-1:-1:-1;;;;;9861:15:76;;;9843:34;;9913:15;;;9908:2;9893:18;;9886:43;9965:15;;;9960:2;9945:18;;9938:43;9793:2;9778:18;4445:67:68;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4434:8:68;:78;;-1:-1:-1;;;;;;4434:78:68;-1:-1:-1;;;;;4434:78:68;;;;;;;;;4600:6;;4648:10;;4570:615;;;;;;;;4711:3;;;;4570:615;;4723:7;;;;4570:615;;;;;;;;;;4434:78;4570:615;;;;4779:4;4570:615;;4830:6;4570:615;;;;;;;4878:7;4570:615;;;;4929:7;4570:615;;;;;;4985:4;4570:615;;;;;;;;5086:1;4570:615;;;;5135:1;4570:615;;;;;;4600:6;;;;4648:10;;;;;4434:78;4570:615;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4559:8:68;:626;;-1:-1:-1;;;;;;4559:626:68;-1:-1:-1;;;;;4559:626:68;;;;;;5282:8;;5273:18;;-1:-1:-1;;;5273:18:68;;5282:8;;5273:18;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;5273:8:68;;257:18:76;;5273::68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5305:10:68;;5346:8;;5305:57;;-1:-1:-1;;;5305:57:68;;-1:-1:-1;;;;;5346:8:68;;;5305:57;;;11261:51:76;5305:10:68;11328:18:76;;;11321:50;5305:10:68;;;-1:-1:-1;5305:32:68;;-1:-1:-1;11234:18:76;;5305:57:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5464:8:68;;5455:18;;-1:-1:-1;;;5455:18:68;;-1:-1:-1;;;;;5464:8:68;;;5455:18;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;5455:8:68;;-1:-1:-1;257:18:76;;5455::68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5487:10:68;;:53;;-1:-1:-1;;;5487:53:68;;5528:4;5487:53;;;11261:51:76;5487:10:68;11328:18:76;;;11321:50;-1:-1:-1;;;;;5487:10:68;;;;-1:-1:-1;5487:32:68;;-1:-1:-1;11234:18:76;;5487:53:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5653:6:68;;5705:5;;5653:59;;-1:-1:-1;;;5653:59:68;;-1:-1:-1;;;;;5653:6:68;;;;-1:-1:-1;5653:20:68;;-1:-1:-1;5653:59:68;;:6;;5705:5;;5653:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5726:6:68;;5778:5;;5726:59;;-1:-1:-1;;;5726:59:68;;-1:-1:-1;;;;;5726:6:68;;;;-1:-1:-1;5726:20:68;;-1:-1:-1;5726:59:68;;:6;;5778:5;;5726:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5799:6:68;;5851:8;;5799:62;;-1:-1:-1;;;5799:62:68;;-1:-1:-1;;;;;5799:6:68;;;;-1:-1:-1;5799:20:68;;-1:-1:-1;5799:62:68;;:6;;5851:8;;5799:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5875:6:68;;5927;;5875:60;;-1:-1:-1;;;5875:60:68;;-1:-1:-1;;;;;5875:6:68;;;;-1:-1:-1;5875:20:68;;-1:-1:-1;5875:60:68;;:6;;5927;;5875:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5983:6:68;;6036:8;;5983:63;;-1:-1:-1;;;5983:63:68;;-1:-1:-1;;;;;5983:6:68;;;;-1:-1:-1;5983:20:68;;-1:-1:-1;5983:63:68;;6004:22;;6036:8;;5983:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6060:6:68;;6113:8;;6060:63;;-1:-1:-1;;;6060:63:68;;-1:-1:-1;;;;;6060:6:68;;;;-1:-1:-1;6060:20:68;;-1:-1:-1;6060:63:68;;6081:22;;6113:8;;6060:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6230:6:68;;-1:-1:-1;;;;;6230:6:68;;-1:-1:-1;6230:16:68;;-1:-1:-1;;;;6275:8:68;;6230:54;;;;;;-1:-1:-1;;;;;;6230:54:68;;;;;;12025:25:76;;;;-1:-1:-1;;;;;6275:8:68;12066:18:76;;;12059:60;11998:18;;6230:54:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6298:6:68;;-1:-1:-1;;;;;6298:6:68;;-1:-1:-1;6298:16:68;;-1:-1:-1;;;;6352:8:68;;6298:64;;;;;;-1:-1:-1;;;;;;6298:64:68;;;;;;12025:25:76;;;;-1:-1:-1;;;;;6352:8:68;12066:18:76;;;12059:60;11998:18;;6298:64:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6376:6:68;;-1:-1:-1;;;;;6376:6:68;;-1:-1:-1;6376:16:68;;-1:-1:-1;;;;6420:6:68;;6376:51;;;;;;-1:-1:-1;;;;;;6376:51:68;;;;;;12025:25:76;;;;-1:-1:-1;;;;;6420:6:68;12066:18:76;;;12059:60;11998:18;;6376:51:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6441:6:68;;-1:-1:-1;;;;;6441:6:68;;-1:-1:-1;6441:16:68;;-1:-1:-1;;;;6484:8:68;;6441:52;;;;;;-1:-1:-1;;;;;;6441:52:68;;;;;;12025:25:76;;;;-1:-1:-1;;;;;6484:8:68;12066:18:76;;;12059:60;11998:18;;6441:52:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6544:6:68;;-1:-1:-1;;;;;6544:6:68;;-1:-1:-1;6544:16:68;;-1:-1:-1;;;;6599:8:68;;6544:65;;;;;;-1:-1:-1;;;;;;6544:65:68;;;;;;12025:25:76;;;;-1:-1:-1;;;;;6599:8:68;12066:18:76;;;12059:60;11998:18;;6544:65:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6623:6:68;;-1:-1:-1;;;;;6623:6:68;;-1:-1:-1;6623:16:68;;-1:-1:-1;;;;6670:6:68;;6623:54;;;;;;-1:-1:-1;;;;;;6623:54:68;;;;;;12025:25:76;;;;-1:-1:-1;;;;;6670:6:68;12066:18:76;;;12059:60;11998:18;;6623:54:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6691:6:68;;-1:-1:-1;;;;;6691:6:68;;-1:-1:-1;6691:16:68;;-1:-1:-1;;;;6734:8:68;;6691:52;;;;;;-1:-1:-1;;;;;;6691:52:68;;;;;;12025:25:76;;;;-1:-1:-1;;;;;6734:8:68;12066:18:76;;;12059:60;11998:18;;6691:52:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6814:8:68;;6805:18;;-1:-1:-1;;;6805:18:68;;-1:-1:-1;;;;;6814:8:68;;;6805:18;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;6805:8:68;;-1:-1:-1;257:18:76;;6805::68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6833:8:68;;6854;;6833:30;;-1:-1:-1;;;6833:30:68;;-1:-1:-1;;;;;6854:8:68;;;6833:30;;;284:51:76;6833:8:68;;;-1:-1:-1;6833:20:68;;-1:-1:-1;257:18:76;;6833:30:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6919:8:68;;6910:18;;-1:-1:-1;;;6910:18:68;;-1:-1:-1;;;;;6919:8:68;;;6910:18;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;6910:8:68;;-1:-1:-1;257:18:76;;6910::68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6938:8;;;;;;;;;-1:-1:-1;;;;;6938:8:68;-1:-1:-1;;;;;6938:19:68;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7119:3:68;;7128:5;;7045:15;;-1:-1:-1;7092:16:68;;-1:-1:-1;;;;;;7119:3:68;;;;:8;;7128:5;7135:12;7045:15;7145:2;7135:12;:::i;:::-;7119:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7158:7:68;;7171:5;;-1:-1:-1;;;;;7158:7:68;;;;-1:-1:-1;7158:12:68;;-1:-1:-1;7171:5:68;7178:16;:11;7192:2;7178:16;:::i;:::-;7158:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7206:7:68;;7227:8;;-1:-1:-1;;;;;7206:7:68;;;;-1:-1:-1;7206:12:68;;-1:-1:-1;7227:8:68;7238:17;:11;7252:3;7238:17;:::i;:::-;7206:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7347:5:68;;7338:15;;-1:-1:-1;;;7338:15:68;;-1:-1:-1;;;;;7347:5:68;;;7338:15;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;7338:8:68;;-1:-1:-1;257:18:76;;7338:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7363:3:68;;7383:8;;-1:-1:-1;;;;;7363:3:68;;;;-1:-1:-1;7363:11:68;;-1:-1:-1;7383:8:68;7394:12;:7;7404:2;7394:12;:::i;:::-;7363:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7426:5:68;;7417:15;;-1:-1:-1;;;7417:15:68;;-1:-1:-1;;;;;7426:5:68;;;7417:15;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;7417:8:68;;257:18:76;;7417:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7442:7:68;;7466:8;;-1:-1:-1;;;;;7442:7:68;;;;-1:-1:-1;7442:15:68;;-1:-1:-1;7466:8:68;7477:16;:11;7491:2;7477:16;:::i;:::-;7442:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7514:5:68;;7505:15;;-1:-1:-1;;;7505:15:68;;-1:-1:-1;;;;;7514:5:68;;;7505:15;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;7505:8:68;;257:18:76;;7505:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7530:3:68;;7550:6;;-1:-1:-1;;;;;7530:3:68;;;;-1:-1:-1;7530:11:68;;-1:-1:-1;7550:6:68;7559:12;:7;7569:2;7559:12;:::i;:::-;7530:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7591:5:68;;7582:15;;-1:-1:-1;;;7582:15:68;;-1:-1:-1;;;;;7591:5:68;;;7582:15;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;7582:8:68;;257:18:76;;7582:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7607:7:68;;7631:6;;-1:-1:-1;;;;;7607:7:68;;;;-1:-1:-1;7607:15:68;;-1:-1:-1;7631:6:68;7640:16;:11;7654:2;7640:16;:::i;:::-;7607:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7789:7:68;;7798:3;;7776:35;;-1:-1:-1;;;;;7789:7:68;;;;7798:3;7789:7;;7809:1;7776:12;:35::i;:::-;7766:7;:45;7888:3;;7893:7;;7875:35;;-1:-1:-1;;;;;7888:3:68;;;;7893:7;7888:3;;7908:1;7875:12;:35::i;:::-;7865:7;:45;7989:3;;7976:31;;-1:-1:-1;;;;;7989:3:68;;;;8005:1;7976:12;:31::i;:::-;7961:12;:46;8090:7;;8077:40;;-1:-1:-1;;;;;8090:7:68;;;-1:-1:-1;;8115:1:68;8077:12;:40::i;:::-;8062:12;:55;8221:7;;8230:3;;8208:35;;-1:-1:-1;;;;;8221:7:68;;;;8230:3;8221:7;;8241:1;8208:12;:35::i;:::-;8187:18;:56;8316:6;;8307:16;;-1:-1:-1;;;8307:16:68;;-1:-1:-1;;;;;8316:6:68;;;8307:16;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;8307:8:68;;257:18:76;;8307:16:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8333:8:68;;8360:6;;8369:7;;8333:44;;-1:-1:-1;;;8333:44:68;;-1:-1:-1;;;;;8333:8:68;;;;-1:-1:-1;8333:18:68;;-1:-1:-1;8333:44:68;;8360:6;;;;8333:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8397:6:68;;8388:16;;-1:-1:-1;;;8388:16:68;;-1:-1:-1;;;;;8397:6:68;;;8388:16;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;8388:8:68;;-1:-1:-1;257:18:76;;8388:16:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8414:8:68;;8441:6;;8450:7;;8414:44;;-1:-1:-1;;;8414:44:68;;-1:-1:-1;;;;;8414:8:68;;;;-1:-1:-1;8414:18:68;;-1:-1:-1;8414:44:68;;8441:6;;;;8414:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8478:6:68;;8469:16;;-1:-1:-1;;;8469:16:68;;-1:-1:-1;;;;;8478:6:68;;;8469:16;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;8469:8:68;;-1:-1:-1;257:18:76;;8469:16:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8495:8:68;;8522:6;;8531:12;;8495:49;;-1:-1:-1;;;8495:49:68;;-1:-1:-1;;;;;8495:8:68;;;;-1:-1:-1;8495:18:68;;-1:-1:-1;8495:49:68;;8522:6;;;;8495:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8564:6:68;;8555:16;;-1:-1:-1;;;8555:16:68;;-1:-1:-1;;;;;8564:6:68;;;8555:16;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;8555:8:68;;-1:-1:-1;257:18:76;;8555:16:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8581:8:68;;8608:6;;8617:12;;8581:49;;-1:-1:-1;;;8581:49:68;;-1:-1:-1;;;;;8581:8:68;;;;-1:-1:-1;8581:18:68;;-1:-1:-1;8581:49:68;;8608:6;;;;8581:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2569:6068;;2545:6092::o;15654:1126::-;15799:7;;15820:8;;15799:35;;-1:-1:-1;;;15799:35:68;;-1:-1:-1;;;;;15799:7:68;;;;:12;;:35;;15820:8;;;15831:2;;15799:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15917:3:68;;15939:6;;15917:30;;-1:-1:-1;;;15917:30:68;;-1:-1:-1;;;;;15939:6:68;;;15917:30;;;284:51:76;15894:20:68;;-1:-1:-1;15917:3:68;;;-1:-1:-1;15917:13:68;;257:18:76;;15917:30:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15894:53;;16039:16;16147:18;;16058:117;;;;;;1026:25:76;;1014:2;999:18;;863:194;16058:117:68;;;;-1:-1:-1;;16058:117:68;;;;;;;;;;;;;;-1:-1:-1;;;;;16058:117:68;-1:-1:-1;;;16058:117:68;;;16202:6;;16185:25;;-1:-1:-1;;;16185:25:68;;-1:-1:-1;;;;;16202:6:68;;;16185:25;;;284:51:76;16058:117:68;;-1:-1:-1;;;;;;;;;;;;245:64:1;16185:8:68;;257:18:76;;16185:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16220:20:68;;-1:-1:-1;;;16220:20:68;;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;16220:15:68;;-1:-1:-1;16220:20:68;;16236:3;;16220:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16250:8:68;;16268:18;;16250:45;;-1:-1:-1;;;16250:45:68;;;;;14750:25:76;;;;16288:2:68;14791:18:76;;;14784:34;;;14834:18;;;14827:34;-1:-1:-1;;;;;16250:8:68;;;;-1:-1:-1;16250:17:68;;-1:-1:-1;14723:18:76;;16250:45:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16386:3:68;;16408:6;;16386:30;;-1:-1:-1;;;16386:30:68;;-1:-1:-1;;;;;16408:6:68;;;16386:30;;;284:51:76;16363:20:68;;-1:-1:-1;16386:3:68;;;-1:-1:-1;16386:13:68;;257:18:76;;16386:30:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16363:53;;16426:36;16435:12;16449;16426:8;:36::i;:::-;16571:6;;16554:25;;-1:-1:-1;;;16554:25:68;;-1:-1:-1;;;;;16571:6:68;;;16554:25;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;16554:8:68;;257:18:76;;16554:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16589:8:68;;16607:7;;16589:34;;-1:-1:-1;;;16589:34:68;;;;;14750:25:76;;;;16616:2:68;14791:18:76;;;14784:34;;;14834:18;;;14827:34;-1:-1:-1;;;;;16589:8:68;;;;-1:-1:-1;16589:17:68;;-1:-1:-1;14723:18:76;;16589:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16692:3:68;;16714:6;;16692:30;;-1:-1:-1;;;16692:30:68;;-1:-1:-1;;;;;16714:6:68;;;16692:30;;;284:51:76;16692:3:68;;;-1:-1:-1;16692:13:68;;-1:-1:-1;257:18:76;;16692:30:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16677:45;-1:-1:-1;16732:41:68;16677:45;16755:17;:12;16770:2;16755:17;:::i;:::-;16732:8;:41::i;:::-;15722:1058;;;15654:1126::o;22490:813::-;22618:7;;22639:8;;22618:35;;-1:-1:-1;;;22618:35:68;;-1:-1:-1;;;;;22618:7:68;;;;:12;;:35;;22639:8;;;22650:2;;22618:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22806:8:68;;22832:7;;22806:34;;-1:-1:-1;;;22806:34:68;;22755:22;;-1:-1:-1;22755:22:68;;-1:-1:-1;;;;;;22806:8:68;;;;:25;;:34;;;;1026:25:76;;;1014:2;999:18;;863:194;22806:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22754:86;;;;22850:27;22859:14;22875:1;22850:8;:27::i;:::-;22887:28;22896:15;22913:1;22887:8;:28::i;:::-;23018:6;;23001:25;;-1:-1:-1;;;23001:25:68;;-1:-1:-1;;;;;23018:6:68;;;23001:25;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;23001:8:68;;257:18:76;;23001:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23036:8:68;;23054:7;;23036:34;;-1:-1:-1;;;23036:34:68;;;;;14750:25:76;;;;23063:2:68;14791:18:76;;;14784:34;;;14834:18;;;14827:34;-1:-1:-1;;;;;23036:8:68;;;;-1:-1:-1;23036:17:68;;-1:-1:-1;14723:18:76;;23036:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23185:8:68;;23211:7;;23185:34;;-1:-1:-1;;;23185:34:68;;23134:22;;-1:-1:-1;23134:22:68;;-1:-1:-1;;;;;;23185:8:68;;;;:25;;:34;;;;1026:25:76;;;1014:2;999:18;;863:194;23185:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23133:86;;;;23229:28;23238:14;23254:2;23229:8;:28::i;:::-;23267:29;23276:15;23293:2;23267:8;:29::i;:::-;22541:762;;;;22490:813::o;18573:3824::-;18741:5;;18748:3;;18708:17;;18728:33;;-1:-1:-1;;;;;18741:5:68;;;;18748:3;18753:1;18741:5;18759:1;18728:12;:33::i;:::-;18830:6;;18821:16;;-1:-1:-1;;;18821:16:68;;-1:-1:-1;;;;;18830:6:68;;;18821:16;;;284:51:76;18708:53:68;;-1:-1:-1;;;;;;;;;;;;245:64:1;18821:8:68;;257:18:76;;18821:16:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18847:8:68;;18874:6;;18847:46;;-1:-1:-1;;;18847:46:68;;-1:-1:-1;;;;;18847:8:68;;;;-1:-1:-1;18847:18:68;;-1:-1:-1;18847:46:68;;18874:6;;;;18883:9;;18847:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18959:142:68;;;;;;;;;;19007:7;;19033:8;;-1:-1:-1;;;19007:36:68;;;-1:-1:-1;;;;;19033:8:68;;;19007:36;;;284:51:76;-1:-1:-1;;;18959:142:68;;-1:-1:-1;18959:142:68;;19007:7;:17;257:18:76;;;19007:36:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18959:142;;19057:5;;19081:8;;19057:34;;-1:-1:-1;;;19057:34:68;;-1:-1:-1;;;;;19081:8:68;;;19057:34;;;284:51:76;18959:142:68;;;;;19057:5;;;:15;;257:18:76;;19057:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18959:142;;19196:7;;19217:8;;19196:35;;-1:-1:-1;;;19196:35:68;;18959:142;;-1:-1:-1;;;;;;19196:7:68;;;;:12;;:35;;19217:8;;19228:2;;19196:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19241:5:68;;19260:8;;19241:33;;-1:-1:-1;;;19241:33:68;;-1:-1:-1;;;;;19241:5:68;;;;-1:-1:-1;19241:10:68;;-1:-1:-1;19241:33:68;;19260:8;;;;19271:2;;19241:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19381:6:68;;19364:25;;-1:-1:-1;;;19364:25:68;;-1:-1:-1;;;;;19381:6:68;;;19364:25;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;19364:8:68;;-1:-1:-1;257:18:76;;19364:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19399:8:68;;19417:7;;19399:33;;-1:-1:-1;;;19399:33:68;;;;;14750:25:76;;;;19426:2:68;14791:18:76;;;14784:34;19399:8:68;14834:18:76;;;14827:34;-1:-1:-1;;;;;19399:8:68;;;;-1:-1:-1;19399:17:68;;-1:-1:-1;14723:18:76;;19399:33:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19460:6:68;;19443:25;;-1:-1:-1;;;19443:25:68;;-1:-1:-1;;;;;19460:6:68;;;19443:25;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;19443:8:68;;-1:-1:-1;257:18:76;;19443:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19478:8:68;;:37;;-1:-1:-1;;;19478:37:68;;;;;14750:25:76;;;19507:2:68;14791:18:76;;;14784:34;19511:3:68;14834:18:76;;;14827:34;-1:-1:-1;;;;;19478:8:68;;;;-1:-1:-1;19478:17:68;;-1:-1:-1;14723:18:76;;19478:37:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19605:7:68;;19631:8;;19605:36;;-1:-1:-1;;;19605:36:68;;-1:-1:-1;;;;;19631:8:68;;;19605:36;;;284:51:76;19596:50:68;;-1:-1:-1;19605:7:68;;;-1:-1:-1;19605:17:68;;257:18:76;;19605:36:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19643:2;19596:8;:50::i;:::-;19665:5;;19689:8;;19665:34;;-1:-1:-1;;;19665:34:68;;-1:-1:-1;;;;;19689:8:68;;;19665:34;;;284:51:76;19656:48:68;;19665:5;;;;;:15;;257:18:76;;19665:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19701:2;19656:8;:48::i;:::-;19801:14;;;19813:1;19801:14;;;;;;;;;19777:21;;19801:14;;;;;;;;;-1:-1:-1;;19837:7:68;;19825:9;;;;-1:-1:-1;;;;;;19837:7:68;;19825:9;;-1:-1:-1;19837:7:68;;19825:9;;;;:::i;:::-;-1:-1:-1;;;;;19825:19:68;;;:9;;;;;;;;;;;:19;19940:16;-1:-1:-1;;;20041:24:68;-1:-1:-1;;;639:5:75;565:83;20041:24:68;19959:120;;;;;;1026:25:76;;1014:2;999:18;;863:194;19959:120:68;;;;-1:-1:-1;;19959:120:68;;;;;;;;;;;;;;-1:-1:-1;;;;;19959:120:68;-1:-1:-1;;;;;;19959:120:68;;;;;;;;;;;20102:5;;20093:15;;-1:-1:-1;;;20093:15:68;;-1:-1:-1;;;;;20102:5:68;;;20093:15;;;284:51:76;19959:120:68;-1:-1:-1;;;;;;;;;;;;245:64:1;20093:8:68;;257:18:76;;20093:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20122:20:68;;-1:-1:-1;;;20122:20:68;;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;20122:15:68;;-1:-1:-1;20122:20:68;;20138:3;;20122:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20156:8:68;;:32;;-1:-1:-1;;;20156:32:68;;-1:-1:-1;;;;;20156:8:68;;;;-1:-1:-1;20156:24:68;;-1:-1:-1;20156:32:68;;20181:6;;20156:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20265:8:68;;20256:18;;-1:-1:-1;;;20256:18:68;;-1:-1:-1;;;;;20265:8:68;;;20256:18;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;20256:8:68;;-1:-1:-1;257:18:76;;;-1:-1:-1;20256:18:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20284:8:68;;:32;;-1:-1:-1;;;20284:32:68;;-1:-1:-1;;;;;20284:8:68;;;;-1:-1:-1;20284:24:68;;-1:-1:-1;20284:32:68;;20309:6;;20284:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20418:7:68;;20444:8;;20418:36;;-1:-1:-1;;;20418:36:68;;-1:-1:-1;;;;;20444:8:68;;;20418:36;;;284:51:76;20409:49:68;;-1:-1:-1;20418:7:68;;;-1:-1:-1;20418:17:68;;257:18:76;;20418:36:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20456:1;20409:8;:49::i;:::-;20477:7;;20503:8;;20477:36;;-1:-1:-1;;;20477:36:68;;-1:-1:-1;;;;;20503:8:68;;;20477:36;;;284:51:76;20468:69:68;;20477:7;;;;;:17;;257:18:76;;20477:36:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20515:16;;:21;;20534:2;20515:21;:::i;20468:69::-;20616:5;;20604:9;;-1:-1:-1;;;;;20616:5:68;;;;20604:6;;20616:5;;20604:9;;;;:::i;:::-;-1:-1:-1;;;;;20604:17:68;;;:9;;;;;;;;;:17;20688:8;;20679:18;;-1:-1:-1;;;20679:18:68;;20688:8;;20679:18;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;20679:8:68;;257:18:76;;20679::68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20707:8:68;;:32;;-1:-1:-1;;;20707:32:68;;-1:-1:-1;;;;;20707:8:68;;;;-1:-1:-1;20707:24:68;;-1:-1:-1;20707:32:68;;20732:6;;20707:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20839:5:68;;20863:8;;20839:34;;-1:-1:-1;;;20839:34:68;;-1:-1:-1;;;;;20863:8:68;;;20839:34;;;284:51:76;20830:47:68;;-1:-1:-1;20839:5:68;;;-1:-1:-1;20839:15:68;;257:18:76;;20839:34:68;127:214:76;20830:47:68;20896:5;;20920:8;;20896:34;;-1:-1:-1;;;20896:34:68;;-1:-1:-1;;;;;20920:8:68;;;20896:34;;;284:51:76;20887:67:68;;20896:5;;;;;:15;;257:18:76;;20896:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20932:16;;;;:21;;20951:2;20932:21;:::i;20887:67::-;21055:90;;;;;;;;;;21072:7;;21098:8;;-1:-1:-1;;;21072:36:68;;;-1:-1:-1;;;;;21098:8:68;;;21072:36;;;284:51:76;21055:90:68;;;;21072:7;:17;257:18:76;;;21072:36:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21055:90;;21110:5;;21134:8;;21110:34;;-1:-1:-1;;;21110:34:68;;-1:-1:-1;;;;;21134:8:68;;;21110:34;;;284:51:76;21055:90:68;;;;;21110:5;;;:15;;257:18:76;;21110:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21055:90;;21240:7;;21261:8;;21240:35;;-1:-1:-1;;;21240:35:68;;21055:90;;-1:-1:-1;;;;;;21240:7:68;;;;:12;;:35;;21261:8;;21272:2;;21240:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21285:5:68;;21304:8;;21285:33;;-1:-1:-1;;;21285:33:68;;-1:-1:-1;;;;;21285:5:68;;;;-1:-1:-1;21285:10:68;;-1:-1:-1;21285:33:68;;21304:8;;;;21315:2;;21285:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21425:6:68;;21408:25;;-1:-1:-1;;;21408:25:68;;-1:-1:-1;;;;;21425:6:68;;;21408:25;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;21408:8:68;;-1:-1:-1;257:18:76;;21408:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21443:8:68;;21461:7;;21443:33;;-1:-1:-1;;;21443:33:68;;;;;14750:25:76;;;;21470:2:68;14791:18:76;;;14784:34;21443:8:68;14834:18:76;;;14827:34;-1:-1:-1;;;;;21443:8:68;;;;-1:-1:-1;21443:17:68;;-1:-1:-1;14723:18:76;;21443:33:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21504:6:68;;21487:25;;-1:-1:-1;;;21487:25:68;;-1:-1:-1;;;;;21504:6:68;;;21487:25;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;21487:8:68;;-1:-1:-1;257:18:76;;21487:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21522:8:68;;:37;;-1:-1:-1;;;21522:37:68;;;;;14750:25:76;;;21551:2:68;14791:18:76;;;14784:34;21555:3:68;14834:18:76;;;14827:34;-1:-1:-1;;;;;21522:8:68;;;;-1:-1:-1;21522:17:68;;-1:-1:-1;14723:18:76;;21522:37:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21642:7:68;;21668:8;;21642:36;;-1:-1:-1;;;21642:36:68;;-1:-1:-1;;;;;21668:8:68;;;21642:36;;;284:51:76;21633:50:68;;-1:-1:-1;21642:7:68;;;-1:-1:-1;21642:17:68;;257:18:76;;21642:36:68;127:214:76;21633:50:68;21702:5;;21726:8;;21702:34;;-1:-1:-1;;;21702:34:68;;-1:-1:-1;;;;;21726:8:68;;;21702:34;;;284:51:76;21693:48:68;;21702:5;;;;;:15;;257:18:76;;21702:34:68;127:214:76;21693:48:68;21813:14;;;21825:1;21813:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;21849:7:68;;21837:9;;;;-1:-1:-1;;;;;;21849:7:68;;21837:9;;-1:-1:-1;21849:7:68;;21837:9;;;;:::i;:::-;-1:-1:-1;;;;;21837:19:68;;;:9;;;;;;;;;:19;21878:5;;21866:9;;21878:5;;;21866:6;;21878:5;;21866:9;;;;;;:::i;:::-;-1:-1:-1;;;;;21866:17:68;;;:9;;;;;;;;;:17;21903:8;;21894:18;;-1:-1:-1;;;21894:18:68;;21903:8;;21894:18;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;21894:8:68;;257:18:76;;21894::68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21922:8:68;;:32;;-1:-1:-1;;;21922:32:68;;-1:-1:-1;;;;;21922:8:68;;;;-1:-1:-1;21922:24:68;;-1:-1:-1;21922:32:68;;21947:6;;21922:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22056:7:68;;22082:8;;22056:36;;-1:-1:-1;;;22056:36:68;;-1:-1:-1;;;;;22082:8:68;;;22056:36;;;284:51:76;22047:49:68;;-1:-1:-1;22056:7:68;;;-1:-1:-1;22056:17:68;;257:18:76;;22056:36:68;127:214:76;22047:49:68;22115:7;;22141:8;;22115:36;;-1:-1:-1;;;22115:36:68;;-1:-1:-1;;;;;22141:8:68;;;22115:36;;;284:51:76;22106:69:68;;22115:7;;;;;:17;;257:18:76;;22115:36:68;127:214:76;22106:69:68;22275:5;;22299:8;;22275:34;;-1:-1:-1;;;22275:34:68;;-1:-1:-1;;;;;22299:8:68;;;22275:34;;;284:51:76;22266:47:68;;22275:5;;;;;:15;;257:18:76;;22275:34:68;127:214:76;22266:47:68;22332:5;;22356:8;;22332:34;;-1:-1:-1;;;22332:34:68;;-1:-1:-1;;;;;22356:8:68;;;22332:34;;;284:51:76;22323:67:68;;22332:5;;;;;:15;;257:18:76;;22332:34:68;127:214:76;11000:3264:68;11372:3;;11394:6;;11372:30;;-1:-1:-1;;;11372:30:68;;-1:-1:-1;;;;;11394:6:68;;;11372:30;;;284:51:76;11347:22:68;;11372:3;;;;;:13;;257:18:76;;11372:30:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11439:7;;11465:8;;11439:36;;-1:-1:-1;;;11439:36:68;;-1:-1:-1;;;;;11465:8:68;;;11439:36;;;284:51:76;11347:55:68;;-1:-1:-1;11412:24:68;;11439:7;;;:17;;257:18:76;;11439:36:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11549:7;;11570:8;;11549:36;;-1:-1:-1;;;11549:36:68;;11412:63;;-1:-1:-1;;;;;;11549:7:68;;;;:12;;:36;;11570:8;;11581:3;;11549:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11668:6:68;;11651:25;;-1:-1:-1;;;11651:25:68;;-1:-1:-1;;;;;11668:6:68;;;11651:25;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;11651:8:68;;-1:-1:-1;257:18:76;;11651:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11686:8:68;;11704:7;;11686:35;;-1:-1:-1;;;11686:35:68;;;;;14750:25:76;;;;11713:3:68;14791:18:76;;;14784:34;11718:2:68;14834:18:76;;;14827:34;-1:-1:-1;;;;;11686:8:68;;;;-1:-1:-1;11686:17:68;;-1:-1:-1;14723:18:76;;11686:35:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11814:3:68;;11836:6;;11814:30;;-1:-1:-1;;;11814:30:68;;-1:-1:-1;;;;;11836:6:68;;;11814:30;;;284:51:76;11805:61:68;;-1:-1:-1;11814:3:68;;;-1:-1:-1;11814:13:68;;257:18:76;;11814:30:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11846:19;:14;11863:2;11846:19;:::i;11805:61::-;11885:7;;11911:8;;11885:36;;-1:-1:-1;;;11885:36:68;;-1:-1:-1;;;;;11911:8:68;;;11885:36;;;284:51:76;11876:70:68;;11885:7;;;;;:17;;257:18:76;;11885:36:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11923:22;:16;11942:3;11923:22;:::i;11876:70::-;12225:7;;12251:6;;12225:34;;-1:-1:-1;;;12225:34:68;;-1:-1:-1;;;;;12251:6:68;;;12225:34;;;284:51:76;12225:7:68;;;:17;;257:18:76;;12225:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12288:3;;12310:8;;12288:32;;-1:-1:-1;;;12288:32:68;;-1:-1:-1;;;;;12310:8:68;;;12288:32;;;284:51:76;12208::68;;-1:-1:-1;12288:3:68;;:13;;257:18:76;;12288:32:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12394:3;;12411:8;;12394:31;;-1:-1:-1;;;12394:31:68;;12269:51;;-1:-1:-1;;;;;;12394:3:68;;;;:8;;:31;;12411:8;;12422:2;;12394:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12508:6:68;;12491:25;;-1:-1:-1;;;12491:25:68;;-1:-1:-1;;;;;12508:6:68;;;12491:25;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;12491:8:68;;-1:-1:-1;257:18:76;;12491:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12526:8:68;;12544:7;;12526:35;;-1:-1:-1;;;12526:35:68;;;;;14750:25:76;;;;12553:2:68;14791:18:76;;;14784:34;12557:3:68;14834:18:76;;;14827:34;-1:-1:-1;;;;;12526:8:68;;;;-1:-1:-1;12526:17:68;;-1:-1:-1;14723:18:76;;12526:35:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12738:7:68;;12764:6;;12738:34;;-1:-1:-1;;;12738:34:68;;-1:-1:-1;;;;;12764:6:68;;;12738:34;;;284:51:76;12729:66:68;;-1:-1:-1;12738:7:68;;;-1:-1:-1;12738:17:68;;257:18:76;;12738:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12774:20;:14;12791:3;12774:20;:::i;12729:66::-;12814:3;;12836:8;;12814:32;;-1:-1:-1;;;12814:32:68;;-1:-1:-1;;;;;12836:8:68;;;12814:32;;;284:51:76;12805:60:68;;12814:3;;;;;:13;;257:18:76;;12814:32:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12848:16;12805:8;:60::i;:::-;13146:3;;13168:6;;13146:30;;-1:-1:-1;;;13146:30:68;;-1:-1:-1;;;;;13168:6:68;;;13146:30;;;284:51:76;13146:3:68;;;:13;;257:18:76;;13146:30:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13205:3;;13227:8;;13205:32;;-1:-1:-1;;;13205:32:68;;-1:-1:-1;;;;;13227:8:68;;;13205:32;;;284:51:76;13129:47:68;;-1:-1:-1;13205:3:68;;:13;;257:18:76;;13205:32:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13311:3;;13328:8;;13311:32;;-1:-1:-1;;;13311:32:68;;13186:51;;-1:-1:-1;;;;;;13311:3:68;;;;:8;;:32;;13328:8;;13339:3;;13311:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13426:6:68;;13409:25;;-1:-1:-1;;;13409:25:68;;-1:-1:-1;;;;;13426:6:68;;;13409:25;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;13409:8:68;;-1:-1:-1;257:18:76;;13409:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13444:8:68;;13462:12;;13444:41;;-1:-1:-1;;;13444:41:68;;;;;14750:25:76;;;;13476:3:68;14791:18:76;;;14784:34;;;13481:3:68;14834:18:76;;;14827:34;-1:-1:-1;;;;;13444:8:68;;;;-1:-1:-1;13444:17:68;;-1:-1:-1;14723:18:76;13444:41:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13578:3:68;;13600:6;;13578:30;;-1:-1:-1;;;13578:30:68;;-1:-1:-1;;;;;13600:6:68;;;13578:30;;;284:51:76;13569:62:68;;-1:-1:-1;13578:3:68;;;-1:-1:-1;13578:13:68;;257:18:76;;13578:30:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13610:20;:14;13627:3;13610:20;:::i;13569:62::-;13650:3;;13672:8;;13650:32;;-1:-1:-1;;;13650:32:68;;-1:-1:-1;;;;;13672:8:68;;;13650:32;;;284:51:76;13641:60:68;;13650:3;;;;;:13;;257:18:76;;13650:32:68;127:214:76;13641:60:68;13891:7;;13912:8;;13891:36;;-1:-1:-1;;;13891:36:68;;-1:-1:-1;;;;;13891:7:68;;;;:12;;:36;;13912:8;;;13923:3;;13891:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14011:16;14119:12;;14030:111;;;;;;1026:25:76;;1014:2;999:18;;863:194;14030:111:68;;;;-1:-1:-1;;14030:111:68;;;;;;;;;;;;;;-1:-1:-1;;;;;14030:111:68;-1:-1:-1;;;14030:111:68;;;14168:6;;14151:25;;-1:-1:-1;;;14151:25:68;;-1:-1:-1;;;;;14168:6:68;;;14151:25;;;284:51:76;14030:111:68;;-1:-1:-1;;;;;;;;;;;;245:64:1;14151:8:68;;257:18:76;;14151:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14186:20:68;;-1:-1:-1;;;14186:20:68;;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;14186:15:68;;-1:-1:-1;14186:20:68;;14202:3;;14186:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14216:8:68;;14234:12;;14216:41;;-1:-1:-1;;;14216:41:68;;;;;14750:25:76;;;;14248:3:68;14791:18:76;;;14784:34;;;14253:3:68;14834:18:76;;;14827:34;-1:-1:-1;;;;;14216:8:68;;;;-1:-1:-1;14216:17:68;;-1:-1:-1;14723:18:76;14216:41:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11043:3221;;;11000:3264::o;18011:556::-;18165:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18165:51:68;-1:-1:-1;;;18165:51:68;;;18226:20;;-1:-1:-1;;;18226:20:68;;18165:51;;-1:-1:-1;;;;;;;;;;;245:64:1;18226:15:68;;:20;;18165:51;;18226:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18265:8:68;;18256:18;;-1:-1:-1;;;18256:18:68;;-1:-1:-1;;;;;18265:8:68;;;18256:18;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;18256:8:68;;-1:-1:-1;257:18:76;;18256::68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18284:8:68;;:42;;-1:-1:-1;;;18284:42:68;;:8;:42;;;284:51:76;-1:-1:-1;;;;;18284:8:68;;;;-1:-1:-1;18284:20:68;;-1:-1:-1;257:18:76;;18284:42:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18390:8:68;;18381:18;;-1:-1:-1;;;18381:18:68;;-1:-1:-1;;;;;18390:8:68;;;18381:18;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;18381:8:68;;-1:-1:-1;257:18:76;;18381::68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18409:8:68;;18439:5;;18409:37;;-1:-1:-1;;;18409:37:68;;-1:-1:-1;;;;;18439:5:68;;;18409:37;;;284:51:76;18409:8:68;;;-1:-1:-1;18409:20:68;;-1:-1:-1;257:18:76;;18409:37:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18515:45;18532:8;;;;;;;;;-1:-1:-1;;;;;18532:8:68;-1:-1:-1;;;;;18532:17:68;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18554:5;;-1:-1:-1;;;;;18554:5:68;18515:8;:45::i;:::-;18057:510;18011:556::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;16919:1086:68:-;17068:7;;17077:3;;17039:13;;17055:35;;-1:-1:-1;;;;;17068:7:68;;;;17077:3;17039:13;17068:7;17088:1;17055:12;:35::i;:::-;17129:7;;17138:3;;17039:51;;-1:-1:-1;17100:13:68;;17116:35;;-1:-1:-1;;;;;17129:7:68;;;;17138:3;17100:13;17129:7;17149:1;17116:12;:35::i;:::-;17100:51;-1:-1:-1;17244:16:68;-1:-1:-1;;;;;;17263:112:68;;;;;;1026:25:76;;1014:2;999:18;;863:194;17263:112:68;;;;-1:-1:-1;;17263:112:68;;;;;;;;;;;;;;-1:-1:-1;;;;;17263:112:68;-1:-1:-1;;;;;;17263:112:68;;;;;;;;;;;17394:5;;17385:15;;-1:-1:-1;;;17385:15:68;;-1:-1:-1;;;;;17394:5:68;;;17385:15;;;284:51:76;17263:112:68;-1:-1:-1;;;;;;;;;;;;245:64:1;17385:8:68;;257:18:76;;17385:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17410:20:68;;-1:-1:-1;;;17410:20:68;;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;17410:15:68;;-1:-1:-1;17410:20:68;;17426:3;;17410:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17440:8:68;;17467:6;;17440:42;;-1:-1:-1;;;17440:42:68;;-1:-1:-1;;;;;17440:8:68;;;;-1:-1:-1;17440:18:68;;-1:-1:-1;17440:42:68;;17467:6;;;;17476:5;;17440:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17569:6:68;;17560:16;;-1:-1:-1;;;17560:16:68;;-1:-1:-1;;;;;17569:6:68;;;17560:16;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;17560:8:68;;-1:-1:-1;257:18:76;;17560:16:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17586:8:68;;17613:6;;17586:42;;-1:-1:-1;;;17586:42:68;;-1:-1:-1;;;;;17586:8:68;;;;-1:-1:-1;17586:18:68;;-1:-1:-1;17586:42:68;;17613:6;;;;17622:5;;17586:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17684:8:68;;17717:6;;17684:48;;-1:-1:-1;;;17684:48:68;;-1:-1:-1;;;;;17684:8:68;;;;-1:-1:-1;17684:24:68;;-1:-1:-1;17684:48:68;;17717:6;;;;17726:5;;17684:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17677:56;;;;:::i;:::-;17831:8;;17814:27;;-1:-1:-1;;;17814:27:68;;-1:-1:-1;;;;;17831:8:68;;;17814:27;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;17814:8:68;;257:18:76;;17814:27:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17851:8:68;;17878:6;;17851:42;;-1:-1:-1;;;17851:42:68;;-1:-1:-1;;;;;17851:8:68;;;;-1:-1:-1;17851:18:68;;-1:-1:-1;17851:42:68;;17878:6;;;;17887:5;;17851:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17949:8:68;;17982:6;;17949:48;;-1:-1:-1;;;17949:48:68;;-1:-1:-1;;;;;17949:8:68;;;;-1:-1:-1;17949:24:68;;-1:-1:-1;17949:48:68;;17982:6;;;;17991:5;;17949:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17942:56;;;;:::i;14270:1378::-;14514:55;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14514:55:68;-1:-1:-1;;;14514:55:68;;;14596:6;;14579:25;;-1:-1:-1;;;14579:25:68;;14514:55;;-1:-1:-1;;;;;;;;;;;245:64:1;14579:8:68;;:25;;-1:-1:-1;;;;;14596:6:68;;14579:25;-1:-1:-1;;;;;302:32:76;;;;284:51;;272:2;257:18;;127:214;14579:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14614:20:68;;-1:-1:-1;;;14614:20:68;;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;14614:15:68;;-1:-1:-1;14614:20:68;;14630:3;;14614:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14644:8:68;;14662:7;;14644:34;;-1:-1:-1;;;14644:34:68;;;;;14750:25:76;;;;14671:2:68;14791:18:76;;;14784:34;;;14834:18;;;14827:34;-1:-1:-1;;;;;14644:8:68;;;;-1:-1:-1;14644:17:68;;-1:-1:-1;14723:18:76;;14644:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14743:7:68;;14764:8;;14743:34;;-1:-1:-1;;;14743:34:68;;-1:-1:-1;;;;;14743:7:68;;;;-1:-1:-1;14743:12:68;;-1:-1:-1;14743:34:68;;14764:8;;;;14775:1;;14743:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14805:6:68;;14788:25;;-1:-1:-1;;;14788:25:68;;-1:-1:-1;;;;;14805:6:68;;;14788:25;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;14788:8:68;;-1:-1:-1;257:18:76;;14788:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14823:20:68;;-1:-1:-1;;;14823:20:68;;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;14823:15:68;;-1:-1:-1;14823:20:68;;14839:3;;14823:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14853:8:68;;14871:7;;14853:34;;-1:-1:-1;;;14853:34:68;;;;;14750:25:76;;;;14880:2:68;14791:18:76;;;14784:34;;;14834:18;;;14827:34;-1:-1:-1;;;;;14853:8:68;;;;-1:-1:-1;14853:17:68;;-1:-1:-1;14723:18:76;;14853:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14979:6:68;;14962:25;;-1:-1:-1;;;14962:25:68;;-1:-1:-1;;;;;14979:6:68;;;14962:25;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;14962:8:68;;-1:-1:-1;257:18:76;;14962:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14997:8:68;;15015:7;;14997:32;;-1:-1:-1;;;14997:32:68;;;;;14750:25:76;;;;15024:1:68;14791:18:76;;;14784:34;;;14834:18;;;14827:34;-1:-1:-1;;;;;14997:8:68;;;;-1:-1:-1;14997:17:68;;-1:-1:-1;14723:18:76;;14997:32:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15074:8:68;;15100:7;;15074:34;;-1:-1:-1;;;15074:34:68;;15041:13;;-1:-1:-1;15041:13:68;;-1:-1:-1;;;;;;15074:8:68;;;;:25;;:34;;;;1026:25:76;;;1014:2;999:18;;863:194;15074:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15040:68;;;;15119:18;15128:5;15135:1;15119:8;:18::i;:::-;15147:19;15156:6;15164:1;15147:8;:19::i;:::-;15403:7;;15424:8;;15403:35;;-1:-1:-1;;;15403:35:68;;-1:-1:-1;;;;;15403:7:68;;;;:12;;:35;;15424:8;;;15435:2;;15403:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15466:6:68;;15449:25;;-1:-1:-1;;;15449:25:68;;-1:-1:-1;;;;;15466:6:68;;;15449:25;;;284:51:76;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;15449:8:68;;-1:-1:-1;257:18:76;;15449:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15484:8:68;;15502:7;;15484:34;;-1:-1:-1;;;15484:34:68;;;;;14750:25:76;;;;15511:2:68;14791:18:76;;;14784:34;;;14834:18;;;14827:34;-1:-1:-1;;;;;15484:8:68;;;;-1:-1:-1;15484:17:68;;-1:-1:-1;14723:18:76;;15484:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15547:8:68;;15573:7;;15547:34;;-1:-1:-1;;;15547:34:68;;-1:-1:-1;;;;;15547:8:68;;;;-1:-1:-1;15547:25:68;;-1:-1:-1;15547:34:68;;;;1026:25:76;;;1014:2;999:18;;863:194;15547:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15529:52;;-1:-1:-1;15529:52:68;-1:-1:-1;15592:19:68;15529:52;15608:2;15592:8;:19::i;:::-;15621:20;15630:6;15638:2;15621:8;:20::i;8692:2120::-;8894:11;8917:21;8941:11;-1:-1:-1;;;;;8941:20:68;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8917:46;;8973:20;8996:10;-1:-1:-1;;;;;8996:19:68;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8973:44;-1:-1:-1;9028:16:68;9067:44;9091:20;9072:15;9067:44;:::i;:::-;9057:55;;:2;:55;:::i;:::-;9047:65;;:7;:65;:::i;:::-;9028:84;-1:-1:-1;9123:20:68;9276:1;9218:42;9241:19;9218:20;:42;:::i;:::-;9217:60;;;;:::i;:::-;9146:56;9187:14;9151:15;9146:56;:::i;:::-;:131;;;;:::i;:::-;9123:154;-1:-1:-1;9288:20:68;9588:19;9537:20;9123:154;9444:15;9422:19;9427:14;9422:2;:19;:::i;:::-;:37;;;;:::i;:::-;9417:89;;;;:::i;:::-;:140;;;;:::i;:::-;:190;;;;:::i;:::-;9342:305;;:2;:305;:::i;:::-;9311:336;;:16;:336;:::i;:::-;9288:359;-1:-1:-1;9658:20:68;9964:19;9913:20;9867:15;9820;9798:19;9803:14;9798:2;:19;:::i;:::-;:37;;;;:::i;:::-;9793:89;;;;:::i;:::-;:140;;;;:::i;:::-;:190;;;;:::i;:::-;9718:305;;:2;:305;:::i;:::-;9682:20;9701:1;9682:16;:20;:::i;:::-;9681:342;;;;:::i;:::-;10077:679;;;;;;;;-1:-1:-1;;;;;10077:679:68;;;;;;;;;;;;10215:8;;;10077:679;;;;;;;10034:40;10077:679;;;;;;;;;;;;;;;;;;;;;;;;10454:6;10077:679;;;;10215:8;10077:679;;;;;9658:365;;-1:-1:-1;10077:679:68;;;10568:24;:15;10586:6;10568:24;:::i;:::-;10077:679;;;;10647:8;10077:679;;;;-1:-1:-1;10077:679:68;;;;;;;;10774:10;;:31;;-1:-1:-1;;;10774:31:68;;10034:722;;-1:-1:-1;;;;;;10774:10:68;;:23;;:31;;10034:722;;10774:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10767:38;8692:2120;-1:-1:-1;;;;;;;;;;;;;8692:2120:68:o;5202:262:0:-;5264:1;5259;:6;5255:203;;5286:41;;;;;26044:2:76;26026:21;;;26083:2;26063:18;;;26056:30;26122:34;26117:2;26102:18;;26095:62;-1:-1:-1;;;26188:2:76;26173:18;;26166:32;26230:3;26215:19;;25842:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:0;:1;-1:-1:-1;;;;;3678:6:0;;3674:212;;3705:44;;;;;27481:2:76;27463:21;;;27520:2;27500:18;;;27493:30;27559:34;27554:2;27539:18;;27532:62;-1:-1:-1;;;27625:2:76;27610:18;;27603:35;27670:3;27655:19;;27279:401;3705:44:0;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;2410:424::-;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;2445:359;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:0;;;28645:51:76;;;-1:-1:-1;;;28712:18:76;;;28705:34;;;;2705:4:0;28755:18:76;;;28748:34;2482:11:0;;1671:64;2579:43;;28618:18:76;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1252:127:76:-;1313:10;1308:3;1304:20;1301:1;1294:31;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1384:131;-1:-1:-1;;;;;1459:31:76;;1449:42;;1439:70;;1505:1;1502;1495:12;1520:138;1599:13;;1621:31;1599:13;1621:31;:::i;1663:1129::-;1758:6;1789:2;1832;1820:9;1811:7;1807:23;1803:32;1800:52;;;1848:1;1845;1838:12;1800:52;1881:9;1875:16;1910:18;1951:2;1943:6;1940:14;1937:34;;;1967:1;1964;1957:12;1937:34;2005:6;1994:9;1990:22;1980:32;;2050:7;2043:4;2039:2;2035:13;2031:27;2021:55;;2072:1;2069;2062:12;2021:55;2101:2;2095:9;2123:2;2119;2116:10;2113:36;;;2129:18;;:::i;:::-;2175:2;2172:1;2168:10;2207:2;2201:9;2270:2;2266:7;2261:2;2257;2253:11;2249:25;2241:6;2237:38;2325:6;2313:10;2310:22;2305:2;2293:10;2290:18;2287:46;2284:72;;;2336:18;;:::i;:::-;2372:2;2365:22;2422:18;;;2456:15;;;;-1:-1:-1;2498:11:76;;;2494:20;;;2526:19;;;2523:39;;;2558:1;2555;2548:12;2523:39;2582:11;;;;2602:159;2618:6;2613:3;2610:15;2602:159;;;2684:34;2714:3;2684:34;:::i;:::-;2672:47;;2635:12;;;;2739;;;;2602:159;;;2780:6;1663:1129;-1:-1:-1;;;;;;;;1663:1129:76:o;2797:127::-;2858:10;2853:3;2849:20;2846:1;2839:31;2889:4;2886:1;2879:15;2913:4;2910:1;2903:15;7464:359;7564:5;7587:1;7597:220;7611:4;7608:1;7605:11;7597:220;;;7674:13;;-1:-1:-1;;;;;7670:39:76;7658:52;;7733:4;7757:12;;;;7792:15;;;;7706:1;7624:9;7597:220;;7828:753;-1:-1:-1;;;;;8172:32:76;;8154:51;;8141:3;8126:19;;8224:2;8235:59;8275:18;;;8267:6;8235:59;:::i;:::-;8329:2;8318:9;8314:18;8374:6;8398:1;8408:167;8422:4;8419:1;8416:11;8408:167;;;8481:13;;8469:26;;8515:12;;;;8550:15;;;;8442:1;8435:9;8408:167;;;8412:3;;;;7828:753;;;;;;:::o;10091:997::-;-1:-1:-1;;;;;10574:15:76;;;10556:34;;10647:15;;;10609:2;10627:18;;;10620:43;;;;10699:15;;;10694:2;10679:18;;10672:43;10505:3;10490:19;;;10528;10724:59;10779:2;10764:18;;10756:6;10724:59;:::i;:::-;10818:3;10807:9;10803:19;10792:30;;10864:6;10888:1;10898:184;10912:4;10909:1;10906:11;10898:184;;;10975:13;;10990:10;10971:30;10959:43;;11022:12;;;;11057:15;;;;10932:1;10925:9;10898:184;;;10902:3;;;;10091:997;;;;;;;;:::o;11382:438::-;11555:2;11540:18;;11588:1;11577:13;;11567:144;;11633:10;11628:3;11624:20;11621:1;11614:31;11668:4;11665:1;11658:15;11696:4;11693:1;11686:15;11567:144;11720:25;;;-1:-1:-1;;;;;11781:32:76;;;;11776:2;11761:18;;;11754:60;11382:438;:::o;12356:127::-;12417:10;12412:3;12408:20;12405:1;12398:31;12448:4;12445:1;12438:15;12472:4;12469:1;12462:15;12488:168;12528:7;12594:1;12590;12586:6;12582:14;12579:1;12576:21;12571:1;12564:9;12557:17;12553:45;12550:71;;;12601:18;;:::i;:::-;-1:-1:-1;12641:9:76;;12488:168::o;12661:274::-;-1:-1:-1;;;;;12853:32:76;;;;12835:51;;12917:2;12902:18;;12895:34;12823:2;12808:18;;12661:274::o;12940:277::-;13007:6;13060:2;13048:9;13039:7;13035:23;13031:32;13028:52;;;13076:1;13073;13066:12;13028:52;13108:9;13102:16;13161:5;13154:13;13147:21;13140:5;13137:32;13127:60;;13183:1;13180;13173:12;13127:60;13206:5;12940:277;-1:-1:-1;;;12940:277:76:o;13510:184::-;13580:6;13633:2;13621:9;13612:7;13608:23;13604:32;13601:52;;;13649:1;13646;13639:12;13601:52;-1:-1:-1;13672:16:76;;13510:184;-1:-1:-1;13510:184:76:o;13881:258::-;13953:1;13963:113;13977:6;13974:1;13971:13;13963:113;;;14053:11;;;14047:18;14034:11;;;14027:39;13999:2;13992:10;13963:113;;;14094:6;14091:1;14088:13;14085:48;;;-1:-1:-1;;14129:1:76;14111:16;;14104:27;13881:258::o;14144:381::-;14291:2;14280:9;14273:21;14254:4;14323:6;14317:13;14366:6;14361:2;14350:9;14346:18;14339:34;14382:66;14441:6;14436:2;14425:9;14421:18;14416:2;14408:6;14404:15;14382:66;:::i;:::-;14509:2;14488:15;-1:-1:-1;;14484:29:76;14469:45;;;;14516:2;14465:54;;14144:381;-1:-1:-1;;14144:381:76:o;14872:128::-;14912:3;14943:1;14939:6;14936:1;14933:13;14930:39;;;14949:18;;:::i;:::-;-1:-1:-1;14985:9:76;;14872:128::o;15005:245::-;15084:6;15092;15145:2;15133:9;15124:7;15120:23;15116:32;15113:52;;;15161:1;15158;15151:12;15113:52;-1:-1:-1;;15184:16:76;;15240:2;15225:18;;;15219:25;15184:16;;15219:25;;-1:-1:-1;15005:245:76:o;16435:673::-;16621:2;16673:21;;;16743:13;;16646:18;;;16765:22;;;16592:4;;16621:2;16844:15;;;;16818:2;16803:18;;;16592:4;16887:195;16901:6;16898:1;16895:13;16887:195;;;16966:13;;-1:-1:-1;;;;;16962:39:76;16950:52;;17057:15;;;;17022:12;;;;16998:1;16916:9;16887:195;;;-1:-1:-1;17099:3:76;;16435:673;-1:-1:-1;;;;;;16435:673:76:o;18721:269::-;18809:6;18862:2;18850:9;18841:7;18837:23;18833:32;18830:52;;;18878:1;18875;18868:12;18830:52;18910:9;18904:16;18929:31;18954:5;18929:31;:::i;19274:371::-;-1:-1:-1;;;;;;19459:33:76;;19447:46;;19516:13;;19429:3;;19538:61;19516:13;19588:1;19579:11;;19572:4;19560:17;;19538:61;:::i;:::-;19619:16;;;;19637:1;19615:24;;19274:371;-1:-1:-1;;;19274:371:76:o;19650:274::-;19779:3;19817:6;19811:13;19833:53;19879:6;19874:3;19867:4;19859:6;19855:17;19833:53;:::i;:::-;19902:16;;;;;19650:274;-1:-1:-1;;19650:274:76:o;19929:127::-;19990:10;19985:3;19981:20;19978:1;19971:31;20021:4;20018:1;20011:15;20045:4;20042:1;20035:15;20976:273;21044:6;21097:2;21085:9;21076:7;21072:23;21068:32;21065:52;;;21113:1;21110;21103:12;21065:52;21145:9;21139:16;21195:4;21188:5;21184:16;21177:5;21174:27;21164:55;;21215:1;21212;21205:12;21254:333;21291:4;21321:16;;;21357;;;21392:11;;;21419:10;;-1:-1:-1;;21440:18:76;;21431:28;;21415:45;21412:71;;;21463:18;;:::i;:::-;21522:3;21516:4;21512:14;21507:3;21503:24;21499:2;21495:33;21492:59;;;21531:18;;:::i;:::-;-1:-1:-1;21568:13:76;;;21254:333;-1:-1:-1;;;21254:333:76:o;21592:422::-;21681:1;21724:5;21681:1;21738:270;21759:7;21749:8;21746:21;21738:270;;;21818:4;21814:1;21810:6;21806:17;21800:4;21797:27;21794:53;;;21827:18;;:::i;:::-;21877:7;21867:8;21863:22;21860:55;;;21897:16;;;;21860:55;21976:22;;;;21936:15;;;;21738:270;;;21742:3;21592:422;;;;;:::o;22019:806::-;22068:5;22098:8;22088:80;;-1:-1:-1;22139:1:76;22153:5;;22088:80;22187:4;22177:76;;-1:-1:-1;22224:1:76;22238:5;;22177:76;22269:4;22287:1;22282:59;;;;22355:1;22350:130;;;;22262:218;;22282:59;22312:1;22303:10;;22326:5;;;22350:130;22387:3;22377:8;22374:17;22371:43;;;22394:18;;:::i;:::-;-1:-1:-1;;22450:1:76;22436:16;;22465:5;;22262:218;;22564:2;22554:8;22551:16;22545:3;22539:4;22536:13;22532:36;22526:2;22516:8;22513:16;22508:2;22502:4;22499:12;22495:35;22492:77;22489:159;;;-1:-1:-1;22601:19:76;;;22633:5;;22489:159;22680:34;22705:8;22699:4;22680:34;:::i;:::-;22750:6;22746:1;22742:6;22738:19;22729:7;22726:32;22723:58;;;22761:18;;:::i;:::-;22799:20;;-1:-1:-1;22019:806:76;;;;;:::o;22830:140::-;22888:5;22917:47;22958:4;22948:8;22944:19;22938:4;22917:47;:::i;22975:127::-;23036:10;23031:3;23027:20;23024:1;23017:31;23067:4;23064:1;23057:15;23091:4;23088:1;23081:15;23107:270;23144:1;23185;23182;23171:16;23221:1;23218;23207:16;23242:3;23232:37;;23249:18;;:::i;:::-;-1:-1:-1;;23285:17:76;;-1:-1:-1;;23304:15:76;;23281:39;23278:65;;;23323:18;;:::i;:::-;23357:14;;;23107:270;-1:-1:-1;;;23107:270:76:o;23382:204::-;23420:3;23456:4;23453:1;23449:12;23488:4;23485:1;23481:12;23523:3;23517:4;23513:14;23508:3;23505:23;23502:49;;;23531:18;;:::i;:::-;23567:13;;23382:204;-1:-1:-1;;;23382:204:76:o;23591:195::-;23629:4;23666;23663:1;23659:12;23698:4;23695:1;23691:12;23723:3;23718;23715:12;23712:38;;;23730:18;;:::i;:::-;23767:13;;;23591:195;-1:-1:-1;;;23591:195:76:o;23791:331::-;23828:3;23871:1;23868;23857:16;23907:1;23904;23893:16;23937:1;23932:3;23928:11;23986:3;23980:4;23976:14;23971:3;23967:24;23962:2;23955:10;23951:41;23948:67;;;23995:18;;:::i;:::-;24058:3;24052;24048:8;24044:18;24039:3;24035:28;24031:2;24027:37;24024:63;;;24067:18;;:::i;:::-;-1:-1:-1;24103:13:76;;23791:331;-1:-1:-1;;;23791:331:76:o;24127:120::-;24167:1;24193;24183:35;;24198:18;;:::i;:::-;-1:-1:-1;24232:9:76;;24127:120::o;24347:1490::-;24579:13;;-1:-1:-1;;;;;84:31:76;72:44;;24543:3;24528:19;;24651:4;24643:6;24639:17;24633:24;24666:58;24718:4;24707:9;24703:20;24689:12;-1:-1:-1;;;;;84:31:76;72:44;;14:108;24666:58;;24773:4;24765:6;24761:17;24755:24;24788:60;24842:4;24831:9;24827:20;24811:14;-1:-1:-1;;;;;84:31:76;72:44;;14:108;24788:60;;24897:4;24889:6;24885:17;24879:24;24912:53;24959:4;24948:9;24944:20;24928:14;416:13;409:21;397:34;;346:91;24912:53;;25021:4;25013:6;25009:17;25003:24;24996:4;24985:9;24981:20;24974:54;25084:4;25076:6;25072:17;25066:24;25059:4;25048:9;25044:20;25037:54;25147:4;25139:6;25135:17;25129:24;25122:4;25111:9;25107:20;25100:54;25203:4;25195:6;25191:17;25185:24;25218:55;25267:4;25256:9;25252:20;25236:14;10068:10;10057:22;10045:35;;9992:94;25218:55;-1:-1:-1;25292:6:76;25335:15;;;25329:22;7123:14;7112:26;;;25394:18;;;7100:39;;;;25432:6;25475:15;;;25469:22;7112:26;;;25534:18;;;7100:39;25572:6;25615:15;;;25609:22;10068:10;10057:22;25674:18;;;10045:35;25712:6;25755:15;;;25749:22;-1:-1:-1;24315:20:76;25812:18;;;;24303:33;;;;24347:1490;:::o;26409:348::-;26639:2;26628:9;26621:21;26602:4;26659:49;26704:2;26693:9;26689:18;26322:2;26310:15;;-1:-1:-1;;;26350:4:76;26341:14;;26334:36;26395:2;26386:12;;26245:159;26659:49;26651:57;;26744:6;26739:2;26728:9;26724:18;26717:34;26409:348;;;;:::o;26926:::-;27156:2;27145:9;27138:21;27119:4;27176:49;27221:2;27210:9;27206:18;26839:2;26827:15;;-1:-1:-1;;;26867:4:76;26858:14;;26851:36;26912:2;26903:12;;26762:159;27685:374;27915:2;27904:9;27897:21;27878:4;27935:49;27980:2;27969:9;27965:18;26322:2;26310:15;;-1:-1:-1;;;26350:4:76;26341:14;;26334:36;26395:2;26386:12;;26245:159;27935:49;-1:-1:-1;;;;;28020:32:76;;;;28015:2;28000:18;;;;27993:60;;;;-1:-1:-1;27927:57:76;27685:374::o;28064:::-;28294:2;28283:9;28276:21;28257:4;28314:49;28359:2;28348:9;28344:18;26839:2;26827:15;;-1:-1:-1;;;26867:4:76;26858:14;;26851:36;26912:2;26903:12;;26762:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCorrectness_OnlyWhitelistedMarketsCanCallback()": "38906dbd",
    "testCorrectness_amountsForMarket()": "3be22132",
    "testCorrectness_batchToTreasury()": "4b59caab",
    "testCorrectness_callback()": "570af261",
    "testCorrectness_callbackMustReceiveTokens()": "f2b2afce",
    "testCorrectness_setOperator()": "9e0c5608",
    "testCorrectness_whitelist()": "ce597df3",
    "userCreator()": "c7d81eff",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "src/test/policies/BondCallback.t.sol",
    "id": 54094,
    "exportedSymbols": {
      "Actions": [
        22545
      ],
      "BondAggregator": [
        38003
      ],
      "BondCallback": [
        29471
      ],
      "BondCallbackTest": [
        54093
      ],
      "BondFixedTermCDA": [
        38051
      ],
      "BondFixedTermTeller": [
        38603
      ],
      "ERC20": [
        22445
      ],
      "FullMath": [
        26307
      ],
      "IBondAggregator": [
        25819
      ],
      "IBondAuctioneer": [
        26024
      ],
      "Instruction": [
        22551
      ],
      "InvalidKeycode": [
        65744
      ],
      "InvalidRole": [
        65749
      ],
      "Kernel": [
        23747
      ],
      "KernelAdapter": [
        22609
      ],
      "KernelAdapter_OnlyKernel": [
        22478
      ],
      "Kernel_AddressAlreadyHasRole": [
        22525
      ],
      "Kernel_AddressDoesNotHaveRole": [
        22532
      ],
      "Kernel_InvalidModuleUpgrade": [
        22510
      ],
      "Kernel_ModuleAlreadyInstalled": [
        22505
      ],
      "Kernel_OnlyAdmin": [
        22500
      ],
      "Kernel_OnlyExecutor": [
        22496
      ],
      "Kernel_PolicyAlreadyActivated": [
        22514
      ],
      "Kernel_PolicyNotActivated": [
        22518
      ],
      "Kernel_RoleDoesNotExist": [
        22537
      ],
      "Keycode": [
        22559
      ],
      "LibAuctioneer": [
        41859
      ],
      "MockERC20": [
        22057
      ],
      "MockOhm": [
        51933
      ],
      "MockPrice": [
        45385
      ],
      "Module": [
        22670
      ],
      "Module_PolicyNotPermitted": [
        22482
      ],
      "OHM": [
        25573
      ],
      "OlympusMinter": [
        26749
      ],
      "OlympusRange": [
        28279
      ],
      "OlympusTreasury": [
        28720
      ],
      "Operator": [
        33152
      ],
      "Permissions": [
        22557
      ],
      "Policy": [
        22777
      ],
      "Policy_ModuleDoesNotExist": [
        22492
      ],
      "Policy_OnlyRole": [
        22487
      ],
      "Role": [
        22561
      ],
      "RolesAuthority": [
        22009
      ],
      "SolmateAuthority": [
        21734
      ],
      "TargetNotAContract": [
        65739
      ],
      "Test": [
        3456
      ],
      "UserFactory": [
        37078
      ],
      "console2": [
        21562
      ],
      "ensureContract": [
        65823
      ],
      "ensureValidKeycode": [
        65868
      ],
      "ensureValidRole": [
        65923
      ],
      "fromKeycode": [
        65777
      ],
      "fromRole": [
        65805
      ],
      "toKeycode": [
        65763
      ],
      "toRole": [
        65791
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:23268:68",
    "nodes": [
      {
        "id": 51849,
        "nodeType": "PragmaDirective",
        "src": "38:24:68",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 51851,
        "nodeType": "ImportDirective",
        "src": "64:40:68",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 4796,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51850,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3456,
              "src": "72:4:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51853,
        "nodeType": "ImportDirective",
        "src": "105:48:68",
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 21563,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51852,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21562,
              "src": "113:8:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51855,
        "nodeType": "ImportDirective",
        "src": "154:53:68",
        "absolutePath": "src/test/lib/UserFactory.sol",
        "file": "test/lib/UserFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 37079,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51854,
              "name": "UserFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37078,
              "src": "162:11:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51857,
        "nodeType": "ImportDirective",
        "src": "209:69:68",
        "absolutePath": "src/test/lib/bonds/BondFixedTermCDA.sol",
        "file": "test/lib/bonds/BondFixedTermCDA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 38052,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51856,
              "name": "BondFixedTermCDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38051,
              "src": "217:16:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51859,
        "nodeType": "ImportDirective",
        "src": "279:65:68",
        "absolutePath": "src/test/lib/bonds/BondAggregator.sol",
        "file": "test/lib/bonds/BondAggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 38004,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51858,
              "name": "BondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38003,
              "src": "287:14:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51861,
        "nodeType": "ImportDirective",
        "src": "345:75:68",
        "absolutePath": "src/test/lib/bonds/BondFixedTermTeller.sol",
        "file": "test/lib/bonds/BondFixedTermTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 38604,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51860,
              "name": "BondFixedTermTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38603,
              "src": "353:19:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51863,
        "nodeType": "ImportDirective",
        "src": "421:95:68",
        "absolutePath": "src/test/lib/bonds/interfaces/IBondAuctioneer.sol",
        "file": "test/lib/bonds/interfaces/IBondAuctioneer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 41860,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51862,
              "name": "IBondAuctioneer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41859,
              "src": "429:15:68",
              "typeDescriptions": {}
            },
            "local": "LibAuctioneer",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51866,
        "nodeType": "ImportDirective",
        "src": "517:106:68",
        "absolutePath": "lib/solmate/src/auth/authorities/RolesAuthority.sol",
        "file": "solmate/auth/authorities/RolesAuthority.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 22010,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51864,
              "name": "RolesAuthority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22009,
              "src": "525:14:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 51865,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21734,
              "src": "541:9:68",
              "typeDescriptions": {}
            },
            "local": "SolmateAuthority",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51869,
        "nodeType": "ImportDirective",
        "src": "625:72:68",
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 22058,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51867,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22057,
              "src": "633:9:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 51868,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22445,
              "src": "644:5:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51871,
        "nodeType": "ImportDirective",
        "src": "698:51:68",
        "absolutePath": "src/test/mocks/MockPrice.sol",
        "file": "test/mocks/MockPrice.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 45386,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51870,
              "name": "MockPrice",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45385,
              "src": "706:9:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51873,
        "nodeType": "ImportDirective",
        "src": "751:63:68",
        "absolutePath": "src/interfaces/IBondAuctioneer.sol",
        "file": "interfaces/IBondAuctioneer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 26025,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51872,
              "name": "IBondAuctioneer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26024,
              "src": "759:15:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51875,
        "nodeType": "ImportDirective",
        "src": "815:63:68",
        "absolutePath": "src/interfaces/IBondAggregator.sol",
        "file": "interfaces/IBondAggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 25820,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51874,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25819,
              "src": "823:15:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51877,
        "nodeType": "ImportDirective",
        "src": "880:48:68",
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 26308,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51876,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26307,
              "src": "888:8:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51879,
        "nodeType": "ImportDirective",
        "src": "930:47:68",
        "absolutePath": "src/modules/RANGE.sol",
        "file": "modules/RANGE.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 28280,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51878,
              "name": "OlympusRange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28279,
              "src": "938:12:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51881,
        "nodeType": "ImportDirective",
        "src": "978:50:68",
        "absolutePath": "src/modules/TRSRY.sol",
        "file": "modules/TRSRY.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 28721,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51880,
              "name": "OlympusTreasury",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28720,
              "src": "986:15:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51884,
        "nodeType": "ImportDirective",
        "src": "1029:53:68",
        "absolutePath": "src/modules/MINTR.sol",
        "file": "modules/MINTR.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 26750,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51882,
              "name": "OlympusMinter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26749,
              "src": "1037:13:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 51883,
              "name": "OHM",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25573,
              "src": "1052:3:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51885,
        "nodeType": "ImportDirective",
        "src": "1083:24:68",
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 23748,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51887,
        "nodeType": "ImportDirective",
        "src": "1109:47:68",
        "absolutePath": "src/policies/Operator.sol",
        "file": "policies/Operator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 33153,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51886,
              "name": "Operator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33152,
              "src": "1117:8:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51889,
        "nodeType": "ImportDirective",
        "src": "1157:55:68",
        "absolutePath": "src/policies/BondCallback.sol",
        "file": "policies/BondCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54094,
        "sourceUnit": 29472,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51888,
              "name": "BondCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29471,
              "src": "1165:12:68",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51933,
        "nodeType": "ContractDefinition",
        "src": "1214:370:68",
        "nodes": [
          {
            "id": 51906,
            "nodeType": "FunctionDefinition",
            "src": "1246:138:68",
            "body": {
              "id": 51905,
              "nodeType": "Block",
              "src": "1382:2:68",
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 51900,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51893,
                    "src": "1355:5:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 51901,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51895,
                    "src": "1362:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 51902,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51897,
                    "src": "1371:9:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 51903,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 51899,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22445,
                  "src": "1349:5:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "1349:32:68"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 51898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51893,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1281:5:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 51906,
                  "src": "1267:19:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51892,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:6:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51895,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1310:7:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 51906,
                  "src": "1296:21:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51894,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1296:6:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51897,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "1333:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 51906,
                  "src": "1327:15:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 51896,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:5:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:91:68"
            },
            "returnParameters": {
              "id": 51904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:0:68"
            },
            "scope": 51933,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51919,
            "nodeType": "FunctionDefinition",
            "src": "1390:89:68",
            "body": {
              "id": 51918,
              "nodeType": "Block",
              "src": "1446:33:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51914,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51908,
                        "src": "1462:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51915,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51910,
                        "src": "1466:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51913,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22416,
                      "src": "1456:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 51916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1456:16:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51917,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:16:68"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1399:4:68",
            "parameters": {
              "id": 51911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51908,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1412:2:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 51919,
                  "src": "1404:10:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51910,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1424:5:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 51919,
                  "src": "1416:13:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1416:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1403:27:68"
            },
            "returnParameters": {
              "id": 51912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:68"
            },
            "scope": 51933,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 51932,
            "nodeType": "FunctionDefinition",
            "src": "1485:97:68",
            "body": {
              "id": 51931,
              "nodeType": "Block",
              "src": "1547:35:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51927,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51921,
                        "src": "1563:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51928,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51923,
                        "src": "1569:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51926,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22444,
                      "src": "1557:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 51929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1557:18:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51930,
                  "nodeType": "ExpressionStatement",
                  "src": "1557:18:68"
                }
              ]
            },
            "functionSelector": "79cc6790",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "1494:8:68",
            "parameters": {
              "id": 51924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51921,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1511:4:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 51932,
                  "src": "1503:12:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51923,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1525:5:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 51932,
                  "src": "1517:13:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1502:29:68"
            },
            "returnParameters": {
              "id": 51925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1547:0:68"
            },
            "scope": 51933,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 51890,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22445,
              "src": "1234:5:68"
            },
            "id": 51891,
            "nodeType": "InheritanceSpecifier",
            "src": "1234:5:68"
          }
        ],
        "canonicalName": "MockOhm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          51933,
          22445
        ],
        "name": "MockOhm",
        "nameLocation": "1223:7:68",
        "scope": 54094,
        "usedErrors": []
      },
      {
        "id": 54093,
        "nodeType": "ContractDefinition",
        "src": "1632:21673:68",
        "nodes": [
          {
            "id": 51938,
            "nodeType": "UsingForDirective",
            "src": "1672:27:68",
            "global": false,
            "libraryName": {
              "id": 51936,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26307,
              "src": "1678:8:68"
            },
            "typeName": {
              "id": 51937,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1691:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 51941,
            "nodeType": "VariableDeclaration",
            "src": "1705:30:68",
            "constant": false,
            "functionSelector": "c7d81eff",
            "mutability": "mutable",
            "name": "userCreator",
            "nameLocation": "1724:11:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserFactory_$37078",
              "typeString": "contract UserFactory"
            },
            "typeName": {
              "id": 51940,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51939,
                "name": "UserFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37078,
                "src": "1705:11:68"
              },
              "referencedDeclaration": 37078,
              "src": "1705:11:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserFactory_$37078",
                "typeString": "contract UserFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 51943,
            "nodeType": "VariableDeclaration",
            "src": "1741:22:68",
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1758:5:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51942,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1741:7:68",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51945,
            "nodeType": "VariableDeclaration",
            "src": "1769:20:68",
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1786:3:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51944,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1769:7:68",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51947,
            "nodeType": "VariableDeclaration",
            "src": "1795:25:68",
            "constant": false,
            "mutability": "mutable",
            "name": "guardian",
            "nameLocation": "1812:8:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51946,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1795:7:68",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51949,
            "nodeType": "VariableDeclaration",
            "src": "1826:23:68",
            "constant": false,
            "mutability": "mutable",
            "name": "policy",
            "nameLocation": "1843:6:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51948,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1826:7:68",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51952,
            "nodeType": "VariableDeclaration",
            "src": "1856:28:68",
            "constant": false,
            "mutability": "mutable",
            "name": "auth",
            "nameLocation": "1880:4:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RolesAuthority_$22009",
              "typeString": "contract RolesAuthority"
            },
            "typeName": {
              "id": 51951,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51950,
                "name": "RolesAuthority",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22009,
                "src": "1856:14:68"
              },
              "referencedDeclaration": 22009,
              "src": "1856:14:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesAuthority_$22009",
                "typeString": "contract RolesAuthority"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51955,
            "nodeType": "VariableDeclaration",
            "src": "1890:34:68",
            "constant": false,
            "mutability": "mutable",
            "name": "aggregator",
            "nameLocation": "1914:10:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondAggregator_$38003",
              "typeString": "contract BondAggregator"
            },
            "typeName": {
              "id": 51954,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51953,
                "name": "BondAggregator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38003,
                "src": "1890:14:68"
              },
              "referencedDeclaration": 38003,
              "src": "1890:14:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondAggregator_$38003",
                "typeString": "contract BondAggregator"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51958,
            "nodeType": "VariableDeclaration",
            "src": "1930:35:68",
            "constant": false,
            "mutability": "mutable",
            "name": "teller",
            "nameLocation": "1959:6:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
              "typeString": "contract BondFixedTermTeller"
            },
            "typeName": {
              "id": 51957,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51956,
                "name": "BondFixedTermTeller",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38603,
                "src": "1930:19:68"
              },
              "referencedDeclaration": 38603,
              "src": "1930:19:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                "typeString": "contract BondFixedTermTeller"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51961,
            "nodeType": "VariableDeclaration",
            "src": "1971:36:68",
            "constant": false,
            "mutability": "mutable",
            "name": "auctioneer",
            "nameLocation": "1997:10:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
              "typeString": "contract BondFixedTermCDA"
            },
            "typeName": {
              "id": 51960,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51959,
                "name": "BondFixedTermCDA",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38051,
                "src": "1971:16:68"
              },
              "referencedDeclaration": 38051,
              "src": "1971:16:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
                "typeString": "contract BondFixedTermCDA"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51964,
            "nodeType": "VariableDeclaration",
            "src": "2013:20:68",
            "constant": false,
            "mutability": "mutable",
            "name": "ohm",
            "nameLocation": "2030:3:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockOhm_$51933",
              "typeString": "contract MockOhm"
            },
            "typeName": {
              "id": 51963,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51962,
                "name": "MockOhm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51933,
                "src": "2013:7:68"
              },
              "referencedDeclaration": 51933,
              "src": "2013:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockOhm_$51933",
                "typeString": "contract MockOhm"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51967,
            "nodeType": "VariableDeclaration",
            "src": "2039:26:68",
            "constant": false,
            "mutability": "mutable",
            "name": "reserve",
            "nameLocation": "2058:7:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$22057",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 51966,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51965,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22057,
                "src": "2039:9:68"
              },
              "referencedDeclaration": 22057,
              "src": "2039:9:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$22057",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51970,
            "nodeType": "VariableDeclaration",
            "src": "2071:24:68",
            "constant": false,
            "mutability": "mutable",
            "name": "other",
            "nameLocation": "2090:5:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$22057",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 51969,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51968,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22057,
                "src": "2071:9:68"
              },
              "referencedDeclaration": 22057,
              "src": "2071:9:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$22057",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51973,
            "nodeType": "VariableDeclaration",
            "src": "2102:22:68",
            "constant": false,
            "mutability": "mutable",
            "name": "kernel",
            "nameLocation": "2118:6:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Kernel_$23747",
              "typeString": "contract Kernel"
            },
            "typeName": {
              "id": 51972,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51971,
                "name": "Kernel",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23747,
                "src": "2102:6:68"
              },
              "referencedDeclaration": 23747,
              "src": "2102:6:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Kernel_$23747",
                "typeString": "contract Kernel"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51976,
            "nodeType": "VariableDeclaration",
            "src": "2130:24:68",
            "constant": false,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "2149:5:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockPrice_$45385",
              "typeString": "contract MockPrice"
            },
            "typeName": {
              "id": 51975,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51974,
                "name": "MockPrice",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45385,
                "src": "2130:9:68"
              },
              "referencedDeclaration": 45385,
              "src": "2130:9:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockPrice_$45385",
                "typeString": "contract MockPrice"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51979,
            "nodeType": "VariableDeclaration",
            "src": "2160:27:68",
            "constant": false,
            "mutability": "mutable",
            "name": "range",
            "nameLocation": "2182:5:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OlympusRange_$28279",
              "typeString": "contract OlympusRange"
            },
            "typeName": {
              "id": 51978,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51977,
                "name": "OlympusRange",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28279,
                "src": "2160:12:68"
              },
              "referencedDeclaration": 28279,
              "src": "2160:12:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OlympusRange_$28279",
                "typeString": "contract OlympusRange"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51982,
            "nodeType": "VariableDeclaration",
            "src": "2193:33:68",
            "constant": false,
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "2218:8:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
              "typeString": "contract OlympusTreasury"
            },
            "typeName": {
              "id": 51981,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51980,
                "name": "OlympusTreasury",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28720,
                "src": "2193:15:68"
              },
              "referencedDeclaration": 28720,
              "src": "2193:15:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                "typeString": "contract OlympusTreasury"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51985,
            "nodeType": "VariableDeclaration",
            "src": "2232:29:68",
            "constant": false,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "2255:6:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OlympusMinter_$26749",
              "typeString": "contract OlympusMinter"
            },
            "typeName": {
              "id": 51984,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51983,
                "name": "OlympusMinter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26749,
                "src": "2232:13:68"
              },
              "referencedDeclaration": 26749,
              "src": "2232:13:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OlympusMinter_$26749",
                "typeString": "contract OlympusMinter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51988,
            "nodeType": "VariableDeclaration",
            "src": "2268:26:68",
            "constant": false,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "2286:8:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Operator_$33152",
              "typeString": "contract Operator"
            },
            "typeName": {
              "id": 51987,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51986,
                "name": "Operator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33152,
                "src": "2268:8:68"
              },
              "referencedDeclaration": 33152,
              "src": "2268:8:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Operator_$33152",
                "typeString": "contract Operator"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51991,
            "nodeType": "VariableDeclaration",
            "src": "2300:30:68",
            "constant": false,
            "mutability": "mutable",
            "name": "callback",
            "nameLocation": "2322:8:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondCallback_$29471",
              "typeString": "contract BondCallback"
            },
            "typeName": {
              "id": 51990,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51989,
                "name": "BondCallback",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29471,
                "src": "2300:12:68"
              },
              "referencedDeclaration": 29471,
              "src": "2300:12:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondCallback_$29471",
                "typeString": "contract BondCallback"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51993,
            "nodeType": "VariableDeclaration",
            "src": "2373:24:68",
            "constant": false,
            "mutability": "mutable",
            "name": "regBond",
            "nameLocation": "2390:7:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51992,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2373:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51995,
            "nodeType": "VariableDeclaration",
            "src": "2403:24:68",
            "constant": false,
            "mutability": "mutable",
            "name": "invBond",
            "nameLocation": "2420:7:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51994,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2403:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51997,
            "nodeType": "VariableDeclaration",
            "src": "2433:29:68",
            "constant": false,
            "mutability": "mutable",
            "name": "internalBond",
            "nameLocation": "2450:12:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51996,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2433:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51999,
            "nodeType": "VariableDeclaration",
            "src": "2468:29:68",
            "constant": false,
            "mutability": "mutable",
            "name": "externalBond",
            "nameLocation": "2485:12:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51998,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2468:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 52001,
            "nodeType": "VariableDeclaration",
            "src": "2503:35:68",
            "constant": false,
            "mutability": "mutable",
            "name": "nonWhitelistedBond",
            "nameLocation": "2520:18:68",
            "scope": 54093,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 52000,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2503:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 52731,
            "nodeType": "FunctionDefinition",
            "src": "2545:6092:68",
            "body": {
              "id": 52730,
              "nodeType": "Block",
              "src": "2569:6068:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        },
                        "id": 52015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          },
                          "id": 52013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            },
                            "id": 52011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              },
                              "id": 52009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3531",
                                "id": 52007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2587:2:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_51_by_1",
                                  "typeString": "int_const 51"
                                },
                                "value": "51"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333635",
                                "id": 52008,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2592:3:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_365_by_1",
                                  "typeString": "int_const 365"
                                },
                                "value": "365"
                              },
                              "src": "2587:8:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3234",
                              "id": 52010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2598:2:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_24_by_1",
                                "typeString": "int_const 24"
                              },
                              "value": "24"
                            },
                            "src": "2587:13:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 52012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2603:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "2587:18:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 52014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2608:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "2587:23:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      ],
                      "expression": {
                        "id": 52004,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2579:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4809,
                      "src": "2579:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 52016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2579:32:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52017,
                  "nodeType": "ExpressionStatement",
                  "src": "2579:32:68"
                },
                {
                  "expression": {
                    "id": 52023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52018,
                      "name": "userCreator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51941,
                      "src": "2689:11:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$37078",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 52021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2703:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UserFactory_$37078_$",
                          "typeString": "function () returns (contract UserFactory)"
                        },
                        "typeName": {
                          "id": 52020,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 52019,
                            "name": "UserFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 37078,
                            "src": "2707:11:68"
                          },
                          "referencedDeclaration": 37078,
                          "src": "2707:11:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserFactory_$37078",
                            "typeString": "contract UserFactory"
                          }
                        }
                      },
                      "id": 52022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2703:17:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$37078",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "src": "2689:31:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserFactory_$37078",
                      "typeString": "contract UserFactory"
                    }
                  },
                  "id": 52024,
                  "nodeType": "ExpressionStatement",
                  "src": "2689:31:68"
                },
                {
                  "id": 52116,
                  "nodeType": "Block",
                  "src": "2730:734:68",
                  "statements": [
                    {
                      "assignments": [
                        52029
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 52029,
                          "mutability": "mutable",
                          "name": "users",
                          "nameLocation": "2812:5:68",
                          "nodeType": "VariableDeclaration",
                          "scope": 52116,
                          "src": "2795:22:68",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 52027,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2795:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 52028,
                            "nodeType": "ArrayTypeName",
                            "src": "2795:9:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "documentation": "Deploy bond system to test against",
                      "id": 52034,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 52032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2839:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 52030,
                            "name": "userCreator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51941,
                            "src": "2820:11:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserFactory_$37078",
                              "typeString": "contract UserFactory"
                            }
                          },
                          "id": 52031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "create",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37077,
                          "src": "2820:18:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) external returns (address[] memory)"
                          }
                        },
                        "id": 52033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2820:21:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2795:46:68"
                    },
                    {
                      "expression": {
                        "id": 52039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52035,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51943,
                          "src": "2855:5:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 52036,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52029,
                            "src": "2863:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 52038,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 52037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2869:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2863:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2855:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 52040,
                      "nodeType": "ExpressionStatement",
                      "src": "2855:16:68"
                    },
                    {
                      "expression": {
                        "id": 52045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52041,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51945,
                          "src": "2885:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 52042,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52029,
                            "src": "2891:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 52044,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 52043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2897:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2891:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2885:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 52046,
                      "nodeType": "ExpressionStatement",
                      "src": "2885:14:68"
                    },
                    {
                      "expression": {
                        "id": 52051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52047,
                          "name": "guardian",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51947,
                          "src": "2913:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 52048,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52029,
                            "src": "2924:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 52050,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 52049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2930:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2924:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2913:19:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 52052,
                      "nodeType": "ExpressionStatement",
                      "src": "2913:19:68"
                    },
                    {
                      "expression": {
                        "id": 52057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52053,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51949,
                          "src": "2946:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 52054,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52029,
                            "src": "2955:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 52056,
                          "indexExpression": {
                            "hexValue": "33",
                            "id": 52055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2961:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2955:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2946:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 52058,
                      "nodeType": "ExpressionStatement",
                      "src": "2946:17:68"
                    },
                    {
                      "expression": {
                        "id": 52071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52059,
                          "name": "auth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51952,
                          "src": "2977:4:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAuthority_$22009",
                            "typeString": "contract RolesAuthority"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 52063,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51947,
                              "src": "3003:8:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 52067,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3038:1:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 52066,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3030:7:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 52065,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3030:7:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52068,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3030:10:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 52064,
                                "name": "SolmateAuthority",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21734,
                                "src": "3013:16:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Authority_$21734_$",
                                  "typeString": "type(contract Authority)"
                                }
                              },
                              "id": 52069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3013:28:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Authority_$21734",
                                "typeString": "contract Authority"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_Authority_$21734",
                                "typeString": "contract Authority"
                              }
                            ],
                            "id": 52062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2984:18:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_Authority_$21734_$returns$_t_contract$_RolesAuthority_$22009_$",
                              "typeString": "function (address,contract Authority) returns (contract RolesAuthority)"
                            },
                            "typeName": {
                              "id": 52061,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52060,
                                "name": "RolesAuthority",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 22009,
                                "src": "2988:14:68"
                              },
                              "referencedDeclaration": 22009,
                              "src": "2988:14:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAuthority_$22009",
                                "typeString": "contract RolesAuthority"
                              }
                            }
                          },
                          "id": 52070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2984:58:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAuthority_$22009",
                            "typeString": "contract RolesAuthority"
                          }
                        },
                        "src": "2977:65:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesAuthority_$22009",
                          "typeString": "contract RolesAuthority"
                        }
                      },
                      "id": 52072,
                      "nodeType": "ExpressionStatement",
                      "src": "2977:65:68"
                    },
                    {
                      "documentation": "Deploy the bond system",
                      "expression": {
                        "id": 52080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52073,
                          "name": "aggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51955,
                          "src": "3096:10:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondAggregator_$38003",
                            "typeString": "contract BondAggregator"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 52077,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51947,
                              "src": "3128:8:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 52078,
                              "name": "auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51952,
                              "src": "3138:4:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAuthority_$22009",
                                "typeString": "contract RolesAuthority"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_RolesAuthority_$22009",
                                "typeString": "contract RolesAuthority"
                              }
                            ],
                            "id": 52076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3109:18:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_Authority_$21734_$returns$_t_contract$_BondAggregator_$38003_$",
                              "typeString": "function (address,contract Authority) returns (contract BondAggregator)"
                            },
                            "typeName": {
                              "id": 52075,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52074,
                                "name": "BondAggregator",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 38003,
                                "src": "3113:14:68"
                              },
                              "referencedDeclaration": 38003,
                              "src": "3113:14:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondAggregator_$38003",
                                "typeString": "contract BondAggregator"
                              }
                            }
                          },
                          "id": 52079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3109:34:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondAggregator_$38003",
                            "typeString": "contract BondAggregator"
                          }
                        },
                        "src": "3096:47:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondAggregator_$38003",
                          "typeString": "contract BondAggregator"
                        }
                      },
                      "id": 52081,
                      "nodeType": "ExpressionStatement",
                      "src": "3096:47:68"
                    },
                    {
                      "expression": {
                        "id": 52091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52082,
                          "name": "teller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51958,
                          "src": "3157:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                            "typeString": "contract BondFixedTermTeller"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 52086,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51947,
                              "src": "3190:8:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 52087,
                              "name": "aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51955,
                              "src": "3200:10:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondAggregator_$38003",
                                "typeString": "contract BondAggregator"
                              }
                            },
                            {
                              "id": 52088,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51947,
                              "src": "3212:8:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 52089,
                              "name": "auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51952,
                              "src": "3222:4:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAuthority_$22009",
                                "typeString": "contract RolesAuthority"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_BondAggregator_$38003",
                                "typeString": "contract BondAggregator"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_RolesAuthority_$22009",
                                "typeString": "contract RolesAuthority"
                              }
                            ],
                            "id": 52085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3166:23:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_IBondAggregator_$41654_$_t_address_$_t_contract$_Authority_$21734_$returns$_t_contract$_BondFixedTermTeller_$38603_$",
                              "typeString": "function (address,contract IBondAggregator,address,contract Authority) returns (contract BondFixedTermTeller)"
                            },
                            "typeName": {
                              "id": 52084,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52083,
                                "name": "BondFixedTermTeller",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 38603,
                                "src": "3170:19:68"
                              },
                              "referencedDeclaration": 38603,
                              "src": "3170:19:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          },
                          "id": 52090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3166:61:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                            "typeString": "contract BondFixedTermTeller"
                          }
                        },
                        "src": "3157:70:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                          "typeString": "contract BondFixedTermTeller"
                        }
                      },
                      "id": 52092,
                      "nodeType": "ExpressionStatement",
                      "src": "3157:70:68"
                    },
                    {
                      "expression": {
                        "id": 52102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52093,
                          "name": "auctioneer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51961,
                          "src": "3241:10:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
                            "typeString": "contract BondFixedTermCDA"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 52097,
                              "name": "teller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51958,
                              "src": "3275:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            },
                            {
                              "id": 52098,
                              "name": "aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51955,
                              "src": "3283:10:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondAggregator_$38003",
                                "typeString": "contract BondAggregator"
                              }
                            },
                            {
                              "id": 52099,
                              "name": "guardian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51947,
                              "src": "3295:8:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 52100,
                              "name": "auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51952,
                              "src": "3305:4:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAuthority_$22009",
                                "typeString": "contract RolesAuthority"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                "typeString": "contract BondFixedTermTeller"
                              },
                              {
                                "typeIdentifier": "t_contract$_BondAggregator_$38003",
                                "typeString": "contract BondAggregator"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_RolesAuthority_$22009",
                                "typeString": "contract RolesAuthority"
                              }
                            ],
                            "id": 52096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3254:20:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IBondTeller_$42145_$_t_contract$_IBondAggregator_$41654_$_t_address_$_t_contract$_Authority_$21734_$returns$_t_contract$_BondFixedTermCDA_$38051_$",
                              "typeString": "function (contract IBondTeller,contract IBondAggregator,address,contract Authority) returns (contract BondFixedTermCDA)"
                            },
                            "typeName": {
                              "id": 52095,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52094,
                                "name": "BondFixedTermCDA",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 38051,
                                "src": "3258:16:68"
                              },
                              "referencedDeclaration": 38051,
                              "src": "3258:16:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
                                "typeString": "contract BondFixedTermCDA"
                              }
                            }
                          },
                          "id": 52101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3254:56:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
                            "typeString": "contract BondFixedTermCDA"
                          }
                        },
                        "src": "3241:69:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
                          "typeString": "contract BondFixedTermCDA"
                        }
                      },
                      "id": 52103,
                      "nodeType": "ExpressionStatement",
                      "src": "3241:69:68"
                    },
                    {
                      "documentation": "Register auctioneer on the bond system",
                      "expression": {
                        "arguments": [
                          {
                            "id": 52107,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51947,
                            "src": "3389:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52104,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1817,
                            "src": "3380:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$5434",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 52106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5020,
                          "src": "3380:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 52108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3380:18:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52109,
                      "nodeType": "ExpressionStatement",
                      "src": "3380:18:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 52113,
                            "name": "auctioneer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51961,
                            "src": "3442:10:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
                              "typeString": "contract BondFixedTermCDA"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
                              "typeString": "contract BondFixedTermCDA"
                            }
                          ],
                          "expression": {
                            "id": 52110,
                            "name": "aggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51955,
                            "src": "3412:10:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondAggregator_$38003",
                              "typeString": "contract BondAggregator"
                            }
                          },
                          "id": 52112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "registerAuctioneer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37176,
                          "src": "3412:29:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IBondAuctioneer_$41859_$returns$__$",
                            "typeString": "function (contract IBondAuctioneer) external"
                          }
                        },
                        "id": 52114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3412:41:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52115,
                      "nodeType": "ExpressionStatement",
                      "src": "3412:41:68"
                    }
                  ]
                },
                {
                  "id": 52147,
                  "nodeType": "Block",
                  "src": "3474:212:68",
                  "statements": [
                    {
                      "documentation": "Deploy mock tokens",
                      "expression": {
                        "id": 52125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52117,
                          "name": "ohm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51964,
                          "src": "3523:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "4f6c796d707573",
                              "id": 52121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3541:9:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5cb8f939bed19e73a0229b7f12172ba2ec61ccc623f4cf0c36f42aacbd39b661",
                                "typeString": "literal_string \"Olympus\""
                              },
                              "value": "Olympus"
                            },
                            {
                              "hexValue": "4f484d",
                              "id": 52122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3552:5:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a0f091ebff8a32b2920ecd60eb2af7905fed9b40a6dc8e4b8059646979c74a70",
                                "typeString": "literal_string \"OHM\""
                              },
                              "value": "OHM"
                            },
                            {
                              "hexValue": "39",
                              "id": 52123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3559:1:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_5cb8f939bed19e73a0229b7f12172ba2ec61ccc623f4cf0c36f42aacbd39b661",
                                "typeString": "literal_string \"Olympus\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a0f091ebff8a32b2920ecd60eb2af7905fed9b40a6dc8e4b8059646979c74a70",
                                "typeString": "literal_string \"OHM\""
                              },
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "id": 52120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3529:11:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockOhm_$51933_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockOhm)"
                            },
                            "typeName": {
                              "id": 52119,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52118,
                                "name": "MockOhm",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 51933,
                                "src": "3533:7:68"
                              },
                              "referencedDeclaration": 51933,
                              "src": "3533:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockOhm_$51933",
                                "typeString": "contract MockOhm"
                              }
                            }
                          },
                          "id": 52124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3529:32:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          }
                        },
                        "src": "3523:38:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        }
                      },
                      "id": 52126,
                      "nodeType": "ExpressionStatement",
                      "src": "3523:38:68"
                    },
                    {
                      "expression": {
                        "id": 52135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52127,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51967,
                          "src": "3575:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "52657365727665",
                              "id": 52131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3599:9:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aab74a77d8ce26d227789a153a9097d216f9d5859be6b3918f997a8823e92984",
                                "typeString": "literal_string \"Reserve\""
                              },
                              "value": "Reserve"
                            },
                            {
                              "hexValue": "525356",
                              "id": 52132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3610:5:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c0573bf983b084f6880b2867252c780d982234fd6f5a60015b7eb2568f48ac9f",
                                "typeString": "literal_string \"RSV\""
                              },
                              "value": "RSV"
                            },
                            {
                              "hexValue": "3138",
                              "id": 52133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3617:2:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_aab74a77d8ce26d227789a153a9097d216f9d5859be6b3918f997a8823e92984",
                                "typeString": "literal_string \"Reserve\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c0573bf983b084f6880b2867252c780d982234fd6f5a60015b7eb2568f48ac9f",
                                "typeString": "literal_string \"RSV\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 52130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3585:13:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$22057_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 52129,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52128,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 22057,
                                "src": "3589:9:68"
                              },
                              "referencedDeclaration": 22057,
                              "src": "3589:9:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$22057",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 52134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3585:35:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "3575:45:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 52136,
                      "nodeType": "ExpressionStatement",
                      "src": "3575:45:68"
                    },
                    {
                      "expression": {
                        "id": 52145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52137,
                          "name": "other",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51970,
                          "src": "3634:5:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "4f74686572",
                              "id": 52141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3656:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0691aa2e8423768d061c955d231ebcfd39568459920cd05dc1ff1ffe2ca6f04a",
                                "typeString": "literal_string \"Other\""
                              },
                              "value": "Other"
                            },
                            {
                              "hexValue": "4f5448",
                              "id": 52142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3665:5:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2bbdabf55ac2a4142a0f27886b9d660587700fc875eb8ee81b5d15ad4198cf44",
                                "typeString": "literal_string \"OTH\""
                              },
                              "value": "OTH"
                            },
                            {
                              "hexValue": "3138",
                              "id": 52143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3672:2:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_0691aa2e8423768d061c955d231ebcfd39568459920cd05dc1ff1ffe2ca6f04a",
                                "typeString": "literal_string \"Other\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2bbdabf55ac2a4142a0f27886b9d660587700fc875eb8ee81b5d15ad4198cf44",
                                "typeString": "literal_string \"OTH\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 52140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3642:13:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$22057_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 52139,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52138,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 22057,
                                "src": "3646:9:68"
                              },
                              "referencedDeclaration": 22057,
                              "src": "3646:9:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$22057",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 52144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3642:33:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "3634:41:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 52146,
                      "nodeType": "ExpressionStatement",
                      "src": "3634:41:68"
                    }
                  ]
                },
                {
                  "id": 52237,
                  "nodeType": "Block",
                  "src": "3696:677:68",
                  "statements": [
                    {
                      "documentation": "Deploy kernel",
                      "expression": {
                        "id": 52153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52148,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51973,
                          "src": "3740:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$23747",
                            "typeString": "contract Kernel"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 52151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3749:10:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Kernel_$23747_$",
                              "typeString": "function () returns (contract Kernel)"
                            },
                            "typeName": {
                              "id": 52150,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52149,
                                "name": "Kernel",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 23747,
                                "src": "3753:6:68"
                              },
                              "referencedDeclaration": 23747,
                              "src": "3753:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              }
                            }
                          },
                          "id": 52152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3749:12:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$23747",
                            "typeString": "contract Kernel"
                          }
                        },
                        "src": "3740:21:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$23747",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 52154,
                      "nodeType": "ExpressionStatement",
                      "src": "3740:21:68"
                    },
                    {
                      "documentation": "Deploy modules (some mocks)",
                      "expression": {
                        "id": 52165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52155,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51976,
                          "src": "3858:5:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$45385",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 52159,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51973,
                              "src": "3880:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "38",
                                  "id": 52162,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3895:7:68",
                                  "subdenomination": "hours",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  },
                                  "value": "8"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  }
                                ],
                                "id": 52161,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3888:6:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 52160,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3888:6:68",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 52163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3888:15:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 52158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3866:13:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$23747_$_t_uint48_$returns$_t_contract$_MockPrice_$45385_$",
                              "typeString": "function (contract Kernel,uint48) returns (contract MockPrice)"
                            },
                            "typeName": {
                              "id": 52157,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52156,
                                "name": "MockPrice",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 45385,
                                "src": "3870:9:68"
                              },
                              "referencedDeclaration": 45385,
                              "src": "3870:9:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockPrice_$45385",
                                "typeString": "contract MockPrice"
                              }
                            }
                          },
                          "id": 52164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3866:38:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$45385",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "src": "3858:46:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockPrice_$45385",
                          "typeString": "contract MockPrice"
                        }
                      },
                      "id": 52166,
                      "nodeType": "ExpressionStatement",
                      "src": "3858:46:68"
                    },
                    {
                      "expression": {
                        "id": 52193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52167,
                          "name": "range",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51979,
                          "src": "3918:5:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusRange_$28279",
                            "typeString": "contract OlympusRange"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 52171,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51973,
                              "src": "3960:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "id": 52173,
                                      "name": "ohm",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51964,
                                      "src": "3991:3:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockOhm_$51933",
                                        "typeString": "contract MockOhm"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockOhm_$51933",
                                        "typeString": "contract MockOhm"
                                      }
                                    ],
                                    "id": 52172,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22445,
                                    "src": "3985:5:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$22445_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 52174,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3985:10:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$22445",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 52176,
                                      "name": "reserve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51967,
                                      "src": "4003:7:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockERC20_$22057",
                                        "typeString": "contract MockERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockERC20_$22057",
                                        "typeString": "contract MockERC20"
                                      }
                                    ],
                                    "id": 52175,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22445,
                                    "src": "3997:5:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$22445_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 52177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3997:14:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$22445",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "id": 52178,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3984:28:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$2_memory_ptr",
                                "typeString": "contract ERC20[2] memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "313030",
                                      "id": 52181,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4039:3:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "id": 52180,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4031:7:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 52179,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4031:7:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4031:12:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31303030",
                                      "id": 52185,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4053:4:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      }
                                    ],
                                    "id": 52184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4045:7:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 52183,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4045:7:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4045:13:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "32303030",
                                      "id": 52189,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4068:4:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2000_by_1",
                                        "typeString": "int_const 2000"
                                      },
                                      "value": "2000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2000_by_1",
                                        "typeString": "int_const 2000"
                                      }
                                    ],
                                    "id": 52188,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4060:7:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 52187,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4060:7:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52190,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4060:13:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 52191,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4030:44:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                "typeString": "uint256[3] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$2_memory_ptr",
                                "typeString": "contract ERC20[2] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                "typeString": "uint256[3] memory"
                              }
                            ],
                            "id": 52170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3926:16:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$23747_$_t_array$_t_contract$_ERC20_$22445_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$returns$_t_contract$_OlympusRange_$28279_$",
                              "typeString": "function (contract Kernel,contract ERC20[2] memory,uint256[3] memory) returns (contract OlympusRange)"
                            },
                            "typeName": {
                              "id": 52169,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52168,
                                "name": "OlympusRange",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 28279,
                                "src": "3930:12:68"
                              },
                              "referencedDeclaration": 28279,
                              "src": "3930:12:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusRange_$28279",
                                "typeString": "contract OlympusRange"
                              }
                            }
                          },
                          "id": 52192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3926:162:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusRange_$28279",
                            "typeString": "contract OlympusRange"
                          }
                        },
                        "src": "3918:170:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusRange_$28279",
                          "typeString": "contract OlympusRange"
                        }
                      },
                      "id": 52194,
                      "nodeType": "ExpressionStatement",
                      "src": "3918:170:68"
                    },
                    {
                      "expression": {
                        "id": 52201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52195,
                          "name": "treasury",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51982,
                          "src": "4102:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                            "typeString": "contract OlympusTreasury"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 52199,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51973,
                              "src": "4133:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 52198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4113:19:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$23747_$returns$_t_contract$_OlympusTreasury_$28720_$",
                              "typeString": "function (contract Kernel) returns (contract OlympusTreasury)"
                            },
                            "typeName": {
                              "id": 52197,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52196,
                                "name": "OlympusTreasury",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 28720,
                                "src": "4117:15:68"
                              },
                              "referencedDeclaration": 28720,
                              "src": "4117:15:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                "typeString": "contract OlympusTreasury"
                              }
                            }
                          },
                          "id": 52200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4113:27:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                            "typeString": "contract OlympusTreasury"
                          }
                        },
                        "src": "4102:38:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                          "typeString": "contract OlympusTreasury"
                        }
                      },
                      "id": 52202,
                      "nodeType": "ExpressionStatement",
                      "src": "4102:38:68"
                    },
                    {
                      "expression": {
                        "id": 52213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52203,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51985,
                          "src": "4154:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusMinter_$26749",
                            "typeString": "contract OlympusMinter"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 52207,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51973,
                              "src": "4181:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 52210,
                                  "name": "ohm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51964,
                                  "src": "4197:3:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockOhm_$51933",
                                    "typeString": "contract MockOhm"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockOhm_$51933",
                                    "typeString": "contract MockOhm"
                                  }
                                ],
                                "id": 52209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4189:7:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 52208,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4189:7:68",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 52211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4189:12:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 52206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4163:17:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$23747_$_t_address_$returns$_t_contract$_OlympusMinter_$26749_$",
                              "typeString": "function (contract Kernel,address) returns (contract OlympusMinter)"
                            },
                            "typeName": {
                              "id": 52205,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52204,
                                "name": "OlympusMinter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 26749,
                                "src": "4167:13:68"
                              },
                              "referencedDeclaration": 26749,
                              "src": "4167:13:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusMinter_$26749",
                                "typeString": "contract OlympusMinter"
                              }
                            }
                          },
                          "id": 52212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4163:39:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusMinter_$26749",
                            "typeString": "contract OlympusMinter"
                          }
                        },
                        "src": "4154:48:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusMinter_$26749",
                          "typeString": "contract OlympusMinter"
                        }
                      },
                      "id": 52214,
                      "nodeType": "ExpressionStatement",
                      "src": "4154:48:68"
                    },
                    {
                      "documentation": "Configure mocks",
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 52220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 52218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4272:3:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 52219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4278:4:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "4272:10:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52215,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51976,
                            "src": "4249:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$45385",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 52217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setMovingAverage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45354,
                          "src": "4249:22:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 52221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4249:34:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52222,
                      "nodeType": "ExpressionStatement",
                      "src": "4249:34:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 52228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 52226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4316:3:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 52227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4322:4:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "4316:10:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 52223,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51976,
                            "src": "4297:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$45385",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 52225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setLastPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45364,
                          "src": "4297:18:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 52229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4297:30:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52230,
                      "nodeType": "ExpressionStatement",
                      "src": "4297:30:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "3138",
                            "id": 52234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4359:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            }
                          ],
                          "expression": {
                            "id": 52231,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51976,
                            "src": "4341:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$45385",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 52233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setDecimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45384,
                          "src": "4341:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$returns$__$",
                            "typeString": "function (uint8) external"
                          }
                        },
                        "id": 52235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4341:21:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52236,
                      "nodeType": "ExpressionStatement",
                      "src": "4341:21:68"
                    }
                  ]
                },
                {
                  "id": 52340,
                  "nodeType": "Block",
                  "src": "4383:1168:68",
                  "statements": [
                    {
                      "documentation": "Deploy bond callback",
                      "expression": {
                        "id": 52251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52238,
                          "name": "callback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51991,
                          "src": "4434:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondCallback_$29471",
                            "typeString": "contract BondCallback"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 52242,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51973,
                              "src": "4462:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 52246,
                                      "name": "aggregator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51955,
                                      "src": "4494:10:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BondAggregator_$38003",
                                        "typeString": "contract BondAggregator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BondAggregator_$38003",
                                        "typeString": "contract BondAggregator"
                                      }
                                    ],
                                    "id": 52245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4486:7:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 52244,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4486:7:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52247,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4486:19:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 52243,
                                "name": "IBondAggregator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25819,
                                "src": "4470:15:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBondAggregator_$25819_$",
                                  "typeString": "type(contract IBondAggregator)"
                                }
                              },
                              "id": 52248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4470:36:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBondAggregator_$25819",
                                "typeString": "contract IBondAggregator"
                              }
                            },
                            {
                              "id": 52249,
                              "name": "ohm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51964,
                              "src": "4508:3:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockOhm_$51933",
                                "typeString": "contract MockOhm"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_contract$_IBondAggregator_$25819",
                                "typeString": "contract IBondAggregator"
                              },
                              {
                                "typeIdentifier": "t_contract$_MockOhm_$51933",
                                "typeString": "contract MockOhm"
                              }
                            ],
                            "id": 52241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4445:16:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$23747_$_t_contract$_IBondAggregator_$25819_$_t_contract$_ERC20_$22445_$returns$_t_contract$_BondCallback_$29471_$",
                              "typeString": "function (contract Kernel,contract IBondAggregator,contract ERC20) returns (contract BondCallback)"
                            },
                            "typeName": {
                              "id": 52240,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52239,
                                "name": "BondCallback",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 29471,
                                "src": "4449:12:68"
                              },
                              "referencedDeclaration": 29471,
                              "src": "4449:12:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$29471",
                                "typeString": "contract BondCallback"
                              }
                            }
                          },
                          "id": 52250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4445:67:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondCallback_$29471",
                            "typeString": "contract BondCallback"
                          }
                        },
                        "src": "4434:78:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 52252,
                      "nodeType": "ExpressionStatement",
                      "src": "4434:78:68"
                    },
                    {
                      "documentation": "Deploy operator",
                      "expression": {
                        "id": 52306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 52253,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51988,
                          "src": "4559:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Operator_$33152",
                            "typeString": "contract Operator"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 52257,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51973,
                              "src": "4600:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 52261,
                                      "name": "auctioneer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51961,
                                      "src": "4648:10:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
                                        "typeString": "contract BondFixedTermCDA"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
                                        "typeString": "contract BondFixedTermCDA"
                                      }
                                    ],
                                    "id": 52260,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4640:7:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 52259,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4640:7:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52262,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4640:19:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 52258,
                                "name": "IBondAuctioneer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26024,
                                "src": "4624:15:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBondAuctioneer_$26024_$",
                                  "typeString": "type(contract IBondAuctioneer)"
                                }
                              },
                              "id": 52263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4624:36:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBondAuctioneer_$26024",
                                "typeString": "contract IBondAuctioneer"
                              }
                            },
                            {
                              "id": 52264,
                              "name": "callback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51991,
                              "src": "4678:8:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$29471",
                                "typeString": "contract BondCallback"
                              }
                            },
                            {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "id": 52266,
                                      "name": "ohm",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51964,
                                      "src": "4711:3:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockOhm_$51933",
                                        "typeString": "contract MockOhm"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockOhm_$51933",
                                        "typeString": "contract MockOhm"
                                      }
                                    ],
                                    "id": 52265,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22445,
                                    "src": "4705:5:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$22445_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 52267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4705:10:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$22445",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 52269,
                                      "name": "reserve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51967,
                                      "src": "4723:7:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockERC20_$22057",
                                        "typeString": "contract MockERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockERC20_$22057",
                                        "typeString": "contract MockERC20"
                                      }
                                    ],
                                    "id": 52268,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22445,
                                    "src": "4717:5:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$22445_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 52270,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4717:14:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$22445",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "id": 52271,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4704:28:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$2_memory_ptr",
                                "typeString": "contract ERC20[2] memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "32303030",
                                      "id": 52274,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4779:4:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2000_by_1",
                                        "typeString": "int_const 2000"
                                      },
                                      "value": "2000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2000_by_1",
                                        "typeString": "int_const 2000"
                                      }
                                    ],
                                    "id": 52273,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4772:6:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 52272,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4772:6:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52275,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4772:12:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "35",
                                      "id": 52278,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4830:6:68",
                                      "subdenomination": "days",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_432000_by_1",
                                        "typeString": "int_const 432000"
                                      },
                                      "value": "5"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_432000_by_1",
                                        "typeString": "int_const 432000"
                                      }
                                    ],
                                    "id": 52277,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4823:6:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 52276,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4823:6:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52279,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4823:14:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "3130305f303030",
                                      "id": 52282,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4878:7:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100000_by_1",
                                        "typeString": "int_const 100000"
                                      },
                                      "value": "100_000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100000_by_1",
                                        "typeString": "int_const 100000"
                                      }
                                    ],
                                    "id": 52281,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4871:6:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 52280,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4871:6:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4871:15:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 52286,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4929:7:68",
                                      "subdenomination": "hours",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3600_by_1",
                                        "typeString": "int_const 3600"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_3600_by_1",
                                        "typeString": "int_const 3600"
                                      }
                                    ],
                                    "id": 52285,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4922:6:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 52284,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4922:6:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52287,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4922:15:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31303030",
                                      "id": 52290,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4985:4:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      }
                                    ],
                                    "id": 52289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4978:6:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 52288,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4978:6:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52291,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4978:12:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 52294,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5036:7:68",
                                      "subdenomination": "hours",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3600_by_1",
                                        "typeString": "int_const 3600"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_3600_by_1",
                                        "typeString": "int_const 3600"
                                      }
                                    ],
                                    "id": 52293,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5029:6:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 52292,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5029:6:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5029:15:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "35",
                                      "id": 52298,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5086:1:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_5_by_1",
                                        "typeString": "int_const 5"
                                      },
                                      "value": "5"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_5_by_1",
                                        "typeString": "int_const 5"
                                      }
                                    ],
                                    "id": 52297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5079:6:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 52296,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5079:6:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5079:9:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "37",
                                      "id": 52302,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5135:1:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_7_by_1",
                                        "typeString": "int_const 7"
                                      },
                                      "value": "7"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_7_by_1",
                                        "typeString": "int_const 7"
                                      }
                                    ],
                                    "id": 52301,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5128:6:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 52300,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5128:6:68",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 52303,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5128:9:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "id": 52304,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4750:421:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$8_memory_ptr",
                                "typeString": "uint32[8] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$23747",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_contract$_IBondAuctioneer_$26024",
                                "typeString": "contract IBondAuctioneer"
                              },
                              {
                                "typeIdentifier": "t_contract$_BondCallback_$29471",
                                "typeString": "contract BondCallback"
                              },
                              {
                                "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$2_memory_ptr",
                                "typeString": "contract ERC20[2] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$8_memory_ptr",
                                "typeString": "uint32[8] memory"
                              }
                            ],
                            "id": 52256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4570:12:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$23747_$_t_contract$_IBondAuctioneer_$26024_$_t_contract$_IBondCallback_$26057_$_t_array$_t_contract$_ERC20_$22445_$2_memory_ptr_$_t_array$_t_uint32_$8_memory_ptr_$returns$_t_contract$_Operator_$33152_$",
                              "typeString": "function (contract Kernel,contract IBondAuctioneer,contract IBondCallback,contract ERC20[2] memory,uint32[8] memory) returns (contract Operator)"
                            },
                            "typeName": {
                              "id": 52255,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 52254,
                                "name": "Operator",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 33152,
                                "src": "4574:8:68"
                              },
                              "referencedDeclaration": 33152,
                              "src": "4574:8:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Operator_$33152",
                                "typeString": "contract Operator"
                              }
                            }
                          },
                          "id": 52305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4570:615:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Operator_$33152",
                            "typeString": "contract Operator"
                          }
                        },
                        "src": "4559:626:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$33152",
                          "typeString": "contract Operator"
                        }
                      },
                      "id": 52307,
                      "nodeType": "ExpressionStatement",
                      "src": "4559:626:68"
                    },
                    {
                      "documentation": "Registor operator to create bond markets with a callback",
                      "expression": {
                        "arguments": [
                          {
                            "id": 52311,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51947,
                            "src": "5282:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52308,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1817,
                            "src": "5273:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$5434",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 52310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5020,
                          "src": "5273:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 52312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5273:18:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52313,
                      "nodeType": "ExpressionStatement",
                      "src": "5273:18:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 52319,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51988,
                                "src": "5346:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Operator_$33152",
                                  "typeString": "contract Operator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Operator_$33152",
                                  "typeString": "contract Operator"
                                }
                              ],
                              "id": 52318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5338:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52317,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5338:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5338:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 52321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5357:4:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 52314,
                            "name": "auctioneer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51961,
                            "src": "5305:10:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
                              "typeString": "contract BondFixedTermCDA"
                            }
                          },
                          "id": 52316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setCallbackAuthStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39485,
                          "src": "5305:32:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                            "typeString": "function (address,bool) external"
                          }
                        },
                        "id": 52322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5305:57:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52323,
                      "nodeType": "ExpressionStatement",
                      "src": "5305:57:68"
                    },
                    {
                      "documentation": "Register this contract to create bond markets with a callback",
                      "expression": {
                        "arguments": [
                          {
                            "id": 52327,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51947,
                            "src": "5464:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52324,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1817,
                            "src": "5455:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$5434",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 52326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5020,
                          "src": "5455:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 52328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5455:18:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52329,
                      "nodeType": "ExpressionStatement",
                      "src": "5455:18:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 52335,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5528:4:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallbackTest_$54093",
                                  "typeString": "contract BondCallbackTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallbackTest_$54093",
                                  "typeString": "contract BondCallbackTest"
                                }
                              ],
                              "id": 52334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5520:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52333,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5520:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5520:13:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 52337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5535:4:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 52330,
                            "name": "auctioneer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51961,
                            "src": "5487:10:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
                              "typeString": "contract BondFixedTermCDA"
                            }
                          },
                          "id": 52332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setCallbackAuthStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39485,
                          "src": "5487:32:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                            "typeString": "function (address,bool) external"
                          }
                        },
                        "id": 52338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5487:53:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52339,
                      "nodeType": "ExpressionStatement",
                      "src": "5487:53:68"
                    }
                  ]
                },
                {
                  "id": 52407,
                  "nodeType": "Block",
                  "src": "5561:573:68",
                  "statements": [
                    {
                      "documentation": "Install modules",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 52344,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22545,
                              "src": "5674:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$22545_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 52345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22538,
                            "src": "5674:21:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$22545",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 52348,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51976,
                                "src": "5705:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockPrice_$45385",
                                  "typeString": "contract MockPrice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockPrice_$45385",
                                  "typeString": "contract MockPrice"
                                }
                              ],
                              "id": 52347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5697:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52346,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5697:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5697:14:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$22545",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52341,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "5653:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23066,
                          "src": "5653:20:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$22545_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 52350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5653:59:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52351,
                      "nodeType": "ExpressionStatement",
                      "src": "5653:59:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 52355,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22545,
                              "src": "5747:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$22545_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 52356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22538,
                            "src": "5747:21:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$22545",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 52359,
                                "name": "range",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51979,
                                "src": "5778:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusRange_$28279",
                                  "typeString": "contract OlympusRange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusRange_$28279",
                                  "typeString": "contract OlympusRange"
                                }
                              ],
                              "id": 52358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5770:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52357,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5770:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5770:14:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$22545",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52352,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "5726:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23066,
                          "src": "5726:20:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$22545_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 52361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5726:59:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52362,
                      "nodeType": "ExpressionStatement",
                      "src": "5726:59:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 52366,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22545,
                              "src": "5820:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$22545_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 52367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22538,
                            "src": "5820:21:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$22545",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 52370,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51982,
                                "src": "5851:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              ],
                              "id": 52369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5843:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52368,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5843:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5843:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$22545",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52363,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "5799:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23066,
                          "src": "5799:20:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$22545_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 52372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5799:62:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52373,
                      "nodeType": "ExpressionStatement",
                      "src": "5799:62:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 52377,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22545,
                              "src": "5896:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$22545_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 52378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22538,
                            "src": "5896:21:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$22545",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 52381,
                                "name": "minter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51985,
                                "src": "5927:6:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusMinter_$26749",
                                  "typeString": "contract OlympusMinter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusMinter_$26749",
                                  "typeString": "contract OlympusMinter"
                                }
                              ],
                              "id": 52380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5919:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52379,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5919:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5919:15:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$22545",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52374,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "5875:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23066,
                          "src": "5875:20:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$22545_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 52383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5875:60:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52384,
                      "nodeType": "ExpressionStatement",
                      "src": "5875:60:68"
                    },
                    {
                      "documentation": "Approve policies",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 52388,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22545,
                              "src": "6004:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$22545_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 52389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22540,
                            "src": "6004:22:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$22545",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 52392,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51988,
                                "src": "6036:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Operator_$33152",
                                  "typeString": "contract Operator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Operator_$33152",
                                  "typeString": "contract Operator"
                                }
                              ],
                              "id": 52391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6028:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52390,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6028:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6028:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$22545",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52385,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "5983:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23066,
                          "src": "5983:20:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$22545_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 52394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5983:63:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52395,
                      "nodeType": "ExpressionStatement",
                      "src": "5983:63:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 52399,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22545,
                              "src": "6081:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$22545_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 52400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22540,
                            "src": "6081:22:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$22545",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 52403,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "6113:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 52402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6105:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52401,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6105:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6105:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$22545",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52396,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "6060:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23066,
                          "src": "6060:20:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$22545_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 52405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6060:63:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52406,
                      "nodeType": "ExpressionStatement",
                      "src": "6060:63:68"
                    }
                  ]
                },
                {
                  "id": 52477,
                  "nodeType": "Block",
                  "src": "6143:611:68",
                  "statements": [
                    {
                      "documentation": "Operator roles",
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "6f70657261746f725f6f706572617465",
                                "id": 52412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6254:18:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b4d9fb9a6da4dd32edf1c5c44aad7cf2ce8898cb854309656241b15637477090",
                                  "typeString": "literal_string \"operator_operate\""
                                },
                                "value": "operator_operate"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b4d9fb9a6da4dd32edf1c5c44aad7cf2ce8898cb854309656241b15637477090",
                                  "typeString": "literal_string \"operator_operate\""
                                }
                              ],
                              "id": 52411,
                              "name": "toRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65791,
                              "src": "6247:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Role_$22561_$",
                                "typeString": "function (bytes32) pure returns (Role)"
                              }
                            },
                            "id": 52413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6247:26:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            }
                          },
                          {
                            "id": 52414,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51947,
                            "src": "6275:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52408,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "6230:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23700,
                          "src": "6230:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_Role_$22561_$_t_address_$returns$__$",
                            "typeString": "function (Role,address) external"
                          }
                        },
                        "id": 52415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6230:54:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52416,
                      "nodeType": "ExpressionStatement",
                      "src": "6230:54:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "6f70657261746f725f7265706f72746572",
                                "id": 52421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6322:19:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_28152516262ac2847353981fed1fe5d5238d78dae987979d66a82d27b53ceed8",
                                  "typeString": "literal_string \"operator_reporter\""
                                },
                                "value": "operator_reporter"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_28152516262ac2847353981fed1fe5d5238d78dae987979d66a82d27b53ceed8",
                                  "typeString": "literal_string \"operator_reporter\""
                                }
                              ],
                              "id": 52420,
                              "name": "toRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65791,
                              "src": "6315:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Role_$22561_$",
                                "typeString": "function (bytes32) pure returns (Role)"
                              }
                            },
                            "id": 52422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6315:27:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 52425,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "6352:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 52424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6344:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52423,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6344:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6344:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52417,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "6298:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23700,
                          "src": "6298:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_Role_$22561_$_t_address_$returns$__$",
                            "typeString": "function (Role,address) external"
                          }
                        },
                        "id": 52427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6298:64:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52428,
                      "nodeType": "ExpressionStatement",
                      "src": "6298:64:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "6f70657261746f725f706f6c696379",
                                "id": 52433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6400:17:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_8d0cdcbebb48d7e2184369befd6a8f24fb6c9a7341595f6ebf2f1c9404c857df",
                                  "typeString": "literal_string \"operator_policy\""
                                },
                                "value": "operator_policy"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_8d0cdcbebb48d7e2184369befd6a8f24fb6c9a7341595f6ebf2f1c9404c857df",
                                  "typeString": "literal_string \"operator_policy\""
                                }
                              ],
                              "id": 52432,
                              "name": "toRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65791,
                              "src": "6393:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Role_$22561_$",
                                "typeString": "function (bytes32) pure returns (Role)"
                              }
                            },
                            "id": 52434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6393:25:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            }
                          },
                          {
                            "id": 52435,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51949,
                            "src": "6420:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52429,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "6376:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23700,
                          "src": "6376:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_Role_$22561_$_t_address_$returns$__$",
                            "typeString": "function (Role,address) external"
                          }
                        },
                        "id": 52436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6376:51:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52437,
                      "nodeType": "ExpressionStatement",
                      "src": "6376:51:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "6f70657261746f725f61646d696e",
                                "id": 52442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6465:16:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f0e196562d5c16895b4aadb374572d4ddc8bb46b0044a7ad6ee316a87634a0d5",
                                  "typeString": "literal_string \"operator_admin\""
                                },
                                "value": "operator_admin"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f0e196562d5c16895b4aadb374572d4ddc8bb46b0044a7ad6ee316a87634a0d5",
                                  "typeString": "literal_string \"operator_admin\""
                                }
                              ],
                              "id": 52441,
                              "name": "toRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65791,
                              "src": "6458:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Role_$22561_$",
                                "typeString": "function (bytes32) pure returns (Role)"
                              }
                            },
                            "id": 52443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6458:24:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            }
                          },
                          {
                            "id": 52444,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51947,
                            "src": "6484:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52438,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "6441:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23700,
                          "src": "6441:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_Role_$22561_$_t_address_$returns$__$",
                            "typeString": "function (Role,address) external"
                          }
                        },
                        "id": 52445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6441:52:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52446,
                      "nodeType": "ExpressionStatement",
                      "src": "6441:52:68"
                    },
                    {
                      "documentation": "Bond callback roles",
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "63616c6c6261636b5f77686974656c697374",
                                "id": 52451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6568:20:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                                  "typeString": "literal_string \"callback_whitelist\""
                                },
                                "value": "callback_whitelist"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                                  "typeString": "literal_string \"callback_whitelist\""
                                }
                              ],
                              "id": 52450,
                              "name": "toRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65791,
                              "src": "6561:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Role_$22561_$",
                                "typeString": "function (bytes32) pure returns (Role)"
                              }
                            },
                            "id": 52452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6561:28:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 52455,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51988,
                                "src": "6599:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Operator_$33152",
                                  "typeString": "contract Operator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Operator_$33152",
                                  "typeString": "contract Operator"
                                }
                              ],
                              "id": 52454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6591:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52453,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6591:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6591:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52447,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "6544:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23700,
                          "src": "6544:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_Role_$22561_$_t_address_$returns$__$",
                            "typeString": "function (Role,address) external"
                          }
                        },
                        "id": 52457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6544:65:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52458,
                      "nodeType": "ExpressionStatement",
                      "src": "6544:65:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "63616c6c6261636b5f77686974656c697374",
                                "id": 52463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6647:20:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                                  "typeString": "literal_string \"callback_whitelist\""
                                },
                                "value": "callback_whitelist"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                                  "typeString": "literal_string \"callback_whitelist\""
                                }
                              ],
                              "id": 52462,
                              "name": "toRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65791,
                              "src": "6640:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Role_$22561_$",
                                "typeString": "function (bytes32) pure returns (Role)"
                              }
                            },
                            "id": 52464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6640:28:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            }
                          },
                          {
                            "id": 52465,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51949,
                            "src": "6670:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52459,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "6623:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23700,
                          "src": "6623:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_Role_$22561_$_t_address_$returns$__$",
                            "typeString": "function (Role,address) external"
                          }
                        },
                        "id": 52466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6623:54:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52467,
                      "nodeType": "ExpressionStatement",
                      "src": "6623:54:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "63616c6c6261636b5f61646d696e",
                                "id": 52472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6715:16:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_67c4daf9a1b913d91399903201c4369d999035e46c0d4821ee2a52c23272b43b",
                                  "typeString": "literal_string \"callback_admin\""
                                },
                                "value": "callback_admin"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_67c4daf9a1b913d91399903201c4369d999035e46c0d4821ee2a52c23272b43b",
                                  "typeString": "literal_string \"callback_admin\""
                                }
                              ],
                              "id": 52471,
                              "name": "toRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65791,
                              "src": "6708:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Role_$22561_$",
                                "typeString": "function (bytes32) pure returns (Role)"
                              }
                            },
                            "id": 52473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6708:24:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            }
                          },
                          {
                            "id": 52474,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51947,
                            "src": "6734:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52468,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51973,
                            "src": "6691:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$23747",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 52470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23700,
                          "src": "6691:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_Role_$22561_$_t_address_$returns$__$",
                            "typeString": "function (Role,address) external"
                          }
                        },
                        "id": 52475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6691:52:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52476,
                      "nodeType": "ExpressionStatement",
                      "src": "6691:52:68"
                    }
                  ]
                },
                {
                  "documentation": "Set operator on the callback",
                  "expression": {
                    "arguments": [
                      {
                        "id": 52481,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51947,
                        "src": "6814:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52478,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "6805:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "6805:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6805:18:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52483,
                  "nodeType": "ExpressionStatement",
                  "src": "6805:18:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52487,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51988,
                        "src": "6854:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$33152",
                          "typeString": "contract Operator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Operator_$33152",
                          "typeString": "contract Operator"
                        }
                      ],
                      "expression": {
                        "id": 52484,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "6833:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 52486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29470,
                      "src": "6833:20:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Operator_$33152_$returns$__$",
                        "typeString": "function (contract Operator) external"
                      }
                    },
                    "id": 52488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6833:30:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52489,
                  "nodeType": "ExpressionStatement",
                  "src": "6833:30:68"
                },
                {
                  "documentation": "Initialize the operator",
                  "expression": {
                    "arguments": [
                      {
                        "id": 52493,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51947,
                        "src": "6919:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52490,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "6910:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "6910:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6910:18:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52495,
                  "nodeType": "ExpressionStatement",
                  "src": "6910:18:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 52496,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51988,
                        "src": "6938:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$33152",
                          "typeString": "contract Operator"
                        }
                      },
                      "id": 52498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32526,
                      "src": "6938:19:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 52499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6938:21:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52500,
                  "nodeType": "ExpressionStatement",
                  "src": "6938:21:68"
                },
                {
                  "assignments": [
                    52502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52502,
                      "mutability": "mutable",
                      "name": "testOhm",
                      "nameLocation": "7035:7:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 52730,
                      "src": "7027:15:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52501,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7027:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52506,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000_by_1",
                      "typeString": "int_const 1000000000000000"
                    },
                    "id": 52505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "315f3030305f303030",
                      "id": 52503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7045:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1_000_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "316539",
                      "id": 52504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7057:3:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000_by_1",
                        "typeString": "int_const 1000000000"
                      },
                      "value": "1e9"
                    },
                    "src": "7045:15:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000_by_1",
                      "typeString": "int_const 1000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7027:33:68"
                },
                {
                  "assignments": [
                    52508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52508,
                      "mutability": "mutable",
                      "name": "testReserve",
                      "nameLocation": "7078:11:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 52730,
                      "src": "7070:19:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52507,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7070:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52512,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000"
                    },
                    "id": 52511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "315f3030305f303030",
                      "id": 52509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7092:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1_000_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 52510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7104:4:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "7092:16:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7070:38:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52516,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51943,
                        "src": "7128:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 52517,
                          "name": "testOhm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52502,
                          "src": "7135:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 52518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7145:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "7135:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52513,
                        "name": "ohm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "7119:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        }
                      },
                      "id": 52515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51919,
                      "src": "7119:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 52520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7119:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52521,
                  "nodeType": "ExpressionStatement",
                  "src": "7119:29:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52525,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51943,
                        "src": "7171:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 52526,
                          "name": "testReserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52508,
                          "src": "7178:11:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 52527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7192:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "7178:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52522,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "7158:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 52524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22043,
                      "src": "7158:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 52529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7158:37:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52530,
                  "nodeType": "ExpressionStatement",
                  "src": "7158:37:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52536,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51982,
                            "src": "7227:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                              "typeString": "contract OlympusTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                              "typeString": "contract OlympusTreasury"
                            }
                          ],
                          "id": 52535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7219:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52534,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7219:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7219:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 52538,
                          "name": "testReserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52508,
                          "src": "7238:11:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 52539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7252:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "7238:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52531,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "7206:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 52533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22043,
                      "src": "7206:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 52541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7206:50:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52542,
                  "nodeType": "ExpressionStatement",
                  "src": "7206:50:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52546,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51943,
                        "src": "7347:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52543,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7338:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "7338:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7338:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52548,
                  "nodeType": "ExpressionStatement",
                  "src": "7338:15:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52554,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51988,
                            "src": "7383:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Operator_$33152",
                              "typeString": "contract Operator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Operator_$33152",
                              "typeString": "contract Operator"
                            }
                          ],
                          "id": 52553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7375:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52552,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7375:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7375:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 52556,
                          "name": "testOhm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52502,
                          "src": "7394:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 52557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7404:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "7394:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52549,
                        "name": "ohm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "7363:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        }
                      },
                      "id": 52551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22162,
                      "src": "7363:11:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 52559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7363:44:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52560,
                  "nodeType": "ExpressionStatement",
                  "src": "7363:44:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52564,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51943,
                        "src": "7426:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52561,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7417:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "7417:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7417:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52566,
                  "nodeType": "ExpressionStatement",
                  "src": "7417:15:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52572,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51988,
                            "src": "7466:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Operator_$33152",
                              "typeString": "contract Operator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Operator_$33152",
                              "typeString": "contract Operator"
                            }
                          ],
                          "id": 52571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7458:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52570,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7458:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7458:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 52574,
                          "name": "testReserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52508,
                          "src": "7477:11:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 52575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7491:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "7477:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52567,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "7442:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 52569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22162,
                      "src": "7442:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 52577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7442:52:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52578,
                  "nodeType": "ExpressionStatement",
                  "src": "7442:52:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52582,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51943,
                        "src": "7514:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52579,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7505:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "7505:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7505:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52584,
                  "nodeType": "ExpressionStatement",
                  "src": "7505:15:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52590,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "7550:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 52589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7542:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52588,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7542:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7542:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 52592,
                          "name": "testOhm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52502,
                          "src": "7559:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 52593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7569:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "7559:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52585,
                        "name": "ohm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "7530:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        }
                      },
                      "id": 52587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22162,
                      "src": "7530:11:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 52595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7530:42:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52596,
                  "nodeType": "ExpressionStatement",
                  "src": "7530:42:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52600,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51943,
                        "src": "7591:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52597,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7582:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "7582:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7582:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52602,
                  "nodeType": "ExpressionStatement",
                  "src": "7582:15:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52608,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "7631:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 52607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7623:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52606,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7623:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7623:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 52610,
                          "name": "testReserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52508,
                          "src": "7640:11:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 52611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7654:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "7640:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52603,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "7607:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 52605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22162,
                      "src": "7607:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 52613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7607:50:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52614,
                  "nodeType": "ExpressionStatement",
                  "src": "7607:50:68"
                },
                {
                  "expression": {
                    "id": 52623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52615,
                      "name": "regBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51993,
                      "src": "7766:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 52617,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51967,
                          "src": "7789:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "id": 52618,
                          "name": "ohm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51964,
                          "src": "7798:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 52619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7803:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 52620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7806:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "33",
                          "id": 52621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7809:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 52616,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52893,
                        "src": "7776:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$22445_$_t_contract$_ERC20_$22445_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 52622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7776:35:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7766:45:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52624,
                  "nodeType": "ExpressionStatement",
                  "src": "7766:45:68"
                },
                {
                  "expression": {
                    "id": 52633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52625,
                      "name": "invBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51995,
                      "src": "7865:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 52627,
                          "name": "ohm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51964,
                          "src": "7888:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          }
                        },
                        {
                          "id": 52628,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51967,
                          "src": "7893:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 52629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7902:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "30",
                          "id": 52630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7905:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "33",
                          "id": 52631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7908:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 52626,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52893,
                        "src": "7875:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$22445_$_t_contract$_ERC20_$22445_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 52632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7875:35:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7865:45:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52634,
                  "nodeType": "ExpressionStatement",
                  "src": "7865:45:68"
                },
                {
                  "expression": {
                    "id": 52643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52635,
                      "name": "internalBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51997,
                      "src": "7961:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 52637,
                          "name": "ohm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51964,
                          "src": "7989:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          }
                        },
                        {
                          "id": 52638,
                          "name": "ohm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51964,
                          "src": "7994:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 52639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7999:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "30",
                          "id": 52640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8002:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "38",
                          "id": 52641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8005:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        ],
                        "id": 52636,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52893,
                        "src": "7976:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$22445_$_t_contract$_ERC20_$22445_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 52642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7976:31:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7961:46:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52644,
                  "nodeType": "ExpressionStatement",
                  "src": "7961:46:68"
                },
                {
                  "expression": {
                    "id": 52654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52645,
                      "name": "externalBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51999,
                      "src": "8062:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 52647,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51967,
                          "src": "8090:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "id": 52648,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51967,
                          "src": "8099:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 52649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8108:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 52651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "8111:2:68",
                          "subExpression": {
                            "hexValue": "31",
                            "id": 52650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8112:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        },
                        {
                          "hexValue": "38",
                          "id": 52652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8115:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          },
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        ],
                        "id": 52646,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52893,
                        "src": "8077:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$22445_$_t_contract$_ERC20_$22445_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 52653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8077:40:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8062:55:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52655,
                  "nodeType": "ExpressionStatement",
                  "src": "8062:55:68"
                },
                {
                  "expression": {
                    "id": 52664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52656,
                      "name": "nonWhitelistedBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52001,
                      "src": "8187:18:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 52658,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51967,
                          "src": "8221:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "id": 52659,
                          "name": "ohm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51964,
                          "src": "8230:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 52660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8235:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 52661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8238:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "33",
                          "id": 52662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8241:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 52657,
                        "name": "createMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52893,
                        "src": "8208:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$22445_$_t_contract$_ERC20_$22445_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                        }
                      },
                      "id": 52663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8208:35:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8187:56:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52665,
                  "nodeType": "ExpressionStatement",
                  "src": "8187:56:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52669,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51949,
                        "src": "8316:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52666,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8307:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "8307:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8307:16:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52671,
                  "nodeType": "ExpressionStatement",
                  "src": "8307:16:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52677,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "8360:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 52676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8352:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52675,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8352:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8352:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52679,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "8369:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52672,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "8333:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 52674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29159,
                      "src": "8333:18:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 52680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8333:44:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52681,
                  "nodeType": "ExpressionStatement",
                  "src": "8333:44:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52685,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51949,
                        "src": "8397:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52682,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8388:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "8388:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8388:16:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52687,
                  "nodeType": "ExpressionStatement",
                  "src": "8388:16:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52693,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "8441:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 52692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8433:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52691,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8433:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8433:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52695,
                        "name": "invBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51995,
                        "src": "8450:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52688,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "8414:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 52690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29159,
                      "src": "8414:18:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 52696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8414:44:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52697,
                  "nodeType": "ExpressionStatement",
                  "src": "8414:44:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52701,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51949,
                        "src": "8478:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52698,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8469:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "8469:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8469:16:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52703,
                  "nodeType": "ExpressionStatement",
                  "src": "8469:16:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52709,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "8522:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 52708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8514:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52707,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8514:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8514:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52711,
                        "name": "internalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51997,
                        "src": "8531:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52704,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "8495:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 52706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29159,
                      "src": "8495:18:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 52712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8495:49:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52713,
                  "nodeType": "ExpressionStatement",
                  "src": "8495:49:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52717,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51949,
                        "src": "8564:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52714,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8555:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "8555:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8555:16:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52719,
                  "nodeType": "ExpressionStatement",
                  "src": "8555:16:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52725,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "8608:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 52724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8600:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52723,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8600:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8600:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52727,
                        "name": "externalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51999,
                        "src": "8617:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52720,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "8581:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 52722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29159,
                      "src": "8581:18:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 52728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8581:49:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52729,
                  "nodeType": "ExpressionStatement",
                  "src": "8581:49:68"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2554:5:68",
            "parameters": {
              "id": 52002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2559:2:68"
            },
            "returnParameters": {
              "id": 52003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2569:0:68"
            },
            "scope": 54093,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52893,
            "nodeType": "FunctionDefinition",
            "src": "8692:2120:68",
            "body": {
              "id": 52892,
              "nodeType": "Block",
              "src": "8907:1905:68",
              "statements": [
                {
                  "assignments": [
                    52749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52749,
                      "mutability": "mutable",
                      "name": "_payoutDecimals",
                      "nameLocation": "8923:15:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 52892,
                      "src": "8917:21:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 52748,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "8917:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52753,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 52750,
                        "name": "payoutToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52737,
                        "src": "8941:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$22445",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 52751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22082,
                      "src": "8941:20:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 52752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8941:22:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8917:46:68"
                },
                {
                  "assignments": [
                    52755
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52755,
                      "mutability": "mutable",
                      "name": "_quoteDecimals",
                      "nameLocation": "8979:14:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 52892,
                      "src": "8973:20:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 52754,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "8973:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52759,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 52756,
                        "name": "quoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52734,
                        "src": "8996:10:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$22445",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 52757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22082,
                      "src": "8996:19:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 52758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8996:21:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8973:44:68"
                },
                {
                  "assignments": [
                    52761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52761,
                      "mutability": "mutable",
                      "name": "capacity",
                      "nameLocation": "9036:8:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 52892,
                      "src": "9028:16:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52760,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9028:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52775,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 52774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130305f303030",
                      "id": 52762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9047:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000_by_1",
                        "typeString": "int_const 100000"
                      },
                      "value": "100_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 52773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 52763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9057:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            },
                            "id": 52771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 52768,
                                  "name": "_payoutDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52749,
                                  "src": "9072:15:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 52767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9067:4:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int8_$",
                                  "typeString": "type(int8)"
                                },
                                "typeName": {
                                  "id": 52766,
                                  "name": "int8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9067:4:68",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 52769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9067:21:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 52770,
                              "name": "_payoutPriceDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52741,
                              "src": "9091:20:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            "src": "9067:44:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          ],
                          "id": 52765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9061:5:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 52764,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "9061:5:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9061:51:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "9057:55:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9047:65:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9028:84:68"
                },
                {
                  "assignments": [
                    52777
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52777,
                      "mutability": "mutable",
                      "name": "scaleAdjustment",
                      "nameLocation": "9128:15:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 52892,
                      "src": "9123:20:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      },
                      "typeName": {
                        "id": 52776,
                        "name": "int8",
                        "nodeType": "ElementaryTypeName",
                        "src": "9123:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52794,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    },
                    "id": 52793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      },
                      "id": 52786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 52780,
                            "name": "_payoutDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52749,
                            "src": "9151:15:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 52779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9146:4:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int8_$",
                            "typeString": "type(int8)"
                          },
                          "typeName": {
                            "id": 52778,
                            "name": "int8",
                            "nodeType": "ElementaryTypeName",
                            "src": "9146:4:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9146:21:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 52784,
                            "name": "_quoteDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52755,
                            "src": "9187:14:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 52783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9182:4:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int8_$",
                            "typeString": "type(int8)"
                          },
                          "typeName": {
                            "id": 52782,
                            "name": "int8",
                            "nodeType": "ElementaryTypeName",
                            "src": "9182:4:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9182:20:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      },
                      "src": "9146:56:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      },
                      "id": 52792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            },
                            "id": 52789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 52787,
                              "name": "_payoutPriceDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52741,
                              "src": "9218:20:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 52788,
                              "name": "_quotePriceDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52739,
                              "src": "9241:19:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            "src": "9218:42:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          }
                        ],
                        "id": 52790,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9217:44:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 52791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9276:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "9217:60:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int8",
                        "typeString": "int8"
                      }
                    },
                    "src": "9146:131:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9123:154:68"
                },
                {
                  "assignments": [
                    52796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52796,
                      "mutability": "mutable",
                      "name": "initialPrice",
                      "nameLocation": "9296:12:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 52892,
                      "src": "9288:20:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52795,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9288:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52819,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 52818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 52797,
                      "name": "priceSignificand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52743,
                      "src": "9311:16:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 52817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 52798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9342:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                },
                                "id": 52814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  },
                                  "id": 52812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    },
                                    "id": 52810,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 52807,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            },
                                            "id": 52805,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3336",
                                              "id": 52803,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9422:2:68",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_36_by_1",
                                                "typeString": "int_const 36"
                                              },
                                              "value": "36"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "id": 52804,
                                              "name": "_quoteDecimals",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 52755,
                                              "src": "9427:14:68",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "src": "9422:19:68",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 52806,
                                            "name": "_payoutDecimals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 52749,
                                            "src": "9444:15:68",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "9422:37:68",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "id": 52802,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9417:4:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int8_$",
                                          "typeString": "type(int8)"
                                        },
                                        "typeName": {
                                          "id": 52801,
                                          "name": "int8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9417:4:68",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 52808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9417:43:68",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int8",
                                        "typeString": "int8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 52809,
                                      "name": "scaleAdjustment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 52777,
                                      "src": "9491:15:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int8",
                                        "typeString": "int8"
                                      }
                                    },
                                    "src": "9417:89:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 52811,
                                    "name": "_payoutPriceDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 52741,
                                    "src": "9537:20:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    }
                                  },
                                  "src": "9417:140:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 52813,
                                  "name": "_quotePriceDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52739,
                                  "src": "9588:19:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "src": "9417:190:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              ],
                              "id": 52800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9386:5:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 52799,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "9386:5:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9386:243:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "id": 52816,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9364:283:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "9342:305:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9311:336:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9288:359:68"
                },
                {
                  "assignments": [
                    52821
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52821,
                      "mutability": "mutable",
                      "name": "minimumPrice",
                      "nameLocation": "9666:12:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 52892,
                      "src": "9658:20:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52820,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9658:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52847,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 52846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 52824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 52822,
                            "name": "priceSignificand",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52743,
                            "src": "9682:16:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 52823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9701:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "9682:20:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 52825,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9681:22:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 52845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 52826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9718:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                },
                                "id": 52842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  },
                                  "id": 52840,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    },
                                    "id": 52838,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 52835,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            },
                                            "id": 52833,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3336",
                                              "id": 52831,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9798:2:68",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_36_by_1",
                                                "typeString": "int_const 36"
                                              },
                                              "value": "36"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "id": 52832,
                                              "name": "_quoteDecimals",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 52755,
                                              "src": "9803:14:68",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "src": "9798:19:68",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 52834,
                                            "name": "_payoutDecimals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 52749,
                                            "src": "9820:15:68",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "9798:37:68",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "id": 52830,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9793:4:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int8_$",
                                          "typeString": "type(int8)"
                                        },
                                        "typeName": {
                                          "id": 52829,
                                          "name": "int8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9793:4:68",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 52836,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9793:43:68",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int8",
                                        "typeString": "int8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 52837,
                                      "name": "scaleAdjustment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 52777,
                                      "src": "9867:15:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int8",
                                        "typeString": "int8"
                                      }
                                    },
                                    "src": "9793:89:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 52839,
                                    "name": "_payoutPriceDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 52741,
                                    "src": "9913:20:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int8",
                                      "typeString": "int8"
                                    }
                                  },
                                  "src": "9793:140:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 52841,
                                  "name": "_quotePriceDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52739,
                                  "src": "9964:19:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "src": "9793:190:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              ],
                              "id": 52828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9762:5:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 52827,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "9762:5:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9762:243:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "id": 52844,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9740:283:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "9718:305:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9681:342:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9658:365:68"
                },
                {
                  "assignments": [
                    52852
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52852,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "10068:6:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 52892,
                      "src": "10034:40:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketParams_$41689_memory_ptr",
                        "typeString": "struct IBondAuctioneer.MarketParams"
                      },
                      "typeName": {
                        "id": 52851,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 52850,
                          "name": "LibAuctioneer.MarketParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41689,
                          "src": "10034:26:68"
                        },
                        "referencedDeclaration": 41689,
                        "src": "10034:26:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$41689_storage_ptr",
                          "typeString": "struct IBondAuctioneer.MarketParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52886,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 52855,
                        "name": "payoutToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52737,
                        "src": "10117:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$22445",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 52856,
                        "name": "quoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52734,
                        "src": "10163:10:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$22445",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52859,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "10215:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 52858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10207:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52857,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10207:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10207:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 52861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10262:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 52862,
                        "name": "capacity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52761,
                        "src": "10305:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52863,
                        "name": "initialPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52796,
                        "src": "10347:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52864,
                        "name": "minimumPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52821,
                        "src": "10397:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "35305f303030",
                            "id": 52867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10454:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000_by_1",
                              "typeString": "int_const 50000"
                            },
                            "value": "50_000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_50000_by_1",
                              "typeString": "int_const 50000"
                            }
                          ],
                          "id": 52866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10447:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 52865,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10447:6:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10447:14:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 52871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10503:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 52870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10496:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint48_$",
                            "typeString": "type(uint48)"
                          },
                          "typeName": {
                            "id": 52869,
                            "name": "uint48",
                            "nodeType": "ElementaryTypeName",
                            "src": "10496:6:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10496:9:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 52878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 52875,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10568:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 52876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "10568:15:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "37",
                              "id": 52877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10586:6:68",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_604800_by_1",
                                "typeString": "int_const 604800"
                              },
                              "value": "7"
                            },
                            "src": "10568:24:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 52874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10561:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint48_$",
                            "typeString": "type(uint48)"
                          },
                          "typeName": {
                            "id": 52873,
                            "name": "uint48",
                            "nodeType": "ElementaryTypeName",
                            "src": "10561:6:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10561:32:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "3234",
                            "id": 52882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10647:8:68",
                            "subdenomination": "hours",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "24"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            }
                          ],
                          "id": 52881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10640:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 52880,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10640:6:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10640:16:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 52884,
                        "name": "scaleAdjustment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52777,
                        "src": "10707:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$22445",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$22445",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      ],
                      "expression": {
                        "id": 52853,
                        "name": "LibAuctioneer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41859,
                        "src": "10077:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IBondAuctioneer_$41859_$",
                          "typeString": "type(contract IBondAuctioneer)"
                        }
                      },
                      "id": 52854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "MarketParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41689,
                      "src": "10077:26:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_MarketParams_$41689_storage_ptr_$",
                        "typeString": "type(struct IBondAuctioneer.MarketParams storage pointer)"
                      }
                    },
                    "id": 52885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10077:679:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketParams_$41689_memory_ptr",
                      "typeString": "struct IBondAuctioneer.MarketParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10034:722:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52889,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52852,
                        "src": "10798:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$41689_memory_ptr",
                          "typeString": "struct IBondAuctioneer.MarketParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MarketParams_$41689_memory_ptr",
                          "typeString": "struct IBondAuctioneer.MarketParams memory"
                        }
                      ],
                      "expression": {
                        "id": 52887,
                        "name": "auctioneer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51961,
                        "src": "10774:10:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondFixedTermCDA_$38051",
                          "typeString": "contract BondFixedTermCDA"
                        }
                      },
                      "id": 52888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38050,
                      "src": "10774:23:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_MarketParams_$41689_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct IBondAuctioneer.MarketParams memory) external returns (uint256)"
                      }
                    },
                    "id": 52890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10774:31:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 52747,
                  "id": 52891,
                  "nodeType": "Return",
                  "src": "10767:38:68"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createMarket",
            "nameLocation": "8701:12:68",
            "parameters": {
              "id": 52744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52734,
                  "mutability": "mutable",
                  "name": "quoteToken",
                  "nameLocation": "8729:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 52893,
                  "src": "8723:16:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$22445",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 52733,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52732,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 22445,
                      "src": "8723:5:68"
                    },
                    "referencedDeclaration": 22445,
                    "src": "8723:5:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22445",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52737,
                  "mutability": "mutable",
                  "name": "payoutToken",
                  "nameLocation": "8755:11:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 52893,
                  "src": "8749:17:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$22445",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 52736,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52735,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 22445,
                      "src": "8749:5:68"
                    },
                    "referencedDeclaration": 22445,
                    "src": "8749:5:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22445",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52739,
                  "mutability": "mutable",
                  "name": "_quotePriceDecimals",
                  "nameLocation": "8781:19:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 52893,
                  "src": "8776:24:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int8",
                    "typeString": "int8"
                  },
                  "typeName": {
                    "id": 52738,
                    "name": "int8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8776:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52741,
                  "mutability": "mutable",
                  "name": "_payoutPriceDecimals",
                  "nameLocation": "8815:20:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 52893,
                  "src": "8810:25:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int8",
                    "typeString": "int8"
                  },
                  "typeName": {
                    "id": 52740,
                    "name": "int8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8810:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52743,
                  "mutability": "mutable",
                  "name": "priceSignificand",
                  "nameLocation": "8853:16:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 52893,
                  "src": "8845:24:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8845:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8713:162:68"
            },
            "returnParameters": {
              "id": 52747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52746,
                  "mutability": "mutable",
                  "name": "id_",
                  "nameLocation": "8902:3:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 52893,
                  "src": "8894:11:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8894:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8893:13:68"
            },
            "scope": 54093,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53156,
            "nodeType": "FunctionDefinition",
            "src": "11000:3264:68",
            "body": {
              "id": 53155,
              "nodeType": "Block",
              "src": "11043:3221:68",
              "statements": [
                {
                  "assignments": [
                    52899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52899,
                      "mutability": "mutable",
                      "name": "startBalTeller",
                      "nameLocation": "11355:14:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53155,
                      "src": "11347:22:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52898,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11347:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store start balances of teller and callback",
                  "id": 52907,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52904,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "11394:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 52903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11386:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52902,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11386:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11386:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52900,
                        "name": "ohm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "11372:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        }
                      },
                      "id": 52901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22088,
                      "src": "11372:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 52906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11372:30:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11347:55:68"
                },
                {
                  "assignments": [
                    52909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52909,
                      "mutability": "mutable",
                      "name": "startBalCallback",
                      "nameLocation": "11420:16:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53155,
                      "src": "11412:24:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52908,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11412:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52917,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52914,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "11465:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 52913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11457:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52912,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11457:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11457:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52910,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "11439:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 52911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22088,
                      "src": "11439:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 52916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11439:36:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11412:63:68"
                },
                {
                  "documentation": "Mint tokens to the callback to simulate a purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52923,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "11570:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 52922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11562:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52921,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11562:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11562:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "333030",
                        "id": 52925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11581:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "300"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        }
                      ],
                      "expression": {
                        "id": 52918,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "11549:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 52920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22043,
                      "src": "11549:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 52926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11549:36:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52927,
                  "nodeType": "ExpressionStatement",
                  "src": "11549:36:68"
                },
                {
                  "documentation": "Call the callback function from the teller",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52933,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "11668:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 52932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11660:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52931,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11660:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11660:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52928,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "11651:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "11651:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11651:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52936,
                  "nodeType": "ExpressionStatement",
                  "src": "11651:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52940,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "11704:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "333030",
                        "id": 52941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11713:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "300"
                      },
                      {
                        "hexValue": "3130",
                        "id": 52942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11718:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 52937,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "11686:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 52939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "11686:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 52943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11686:35:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52944,
                  "nodeType": "ExpressionStatement",
                  "src": "11686:35:68"
                },
                {
                  "documentation": "Expect the balances of the teller and callback to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 52950,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51958,
                                "src": "11836:6:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 52949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11828:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52948,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11828:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11828:15:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52946,
                            "name": "ohm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51964,
                            "src": "11814:3:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOhm_$51933",
                              "typeString": "contract MockOhm"
                            }
                          },
                          "id": 52947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "11814:13:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 52952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11814:30:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 52953,
                          "name": "startBalTeller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52899,
                          "src": "11846:14:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 52954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11863:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "11846:19:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52945,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11805:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 52956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11805:61:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52957,
                  "nodeType": "ExpressionStatement",
                  "src": "11805:61:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 52963,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "11911:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 52962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11903:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52961,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11903:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11903:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52959,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51967,
                            "src": "11885:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 52960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "11885:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 52965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11885:36:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 52966,
                          "name": "startBalCallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52909,
                          "src": "11923:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "333030",
                          "id": 52967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11942:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "300"
                        },
                        "src": "11923:22:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52958,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11876:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 52969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11876:70:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52970,
                  "nodeType": "ExpressionStatement",
                  "src": "11876:70:68"
                },
                {
                  "documentation": "Store start balances of teller and callback",
                  "expression": {
                    "id": 52979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52971,
                      "name": "startBalTeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52899,
                      "src": "12208:14:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 52976,
                              "name": "teller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51958,
                              "src": "12251:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 52975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12243:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 52974,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12243:7:68",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 52977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12243:15:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 52972,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51967,
                          "src": "12225:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$22057",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "id": 52973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22088,
                        "src": "12225:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 52978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12225:34:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12208:51:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52980,
                  "nodeType": "ExpressionStatement",
                  "src": "12208:51:68"
                },
                {
                  "expression": {
                    "id": 52989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52981,
                      "name": "startBalCallback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52909,
                      "src": "12269:16:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 52986,
                              "name": "callback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51991,
                              "src": "12310:8:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$29471",
                                "typeString": "contract BondCallback"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondCallback_$29471",
                                "typeString": "contract BondCallback"
                              }
                            ],
                            "id": 52985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12302:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 52984,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12302:7:68",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 52987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12302:17:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 52982,
                          "name": "ohm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51964,
                          "src": "12288:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          }
                        },
                        "id": 52983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22088,
                        "src": "12288:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 52988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12288:32:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12269:51:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52990,
                  "nodeType": "ExpressionStatement",
                  "src": "12269:51:68"
                },
                {
                  "documentation": "Mint tokens to the callback to simulate a purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52996,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "12411:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 52995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12403:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12403:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12403:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12422:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 52991,
                        "name": "ohm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "12394:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        }
                      },
                      "id": 52993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51919,
                      "src": "12394:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 52999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12394:31:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53000,
                  "nodeType": "ExpressionStatement",
                  "src": "12394:31:68"
                },
                {
                  "documentation": "Call the callback function from the teller",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53006,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "12508:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12500:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53004,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12500:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12500:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53001,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "12491:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "12491:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12491:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53009,
                  "nodeType": "ExpressionStatement",
                  "src": "12491:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53013,
                        "name": "invBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51995,
                        "src": "12544:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12553:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "333030",
                        "id": 53015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12557:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "300"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        }
                      ],
                      "expression": {
                        "id": 53010,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "12526:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "12526:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12526:35:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53017,
                  "nodeType": "ExpressionStatement",
                  "src": "12526:35:68"
                },
                {
                  "documentation": "Expect the balances of the teller and callback to be updated\n Callback should be the same as the start amount since the OHM is burned",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53023,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51958,
                                "src": "12764:6:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 53022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12756:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53021,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12756:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12756:15:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53019,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51967,
                            "src": "12738:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "12738:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12738:34:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53026,
                          "name": "startBalTeller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52899,
                          "src": "12774:14:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "333030",
                          "id": 53027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12791:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "300"
                        },
                        "src": "12774:20:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53018,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "12729:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12729:66:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53030,
                  "nodeType": "ExpressionStatement",
                  "src": "12729:66:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53036,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "12836:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 53035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12828:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53034,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12828:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12828:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53032,
                            "name": "ohm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51964,
                            "src": "12814:3:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOhm_$51933",
                              "typeString": "contract MockOhm"
                            }
                          },
                          "id": 53033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "12814:13:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12814:32:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53039,
                        "name": "startBalCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52909,
                        "src": "12848:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53031,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "12805:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12805:60:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53041,
                  "nodeType": "ExpressionStatement",
                  "src": "12805:60:68"
                },
                {
                  "documentation": "Store start balances of teller and callback",
                  "expression": {
                    "id": 53050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53042,
                      "name": "startBalTeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52899,
                      "src": "13129:14:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 53047,
                              "name": "teller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51958,
                              "src": "13168:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 53046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13160:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 53045,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13160:7:68",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 53048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13160:15:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 53043,
                          "name": "ohm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51964,
                          "src": "13146:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          }
                        },
                        "id": 53044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22088,
                        "src": "13146:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 53049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13146:30:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13129:47:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53051,
                  "nodeType": "ExpressionStatement",
                  "src": "13129:47:68"
                },
                {
                  "expression": {
                    "id": 53060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53052,
                      "name": "startBalCallback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52909,
                      "src": "13186:16:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 53057,
                              "name": "callback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51991,
                              "src": "13227:8:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondCallback_$29471",
                                "typeString": "contract BondCallback"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondCallback_$29471",
                                "typeString": "contract BondCallback"
                              }
                            ],
                            "id": 53056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13219:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 53055,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13219:7:68",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 53058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13219:17:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 53053,
                          "name": "ohm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51964,
                          "src": "13205:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          }
                        },
                        "id": 53054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22088,
                        "src": "13205:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 53059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13205:32:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13186:51:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53061,
                  "nodeType": "ExpressionStatement",
                  "src": "13186:51:68"
                },
                {
                  "documentation": "Mint tokens to the callback to simulate a purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53067,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "13328:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 53066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13320:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53065,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13320:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13320:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 53069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13339:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 53062,
                        "name": "ohm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "13311:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        }
                      },
                      "id": 53064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51919,
                      "src": "13311:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13311:32:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53071,
                  "nodeType": "ExpressionStatement",
                  "src": "13311:32:68"
                },
                {
                  "documentation": "Call the callback function from the teller",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53077,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "13426:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13418:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53075,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13418:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13418:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53072,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "13409:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "13409:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13409:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53080,
                  "nodeType": "ExpressionStatement",
                  "src": "13409:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53084,
                        "name": "internalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51997,
                        "src": "13462:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 53085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13476:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "313530",
                        "id": 53086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13481:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        },
                        "value": "150"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        }
                      ],
                      "expression": {
                        "id": 53081,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "13444:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "13444:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13444:41:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53088,
                  "nodeType": "ExpressionStatement",
                  "src": "13444:41:68"
                },
                {
                  "documentation": "Expect the balances of the teller and callback to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53094,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51958,
                                "src": "13600:6:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 53093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13592:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53092,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13592:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13592:15:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53090,
                            "name": "ohm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51964,
                            "src": "13578:3:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOhm_$51933",
                              "typeString": "contract MockOhm"
                            }
                          },
                          "id": 53091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "13578:13:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13578:30:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53097,
                          "name": "startBalTeller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52899,
                          "src": "13610:14:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313530",
                          "id": 53098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13627:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150_by_1",
                            "typeString": "int_const 150"
                          },
                          "value": "150"
                        },
                        "src": "13610:20:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53089,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "13569:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13569:62:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53101,
                  "nodeType": "ExpressionStatement",
                  "src": "13569:62:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53107,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "13672:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 53106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13664:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53105,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13664:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13664:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53103,
                            "name": "ohm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51964,
                            "src": "13650:3:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOhm_$51933",
                              "typeString": "contract MockOhm"
                            }
                          },
                          "id": 53104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "13650:13:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13650:32:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53110,
                        "name": "startBalCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52909,
                        "src": "13684:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53102,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "13641:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13641:60:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53112,
                  "nodeType": "ExpressionStatement",
                  "src": "13641:60:68"
                },
                {
                  "documentation": "Mint tokens to the callback to simulate a purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53118,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "13912:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 53117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13904:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53116,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13904:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13904:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 53120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13923:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 53113,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "13891:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 53115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22043,
                      "src": "13891:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13891:36:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53122,
                  "nodeType": "ExpressionStatement",
                  "src": "13891:36:68"
                },
                {
                  "assignments": [
                    53125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53125,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "14024:3:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53155,
                      "src": "14011:16:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 53124,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14011:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Call the callback function from the teller, expect to revert",
                  "id": 53131,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43616c6c6261636b5f4d61726b65744e6f74537570706f727465642875696e7432353629",
                        "id": 53128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14067:38:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                          "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                        },
                        "value": "Callback_MarketNotSupported(uint256)"
                      },
                      {
                        "id": 53129,
                        "name": "externalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51999,
                        "src": "14119:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                          "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53126,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "14030:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 53127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "14030:23:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 53130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14030:111:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14011:130:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53137,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "14168:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14160:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53135,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14160:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14160:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53132,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "14151:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "14151:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14151:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53140,
                  "nodeType": "ExpressionStatement",
                  "src": "14151:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53144,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53125,
                        "src": "14202:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 53141,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "14186:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5061,
                      "src": "14186:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14186:20:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53146,
                  "nodeType": "ExpressionStatement",
                  "src": "14186:20:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53150,
                        "name": "externalBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51999,
                        "src": "14234:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 53151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14248:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "313530",
                        "id": 53152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14253:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        },
                        "value": "150"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        }
                      ],
                      "expression": {
                        "id": 53147,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "14216:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "14216:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14216:41:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53154,
                  "nodeType": "ExpressionStatement",
                  "src": "14216:41:68"
                }
              ]
            },
            "documentation": {
              "id": 52894,
              "nodeType": "StructuredDocumentation",
              "src": "10866:129:68",
              "text": "DONE\n [X] Callback correctly handles payouts for the 4 market cases\n [X] Only whitelisted markets can callback"
            },
            "functionSelector": "570af261",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_callback",
            "nameLocation": "11009:24:68",
            "parameters": {
              "id": 52895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11033:2:68"
            },
            "returnParameters": {
              "id": 52896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11043:0:68"
            },
            "scope": 54093,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53306,
            "nodeType": "FunctionDefinition",
            "src": "14270:1378:68",
            "body": {
              "id": 53305,
              "nodeType": "Block",
              "src": "14330:1318:68",
              "statements": [
                {
                  "assignments": [
                    53161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53161,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "14508:3:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53305,
                      "src": "14495:16:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 53160,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14495:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Case 1: Zero tokens sent in",
                  "id": 53166,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43616c6c6261636b5f546f6b656e734e6f7452656365697665642829",
                        "id": 53164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14538:30:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_813638497a651e872deaf3e0c7addfec024776ada558f808abc154ff78cea955",
                          "typeString": "literal_string \"Callback_TokensNotReceived()\""
                        },
                        "value": "Callback_TokensNotReceived()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_813638497a651e872deaf3e0c7addfec024776ada558f808abc154ff78cea955",
                          "typeString": "literal_string \"Callback_TokensNotReceived()\""
                        }
                      ],
                      "expression": {
                        "id": 53162,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "14514:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 53163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "14514:23:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 53165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14514:55:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14495:74:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53172,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "14596:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14588:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14588:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14588:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53167,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "14579:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "14579:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14579:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53175,
                  "nodeType": "ExpressionStatement",
                  "src": "14579:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53179,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53161,
                        "src": "14630:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 53176,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "14614:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5061,
                      "src": "14614:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14614:20:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53181,
                  "nodeType": "ExpressionStatement",
                  "src": "14614:20:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53185,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "14662:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14671:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 53187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14675:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 53182,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "14644:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "14644:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14644:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53189,
                  "nodeType": "ExpressionStatement",
                  "src": "14644:34:68"
                },
                {
                  "documentation": "Case 2: Fewer than claimed tokens sent in",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53195,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "14764:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 53194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14756:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53193,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14756:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14756:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 53197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14775:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 53190,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "14743:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 53192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22043,
                      "src": "14743:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14743:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53199,
                  "nodeType": "ExpressionStatement",
                  "src": "14743:34:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53205,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "14805:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14797:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53203,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14797:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14797:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53200,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "14788:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "14788:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14788:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53208,
                  "nodeType": "ExpressionStatement",
                  "src": "14788:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53212,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53161,
                        "src": "14839:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 53209,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "14823:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5061,
                      "src": "14823:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14823:20:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53214,
                  "nodeType": "ExpressionStatement",
                  "src": "14823:20:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53218,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "14871:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14880:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 53220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14884:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 53215,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "14853:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "14853:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14853:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53222,
                  "nodeType": "ExpressionStatement",
                  "src": "14853:34:68"
                },
                {
                  "documentation": "Case 3: Exact number of tokens claimed, should work",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53228,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "14979:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14971:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53226,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14971:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14971:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53223,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "14962:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "14962:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14962:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53231,
                  "nodeType": "ExpressionStatement",
                  "src": "14962:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53235,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "15015:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 53236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15024:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      {
                        "hexValue": "35",
                        "id": 53237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15027:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 53232,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "14997:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "14997:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14997:32:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53239,
                  "nodeType": "ExpressionStatement",
                  "src": "14997:32:68"
                },
                {
                  "assignments": [
                    53241,
                    53243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53241,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "15049:5:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53305,
                      "src": "15041:13:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53240,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15041:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53243,
                      "mutability": "mutable",
                      "name": "payout",
                      "nameLocation": "15064:6:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53305,
                      "src": "15056:14:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53242,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15056:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53248,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53246,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "15100:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53244,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "15074:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountsForMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29442,
                      "src": "15074:25:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 53247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15074:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15040:68:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53250,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53241,
                        "src": "15128:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 53251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15135:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 53249,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "15119:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15119:18:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53253,
                  "nodeType": "ExpressionStatement",
                  "src": "15119:18:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53255,
                        "name": "payout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53243,
                        "src": "15156:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 53256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15164:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 53254,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "15147:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15147:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53258,
                  "nodeType": "ExpressionStatement",
                  "src": "15147:19:68"
                },
                {
                  "documentation": "Case 4: More tokens sent than claimed, should work\n Will allow a subsequent caller to pay less than they should\n This realistically shouldn't happen since the callback function is whitelisted",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53264,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "15424:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 53263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15416:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53262,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15416:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15416:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 53266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15435:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        }
                      ],
                      "expression": {
                        "id": 53259,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "15403:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 53261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22043,
                      "src": "15403:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15403:35:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53268,
                  "nodeType": "ExpressionStatement",
                  "src": "15403:35:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53274,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "15466:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15458:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53272,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15458:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15458:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53269,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "15449:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "15449:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15449:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53277,
                  "nodeType": "ExpressionStatement",
                  "src": "15449:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53281,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "15502:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15511:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 53283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15515:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 53278,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "15484:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "15484:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15484:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53285,
                  "nodeType": "ExpressionStatement",
                  "src": "15484:34:68"
                },
                {
                  "expression": {
                    "id": 53293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 53286,
                          "name": "quote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53241,
                          "src": "15530:5:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 53287,
                          "name": "payout",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53243,
                          "src": "15537:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 53288,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15529:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 53291,
                          "name": "regBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51993,
                          "src": "15573:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 53289,
                          "name": "callback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51991,
                          "src": "15547:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondCallback_$29471",
                            "typeString": "contract BondCallback"
                          }
                        },
                        "id": 53290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountsForMarket",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29442,
                        "src": "15547:25:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 53292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15547:34:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "15529:52:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53294,
                  "nodeType": "ExpressionStatement",
                  "src": "15529:52:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53296,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53241,
                        "src": "15601:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3135",
                        "id": 53297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15608:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        }
                      ],
                      "id": 53295,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "15592:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15592:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53299,
                  "nodeType": "ExpressionStatement",
                  "src": "15592:19:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53301,
                        "name": "payout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53243,
                        "src": "15630:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3135",
                        "id": 53302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15638:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        }
                      ],
                      "id": 53300,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "15621:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15621:20:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53304,
                  "nodeType": "ExpressionStatement",
                  "src": "15621:20:68"
                }
              ]
            },
            "functionSelector": "f2b2afce",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_callbackMustReceiveTokens",
            "nameLocation": "14279:41:68",
            "parameters": {
              "id": 53157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14320:2:68"
            },
            "returnParameters": {
              "id": 53158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14330:0:68"
            },
            "scope": 54093,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53410,
            "nodeType": "FunctionDefinition",
            "src": "15654:1126:68",
            "body": {
              "id": 53409,
              "nodeType": "Block",
              "src": "15722:1058:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53314,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "15820:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 53313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15812:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15812:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15812:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15831:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 53309,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "15799:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 53311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22043,
                      "src": "15799:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15799:35:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53318,
                  "nodeType": "ExpressionStatement",
                  "src": "15799:35:68"
                },
                {
                  "assignments": [
                    53320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53320,
                      "mutability": "mutable",
                      "name": "oldTellerBal",
                      "nameLocation": "15902:12:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53409,
                      "src": "15894:20:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15894:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53328,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53325,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "15939:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15931:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53323,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15931:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15931:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53321,
                        "name": "ohm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "15917:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        }
                      },
                      "id": 53322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22088,
                      "src": "15917:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15917:30:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15894:53:68"
                },
                {
                  "assignments": [
                    53330
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53330,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "16052:3:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53409,
                      "src": "16039:16:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 53329,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "16039:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53336,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43616c6c6261636b5f4d61726b65744e6f74537570706f727465642875696e7432353629",
                        "id": 53333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16095:38:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                          "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                        },
                        "value": "Callback_MarketNotSupported(uint256)"
                      },
                      {
                        "id": 53334,
                        "name": "nonWhitelistedBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52001,
                        "src": "16147:18:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2c60e167e701c046d1b65c29b6cb9f8008ff07fee4f89ced6fadbe654eec6b9f",
                          "typeString": "literal_string \"Callback_MarketNotSupported(uint256)\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53331,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "16058:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 53332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "16058:23:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 53335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16058:117:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16039:136:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53342,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "16202:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16194:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53340,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16194:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16194:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53337,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "16185:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "16185:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16185:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53345,
                  "nodeType": "ExpressionStatement",
                  "src": "16185:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53349,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53330,
                        "src": "16236:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 53346,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "16220:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5061,
                      "src": "16220:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16220:20:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53351,
                  "nodeType": "ExpressionStatement",
                  "src": "16220:20:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53355,
                        "name": "nonWhitelistedBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52001,
                        "src": "16268:18:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16288:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 53357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16292:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 53352,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "16250:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "16250:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16250:45:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53359,
                  "nodeType": "ExpressionStatement",
                  "src": "16250:45:68"
                },
                {
                  "assignments": [
                    53361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53361,
                      "mutability": "mutable",
                      "name": "newTellerBal",
                      "nameLocation": "16371:12:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53409,
                      "src": "16363:20:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53360,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16363:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53369,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53366,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "16408:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16400:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53364,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16400:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16400:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53362,
                        "name": "ohm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "16386:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        }
                      },
                      "id": 53363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22088,
                      "src": "16386:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16386:30:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16363:53:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53371,
                        "name": "newTellerBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53361,
                        "src": "16435:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53372,
                        "name": "oldTellerBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53320,
                        "src": "16449:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53370,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "16426:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16426:36:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53374,
                  "nodeType": "ExpressionStatement",
                  "src": "16426:36:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53380,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "16571:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16563:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53378,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16563:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16563:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53375,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "16554:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "16554:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16554:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53383,
                  "nodeType": "ExpressionStatement",
                  "src": "16554:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53387,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "16607:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16616:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 53389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16620:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 53384,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "16589:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "16589:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16589:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53391,
                  "nodeType": "ExpressionStatement",
                  "src": "16589:34:68"
                },
                {
                  "expression": {
                    "id": 53400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53392,
                      "name": "newTellerBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53361,
                      "src": "16677:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 53397,
                              "name": "teller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51958,
                              "src": "16714:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 53396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16706:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 53395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16706:7:68",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 53398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16706:15:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 53393,
                          "name": "ohm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51964,
                          "src": "16692:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOhm_$51933",
                            "typeString": "contract MockOhm"
                          }
                        },
                        "id": 53394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22088,
                        "src": "16692:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 53399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16692:30:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16677:45:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53401,
                  "nodeType": "ExpressionStatement",
                  "src": "16677:45:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53403,
                        "name": "newTellerBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53361,
                        "src": "16741:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53404,
                          "name": "oldTellerBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53320,
                          "src": "16755:12:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 53405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16770:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "16755:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53402,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "16732:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16732:41:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53408,
                  "nodeType": "ExpressionStatement",
                  "src": "16732:41:68"
                }
              ]
            },
            "functionSelector": "38906dbd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_OnlyWhitelistedMarketsCanCallback",
            "nameLocation": "15663:49:68",
            "parameters": {
              "id": 53307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15712:2:68"
            },
            "returnParameters": {
              "id": 53308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15722:0:68"
            },
            "scope": 54093,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53525,
            "nodeType": "FunctionDefinition",
            "src": "16919:1086:68",
            "body": {
              "id": 53524,
              "nodeType": "Block",
              "src": "16963:1042:68",
              "statements": [
                {
                  "assignments": [
                    53415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53415,
                      "mutability": "mutable",
                      "name": "wlOne",
                      "nameLocation": "17047:5:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53524,
                      "src": "17039:13:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53414,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17039:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53423,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53417,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "17068:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 53418,
                        "name": "ohm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "17077:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17082:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 53420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17085:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33",
                        "id": 53421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17088:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 53416,
                      "name": "createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52893,
                      "src": "17055:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$22445_$_t_contract$_ERC20_$22445_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                      }
                    },
                    "id": 53422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17055:35:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17039:51:68"
                },
                {
                  "assignments": [
                    53425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53425,
                      "mutability": "mutable",
                      "name": "wlTwo",
                      "nameLocation": "17108:5:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53524,
                      "src": "17100:13:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53424,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17100:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53433,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53427,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "17129:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 53428,
                        "name": "ohm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "17138:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17143:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 53430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17146:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33",
                        "id": 53431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17149:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 53426,
                      "name": "createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52893,
                      "src": "17116:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$22445_$_t_contract$_ERC20_$22445_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                      }
                    },
                    "id": 53432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17116:35:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17100:51:68"
                },
                {
                  "assignments": [
                    53435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53435,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "17257:3:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53524,
                      "src": "17244:16:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 53434,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17244:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53444,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53438,
                          "name": "Policy_OnlyRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22487,
                          "src": "17299:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_userDefinedValueType$_Role_$22561_$returns$__$",
                            "typeString": "function (Role) pure"
                          }
                        },
                        "id": 53439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "17299:24:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "63616c6c6261636b5f77686974656c697374",
                            "id": 53441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17344:20:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            },
                            "value": "callback_whitelist"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5b9bf50db5a4374da52b9a008d8f12be9862b57828bf86dc425a2124650206ba",
                              "typeString": "literal_string \"callback_whitelist\""
                            }
                          ],
                          "id": 53440,
                          "name": "toRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65791,
                          "src": "17337:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Role_$22561_$",
                            "typeString": "function (bytes32) pure returns (Role)"
                          }
                        },
                        "id": 53442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17337:28:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                          "typeString": "Role"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                          "typeString": "Role"
                        }
                      ],
                      "expression": {
                        "id": 53436,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "17263:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 53437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "17263:22:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 53443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17263:112:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17244:131:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53448,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51943,
                        "src": "17394:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53445,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "17385:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "17385:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17385:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53450,
                  "nodeType": "ExpressionStatement",
                  "src": "17385:15:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53454,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53435,
                        "src": "17426:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 53451,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "17410:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5061,
                      "src": "17410:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17410:20:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53456,
                  "nodeType": "ExpressionStatement",
                  "src": "17410:20:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53462,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "17467:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17459:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53460,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17459:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17459:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53464,
                        "name": "wlOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53415,
                        "src": "17476:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53457,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "17440:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29159,
                      "src": "17440:18:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17440:42:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53466,
                  "nodeType": "ExpressionStatement",
                  "src": "17440:42:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53470,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51949,
                        "src": "17569:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53467,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "17560:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "17560:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17560:16:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53472,
                  "nodeType": "ExpressionStatement",
                  "src": "17560:16:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53478,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "17613:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17605:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53476,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17605:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17605:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53480,
                        "name": "wlOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53415,
                        "src": "17622:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53473,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "17586:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29159,
                      "src": "17586:18:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17586:42:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53482,
                  "nodeType": "ExpressionStatement",
                  "src": "17586:42:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53488,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51958,
                                "src": "17717:6:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 53487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17709:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53486,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17709:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17709:15:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 53490,
                            "name": "wlOne",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53415,
                            "src": "17726:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 53484,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "17684:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          },
                          "id": 53485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approvedMarkets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28903,
                          "src": "17684:24:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view external returns (bool)"
                          }
                        },
                        "id": 53491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17684:48:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53483,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "17677:6:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 53492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17677:56:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53493,
                  "nodeType": "ExpressionStatement",
                  "src": "17677:56:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53499,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51988,
                            "src": "17831:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Operator_$33152",
                              "typeString": "contract Operator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Operator_$33152",
                              "typeString": "contract Operator"
                            }
                          ],
                          "id": 53498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17823:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53497,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17823:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17823:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53494,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "17814:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "17814:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17814:27:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53502,
                  "nodeType": "ExpressionStatement",
                  "src": "17814:27:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53508,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "17878:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17870:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53506,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17870:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17870:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53510,
                        "name": "wlTwo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53425,
                        "src": "17887:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53503,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "17851:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29159,
                      "src": "17851:18:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17851:42:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53512,
                  "nodeType": "ExpressionStatement",
                  "src": "17851:42:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53518,
                                "name": "teller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51958,
                                "src": "17982:6:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                                  "typeString": "contract BondFixedTermTeller"
                                }
                              ],
                              "id": 53517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17974:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53516,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17974:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17974:15:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 53520,
                            "name": "wlTwo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53425,
                            "src": "17991:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 53514,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "17949:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          },
                          "id": 53515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approvedMarkets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28903,
                          "src": "17949:24:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view external returns (bool)"
                          }
                        },
                        "id": 53521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17949:48:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53513,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "17942:6:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 53522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17942:56:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53523,
                  "nodeType": "ExpressionStatement",
                  "src": "17942:56:68"
                }
              ]
            },
            "documentation": {
              "id": 53411,
              "nodeType": "StructuredDocumentation",
              "src": "16831:83:68",
              "text": "DONE\n [X] whitelist\n [X] setOperator\n [X] batchToTreasury"
            },
            "functionSelector": "ce597df3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_whitelist",
            "nameLocation": "16928:25:68",
            "parameters": {
              "id": 53412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16953:2:68"
            },
            "returnParameters": {
              "id": 53413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16963:0:68"
            },
            "scope": 54093,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53584,
            "nodeType": "FunctionDefinition",
            "src": "18011:556:68",
            "body": {
              "id": 53583,
              "nodeType": "Block",
              "src": "18057:510:68",
              "statements": [
                {
                  "assignments": [
                    53530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53530,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "18159:3:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 53583,
                      "src": "18146:16:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 53529,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "18146:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Attempt to set operator contract to zero address and expect revert",
                  "id": 53535,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "43616c6c6261636b5f496e76616c6964506172616d732829",
                        "id": 53533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18189:26:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7a4111e846a281e9fec32b9163237b55525e89d386d3bf9b9ca6c05a98ad08e",
                          "typeString": "literal_string \"Callback_InvalidParams()\""
                        },
                        "value": "Callback_InvalidParams()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c7a4111e846a281e9fec32b9163237b55525e89d386d3bf9b9ca6c05a98ad08e",
                          "typeString": "literal_string \"Callback_InvalidParams()\""
                        }
                      ],
                      "expression": {
                        "id": 53531,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "18165:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 53532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "18165:23:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 53534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18165:51:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18146:70:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53539,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53530,
                        "src": "18242:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 53536,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "18226:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5061,
                      "src": "18226:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18226:20:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53541,
                  "nodeType": "ExpressionStatement",
                  "src": "18226:20:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53545,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51947,
                        "src": "18265:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53542,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "18256:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "18256:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18256:18:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53547,
                  "nodeType": "ExpressionStatement",
                  "src": "18256:18:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 53554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18322:1:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 53553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18314:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53552,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18314:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18314:10:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53551,
                          "name": "Operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33152,
                          "src": "18305:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Operator_$33152_$",
                            "typeString": "type(contract Operator)"
                          }
                        },
                        "id": 53556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18305:20:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$33152",
                          "typeString": "contract Operator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Operator_$33152",
                          "typeString": "contract Operator"
                        }
                      ],
                      "expression": {
                        "id": 53548,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "18284:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29470,
                      "src": "18284:20:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Operator_$33152_$returns$__$",
                        "typeString": "function (contract Operator) external"
                      }
                    },
                    "id": 53557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18284:42:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53558,
                  "nodeType": "ExpressionStatement",
                  "src": "18284:42:68"
                },
                {
                  "documentation": "Update the operator as guardian",
                  "expression": {
                    "arguments": [
                      {
                        "id": 53562,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51947,
                        "src": "18390:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53559,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "18381:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "18381:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18381:18:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53564,
                  "nodeType": "ExpressionStatement",
                  "src": "18381:18:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53569,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51943,
                            "src": "18439:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53568,
                          "name": "Operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33152,
                          "src": "18430:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Operator_$33152_$",
                            "typeString": "type(contract Operator)"
                          }
                        },
                        "id": 53570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18430:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Operator_$33152",
                          "typeString": "contract Operator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Operator_$33152",
                          "typeString": "contract Operator"
                        }
                      ],
                      "expression": {
                        "id": 53565,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "18409:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29470,
                      "src": "18409:20:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Operator_$33152_$returns$__$",
                        "typeString": "function (contract Operator) external"
                      }
                    },
                    "id": 53571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18409:37:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53572,
                  "nodeType": "ExpressionStatement",
                  "src": "18409:37:68"
                },
                {
                  "documentation": "Check that the operator contract has been set",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 53576,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "18532:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              },
                              "id": 53577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "operator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28926,
                              "src": "18532:17:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Operator_$33152_$",
                                "typeString": "function () view external returns (contract Operator)"
                              }
                            },
                            "id": 53578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18532:19:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Operator_$33152",
                              "typeString": "contract Operator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Operator_$33152",
                              "typeString": "contract Operator"
                            }
                          ],
                          "id": 53575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18524:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53574,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18524:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18524:28:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53580,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51943,
                        "src": "18554:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 53573,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "18515:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 53581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18515:45:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53582,
                  "nodeType": "ExpressionStatement",
                  "src": "18515:45:68"
                }
              ]
            },
            "functionSelector": "9e0c5608",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setOperator",
            "nameLocation": "18020:27:68",
            "parameters": {
              "id": 53526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18047:2:68"
            },
            "returnParameters": {
              "id": 53527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18057:0:68"
            },
            "scope": 54093,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54022,
            "nodeType": "FunctionDefinition",
            "src": "18573:3824:68",
            "body": {
              "id": 54021,
              "nodeType": "Block",
              "src": "18623:3774:68",
              "statements": [
                {
                  "assignments": [
                    53589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53589,
                      "mutability": "mutable",
                      "name": "otherBond",
                      "nameLocation": "18716:9:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 54021,
                      "src": "18708:17:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53588,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18708:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Create an extra market with the other token as the quote token",
                  "id": 53597,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53591,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51970,
                        "src": "18741:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 53592,
                        "name": "ohm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "18748:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 53593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18753:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "31",
                        "id": 53594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18756:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35",
                        "id": 53595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18759:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_MockOhm_$51933",
                          "typeString": "contract MockOhm"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 53590,
                      "name": "createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52893,
                      "src": "18728:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$22445_$_t_contract$_ERC20_$22445_$_t_int8_$_t_int8_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,contract ERC20,int8,int8,uint256) returns (uint256)"
                      }
                    },
                    "id": 53596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18728:33:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18708:53:68"
                },
                {
                  "documentation": "Whitelist new market on the callback",
                  "expression": {
                    "arguments": [
                      {
                        "id": 53601,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51949,
                        "src": "18830:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53598,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "18821:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "18821:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18821:16:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53603,
                  "nodeType": "ExpressionStatement",
                  "src": "18821:16:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53609,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "18874:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18866:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53607,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18866:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18866:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53611,
                        "name": "otherBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53589,
                        "src": "18883:9:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53604,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "18847:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29159,
                      "src": "18847:18:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18847:46:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53613,
                  "nodeType": "ExpressionStatement",
                  "src": "18847:46:68"
                },
                {
                  "assignments": [
                    53619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53619,
                      "mutability": "mutable",
                      "name": "startBalances",
                      "nameLocation": "18977:13:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 54021,
                      "src": "18959:31:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 53617,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18959:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53618,
                        "length": {
                          "hexValue": "32",
                          "id": 53616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18967:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "18959:10:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                          "typeString": "uint256[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store the initial balances of the treasury",
                  "id": 53635,
                  "initialValue": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53624,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51982,
                                "src": "19033:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              ],
                              "id": 53623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19025:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53622,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19025:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19025:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53620,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51967,
                            "src": "19007:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "19007:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19007:36:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53631,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51982,
                                "src": "19081:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              ],
                              "id": 53630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19073:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53629,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19073:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19073:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53627,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51970,
                            "src": "19057:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "19057:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19057:34:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 53634,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "18993:108:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18959:142:68"
                },
                {
                  "documentation": "Send other tokens and reserve tokens to callback to mimic bond purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53641,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "19217:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 53640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19209:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53639,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19209:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19209:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 53643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19228:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "expression": {
                        "id": 53636,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "19196:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 53638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22043,
                      "src": "19196:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19196:35:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53645,
                  "nodeType": "ExpressionStatement",
                  "src": "19196:35:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53651,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "19260:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 53650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19252:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53649,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19252:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19252:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19271:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 53646,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51970,
                        "src": "19241:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 53648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22043,
                      "src": "19241:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19241:33:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53655,
                  "nodeType": "ExpressionStatement",
                  "src": "19241:33:68"
                },
                {
                  "documentation": "Call the callback function from the teller to payout the purchases",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53661,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "19381:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19373:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53659,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19373:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19373:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53656,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "19364:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "19364:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19364:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53664,
                  "nodeType": "ExpressionStatement",
                  "src": "19364:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53668,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "19417:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 53669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19426:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      },
                      {
                        "hexValue": "31",
                        "id": 53670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19430:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 53665,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "19399:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "19399:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19399:33:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53672,
                  "nodeType": "ExpressionStatement",
                  "src": "19399:33:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53678,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "19460:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19452:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53676,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19452:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19452:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53673,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "19443:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "19443:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19443:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53681,
                  "nodeType": "ExpressionStatement",
                  "src": "19443:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53685,
                        "name": "otherBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53589,
                        "src": "19496:9:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19507:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "323030",
                        "id": 53687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19511:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "expression": {
                        "id": 53682,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "19478:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "19478:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19478:37:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53689,
                  "nodeType": "ExpressionStatement",
                  "src": "19478:37:68"
                },
                {
                  "documentation": "Check the balance of the callback and ensure it's updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53695,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "19631:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 53694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19623:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53693,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19623:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19623:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53691,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51967,
                            "src": "19605:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "19605:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19605:36:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 53698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19643:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "id": 53690,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "19596:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19596:50:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53700,
                  "nodeType": "ExpressionStatement",
                  "src": "19596:50:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53706,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "19689:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 53705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19681:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53704,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19681:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19681:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53702,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51970,
                            "src": "19665:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "19665:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19665:34:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19701:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 53701,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "19656:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19656:48:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53711,
                  "nodeType": "ExpressionStatement",
                  "src": "19656:48:68"
                },
                {
                  "assignments": [
                    53716
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53716,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "19792:6:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 54021,
                      "src": "19777:21:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                        "typeString": "contract ERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 53714,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 53713,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 22445,
                            "src": "19777:5:68"
                          },
                          "referencedDeclaration": 22445,
                          "src": "19777:5:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$22445",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 53715,
                        "nodeType": "ArrayTypeName",
                        "src": "19777:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_storage_ptr",
                          "typeString": "contract ERC20[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Call batch to treasury with each token separately",
                  "id": 53723,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 53721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19813:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 53720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "19801:11:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract ERC20[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 53718,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 53717,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 22445,
                            "src": "19805:5:68"
                          },
                          "referencedDeclaration": 22445,
                          "src": "19805:5:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$22445",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 53719,
                        "nodeType": "ArrayTypeName",
                        "src": "19805:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_storage_ptr",
                          "typeString": "contract ERC20[]"
                        }
                      }
                    },
                    "id": 53722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19801:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                      "typeString": "contract ERC20[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19777:38:68"
                },
                {
                  "expression": {
                    "id": 53728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 53724,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53716,
                        "src": "19825:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 53726,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 53725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19832:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19825:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$22445",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53727,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51967,
                      "src": "19837:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$22057",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "19825:19:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22445",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 53729,
                  "nodeType": "ExpressionStatement",
                  "src": "19825:19:68"
                },
                {
                  "documentation": "Try to call batch to treasury as non-policy, expect revert",
                  "id": 53759,
                  "nodeType": "Block",
                  "src": "19926:273:68",
                  "statements": [
                    {
                      "assignments": [
                        53731
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 53731,
                          "mutability": "mutable",
                          "name": "err",
                          "nameLocation": "19953:3:68",
                          "nodeType": "VariableDeclaration",
                          "scope": 53759,
                          "src": "19940:16:68",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 53730,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "19940:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 53740,
                      "initialValue": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 53734,
                              "name": "Policy_OnlyRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22487,
                              "src": "19999:15:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_userDefinedValueType$_Role_$22561_$returns$__$",
                                "typeString": "function (Role) pure"
                              }
                            },
                            "id": 53735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "19999:24:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "63616c6c6261636b5f61646d696e",
                                "id": 53737,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20048:16:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_67c4daf9a1b913d91399903201c4369d999035e46c0d4821ee2a52c23272b43b",
                                  "typeString": "literal_string \"callback_admin\""
                                },
                                "value": "callback_admin"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_67c4daf9a1b913d91399903201c4369d999035e46c0d4821ee2a52c23272b43b",
                                  "typeString": "literal_string \"callback_admin\""
                                }
                              ],
                              "id": 53736,
                              "name": "toRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65791,
                              "src": "20041:6:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Role_$22561_$",
                                "typeString": "function (bytes32) pure returns (Role)"
                              }
                            },
                            "id": 53738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20041:24:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Role_$22561",
                              "typeString": "Role"
                            }
                          ],
                          "expression": {
                            "id": 53732,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19959:3:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 53733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "19959:22:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 53739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19959:120:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "19940:139:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 53744,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51943,
                            "src": "20102:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53741,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1817,
                            "src": "20093:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$5434",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 53743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5020,
                          "src": "20093:8:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 53745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20093:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 53746,
                      "nodeType": "ExpressionStatement",
                      "src": "20093:15:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 53750,
                            "name": "err",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53731,
                            "src": "20138:3:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 53747,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1817,
                            "src": "20122:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$5434",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 53749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expectRevert",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5061,
                          "src": "20122:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (bytes memory) external"
                          }
                        },
                        "id": 53751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20122:20:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 53752,
                      "nodeType": "ExpressionStatement",
                      "src": "20122:20:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 53756,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53716,
                            "src": "20181:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                              "typeString": "contract ERC20[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                              "typeString": "contract ERC20[] memory"
                            }
                          ],
                          "expression": {
                            "id": 53753,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "20156:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          },
                          "id": 53755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "batchToTreasury",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29412,
                          "src": "20156:24:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr_$returns$__$",
                            "typeString": "function (contract ERC20[] memory) external"
                          }
                        },
                        "id": 53757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20156:32:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 53758,
                      "nodeType": "ExpressionStatement",
                      "src": "20156:32:68"
                    }
                  ]
                },
                {
                  "documentation": "Call batch to treasury as guardian",
                  "expression": {
                    "arguments": [
                      {
                        "id": 53763,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51947,
                        "src": "20265:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53760,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "20256:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "20256:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20256:18:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53765,
                  "nodeType": "ExpressionStatement",
                  "src": "20256:18:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53769,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53716,
                        "src": "20309:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      ],
                      "expression": {
                        "id": 53766,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "20284:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchToTreasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29412,
                      "src": "20284:24:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC20[] memory) external"
                      }
                    },
                    "id": 53770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20284:32:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53771,
                  "nodeType": "ExpressionStatement",
                  "src": "20284:32:68"
                },
                {
                  "documentation": "Expect the reserve balance of the callback and treasury to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53777,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "20444:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 53776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20436:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53775,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20436:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20436:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53773,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51967,
                            "src": "20418:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "20418:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20418:36:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20456:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 53772,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "20409:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20409:49:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53782,
                  "nodeType": "ExpressionStatement",
                  "src": "20409:49:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53788,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51982,
                                "src": "20503:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              ],
                              "id": 53787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20495:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53786,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20495:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20495:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53784,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51967,
                            "src": "20477:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "20477:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20477:36:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 53791,
                            "name": "startBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53619,
                            "src": "20515:13:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 53793,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 53792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20529:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20515:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3330",
                          "id": 53794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20534:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        "src": "20515:21:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53783,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "20468:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20468:69:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53797,
                  "nodeType": "ExpressionStatement",
                  "src": "20468:69:68"
                },
                {
                  "documentation": "Test batch to treasury with the other token",
                  "expression": {
                    "id": 53802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 53798,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53716,
                        "src": "20604:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 53800,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 53799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20611:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20604:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$22445",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53801,
                      "name": "other",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51970,
                      "src": "20616:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$22057",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "20604:17:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22445",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 53803,
                  "nodeType": "ExpressionStatement",
                  "src": "20604:17:68"
                },
                {
                  "documentation": "Call batch to treasury as guardian",
                  "expression": {
                    "arguments": [
                      {
                        "id": 53807,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51947,
                        "src": "20688:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53804,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "20679:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "20679:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20679:18:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53809,
                  "nodeType": "ExpressionStatement",
                  "src": "20679:18:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53813,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53716,
                        "src": "20732:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      ],
                      "expression": {
                        "id": 53810,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "20707:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchToTreasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29412,
                      "src": "20707:24:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC20[] memory) external"
                      }
                    },
                    "id": 53814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20707:32:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53815,
                  "nodeType": "ExpressionStatement",
                  "src": "20707:32:68"
                },
                {
                  "documentation": "Expect the other balance of the callback and treasury to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53821,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "20863:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 53820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20855:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53819,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20855:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20855:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53817,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51970,
                            "src": "20839:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "20839:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20839:34:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20875:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 53816,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "20830:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20830:47:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53826,
                  "nodeType": "ExpressionStatement",
                  "src": "20830:47:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53832,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51982,
                                "src": "20920:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              ],
                              "id": 53831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20912:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53830,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20912:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20912:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53828,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51970,
                            "src": "20896:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "20896:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20896:34:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 53835,
                            "name": "startBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53619,
                            "src": "20932:13:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 53837,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 53836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20946:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20932:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 53838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20951:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "20932:21:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53827,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "20887:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20887:67:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53841,
                  "nodeType": "ExpressionStatement",
                  "src": "20887:67:68"
                },
                {
                  "documentation": "Store updated treasury balances",
                  "expression": {
                    "id": 53858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53842,
                      "name": "startBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53619,
                      "src": "21055:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 53847,
                                  "name": "treasury",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51982,
                                  "src": "21098:8:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                    "typeString": "contract OlympusTreasury"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                    "typeString": "contract OlympusTreasury"
                                  }
                                ],
                                "id": 53846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "21090:7:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53845,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21090:7:68",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 53848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21090:17:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 53843,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51967,
                              "src": "21072:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$22057",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 53844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22088,
                            "src": "21072:17:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 53849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21072:36:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 53854,
                                  "name": "treasury",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51982,
                                  "src": "21134:8:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                    "typeString": "contract OlympusTreasury"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                    "typeString": "contract OlympusTreasury"
                                  }
                                ],
                                "id": 53853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "21126:7:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53852,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21126:7:68",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 53855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21126:17:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 53850,
                              "name": "other",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51970,
                              "src": "21110:5:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$22057",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 53851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22088,
                            "src": "21110:15:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 53856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21110:34:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 53857,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "21071:74:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "src": "21055:90:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "id": 53859,
                  "nodeType": "ExpressionStatement",
                  "src": "21055:90:68"
                },
                {
                  "documentation": "Send other tokens and reserve tokens to callback to mimic bond purchase",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53865,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "21261:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 53864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21253:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53863,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21253:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21253:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 53867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21272:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "expression": {
                        "id": 53860,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "21240:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 53862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22043,
                      "src": "21240:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21240:35:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53869,
                  "nodeType": "ExpressionStatement",
                  "src": "21240:35:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53875,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "21304:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 53874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21296:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53873,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21296:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21296:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21315:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 53870,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51970,
                        "src": "21285:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 53872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22043,
                      "src": "21285:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 53878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21285:33:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53879,
                  "nodeType": "ExpressionStatement",
                  "src": "21285:33:68"
                },
                {
                  "documentation": "Call the callback function from the teller to payout the purchases",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53885,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "21425:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21417:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53883,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21417:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21417:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53880,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "21408:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "21408:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21408:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53888,
                  "nodeType": "ExpressionStatement",
                  "src": "21408:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53892,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "21461:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 53893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21470:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      },
                      {
                        "hexValue": "31",
                        "id": 53894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21474:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 53889,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "21443:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "21443:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21443:33:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53896,
                  "nodeType": "ExpressionStatement",
                  "src": "21443:33:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53902,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "21504:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 53901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21496:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53900,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21496:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21496:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53897,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "21487:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "21487:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21487:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53905,
                  "nodeType": "ExpressionStatement",
                  "src": "21487:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53909,
                        "name": "otherBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53589,
                        "src": "21540:9:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21551:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "323030",
                        "id": 53911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21555:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "expression": {
                        "id": 53906,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "21522:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "21522:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 53912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21522:37:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53913,
                  "nodeType": "ExpressionStatement",
                  "src": "21522:37:68"
                },
                {
                  "documentation": "Check that the callback balances are updated again",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53919,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "21668:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 53918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21660:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53917,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21660:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21660:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53915,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51967,
                            "src": "21642:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "21642:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21642:36:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 53922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21680:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "id": 53914,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "21633:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21633:50:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53924,
                  "nodeType": "ExpressionStatement",
                  "src": "21633:50:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53930,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "21726:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 53929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21718:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53928,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21718:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21718:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53926,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51970,
                            "src": "21702:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "21702:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21702:34:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 53933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21738:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 53925,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "21693:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21693:48:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53935,
                  "nodeType": "ExpressionStatement",
                  "src": "21693:48:68"
                },
                {
                  "documentation": "Call batch to treasury with both tokens",
                  "expression": {
                    "id": 53943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53936,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53716,
                      "src": "21804:6:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                        "typeString": "contract ERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 53941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21825:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 53940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "21813:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract ERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 53938,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 53937,
                              "name": "ERC20",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 22445,
                              "src": "21817:5:68"
                            },
                            "referencedDeclaration": 22445,
                            "src": "21817:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$22445",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 53939,
                          "nodeType": "ArrayTypeName",
                          "src": "21817:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_storage_ptr",
                            "typeString": "contract ERC20[]"
                          }
                        }
                      },
                      "id": 53942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21813:14:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                        "typeString": "contract ERC20[] memory"
                      }
                    },
                    "src": "21804:23:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                      "typeString": "contract ERC20[] memory"
                    }
                  },
                  "id": 53944,
                  "nodeType": "ExpressionStatement",
                  "src": "21804:23:68"
                },
                {
                  "expression": {
                    "id": 53949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 53945,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53716,
                        "src": "21837:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 53947,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 53946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21844:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21837:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$22445",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53948,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51967,
                      "src": "21849:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$22057",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "21837:19:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22445",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 53950,
                  "nodeType": "ExpressionStatement",
                  "src": "21837:19:68"
                },
                {
                  "expression": {
                    "id": 53955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 53951,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53716,
                        "src": "21866:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 53953,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 53952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21873:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21866:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$22445",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53954,
                      "name": "other",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51970,
                      "src": "21878:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$22057",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "21866:17:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22445",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 53956,
                  "nodeType": "ExpressionStatement",
                  "src": "21866:17:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53960,
                        "name": "guardian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51947,
                        "src": "21903:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53957,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "21894:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "21894:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21894:18:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53962,
                  "nodeType": "ExpressionStatement",
                  "src": "21894:18:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53966,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53716,
                        "src": "21947:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      ],
                      "expression": {
                        "id": 53963,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "21922:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 53965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchToTreasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29412,
                      "src": "21922:24:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_ERC20_$22445_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC20[] memory) external"
                      }
                    },
                    "id": 53967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21922:32:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53968,
                  "nodeType": "ExpressionStatement",
                  "src": "21922:32:68"
                },
                {
                  "documentation": "Expect the reserve balance of the callback and treasury to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53974,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "22082:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 53973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22074:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53972,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22074:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22074:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53970,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51967,
                            "src": "22056:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "22056:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22056:36:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22094:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 53969,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "22047:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22047:49:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53979,
                  "nodeType": "ExpressionStatement",
                  "src": "22047:49:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53985,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51982,
                                "src": "22141:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              ],
                              "id": 53984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22133:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53983,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22133:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22133:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53981,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51967,
                            "src": "22115:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "22115:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22115:36:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 53988,
                            "name": "startBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53619,
                            "src": "22153:13:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 53990,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 53989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22167:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22153:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3330",
                          "id": 53991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22172:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        "src": "22153:21:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53980,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "22106:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22106:69:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53994,
                  "nodeType": "ExpressionStatement",
                  "src": "22106:69:68"
                },
                {
                  "documentation": "Expect the other balance of the callback and treasury to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54000,
                                "name": "callback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51991,
                                "src": "22299:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondCallback_$29471",
                                  "typeString": "contract BondCallback"
                                }
                              ],
                              "id": 53999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22291:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53998,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22291:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22291:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53996,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51970,
                            "src": "22275:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "22275:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22275:34:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 54003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22311:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 53995,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "22266:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22266:47:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54005,
                  "nodeType": "ExpressionStatement",
                  "src": "22266:47:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54011,
                                "name": "treasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51982,
                                "src": "22356:8:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusTreasury_$28720",
                                  "typeString": "contract OlympusTreasury"
                                }
                              ],
                              "id": 54010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22348:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 54009,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22348:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22348:17:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54007,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51970,
                            "src": "22332:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$22057",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 54008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22088,
                          "src": "22332:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 54013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22332:34:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 54018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 54014,
                            "name": "startBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53619,
                            "src": "22368:13:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 54016,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 54015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22382:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22368:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 54017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22387:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "22368:21:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54006,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "22323:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22323:67:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54020,
                  "nodeType": "ExpressionStatement",
                  "src": "22323:67:68"
                }
              ]
            },
            "functionSelector": "4b59caab",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_batchToTreasury",
            "nameLocation": "18582:31:68",
            "parameters": {
              "id": 53585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18613:2:68"
            },
            "returnParameters": {
              "id": 53586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18623:0:68"
            },
            "scope": 54093,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54092,
            "nodeType": "FunctionDefinition",
            "src": "22490:813:68",
            "body": {
              "id": 54091,
              "nodeType": "Block",
              "src": "22541:762:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54031,
                            "name": "callback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51991,
                            "src": "22639:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondCallback_$29471",
                              "typeString": "contract BondCallback"
                            }
                          ],
                          "id": 54030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22631:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54029,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "22631:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22631:17:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 54033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22650:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 54026,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51967,
                        "src": "22618:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$22057",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 54028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22043,
                      "src": "22618:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 54034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22618:35:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54035,
                  "nodeType": "ExpressionStatement",
                  "src": "22618:35:68"
                },
                {
                  "assignments": [
                    54037,
                    54039
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54037,
                      "mutability": "mutable",
                      "name": "oldQuoteAmount",
                      "nameLocation": "22763:14:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 54091,
                      "src": "22755:22:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54036,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22755:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 54039,
                      "mutability": "mutable",
                      "name": "oldPayoutAmount",
                      "nameLocation": "22787:15:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 54091,
                      "src": "22779:23:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54038,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22779:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54044,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54042,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "22832:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54040,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "22806:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 54041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountsForMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29442,
                      "src": "22806:25:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 54043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22806:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22754:86:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54046,
                        "name": "oldQuoteAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54037,
                        "src": "22859:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 54047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22875:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 54045,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "22850:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22850:27:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54049,
                  "nodeType": "ExpressionStatement",
                  "src": "22850:27:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54051,
                        "name": "oldPayoutAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54039,
                        "src": "22896:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 54052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22913:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 54050,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "22887:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22887:28:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54054,
                  "nodeType": "ExpressionStatement",
                  "src": "22887:28:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54060,
                            "name": "teller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "23018:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$38603",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 54059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23010:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54058,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23010:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23010:15:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 54055,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "23001:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5434",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 54057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5020,
                      "src": "23001:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 54062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23001:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54063,
                  "nodeType": "ExpressionStatement",
                  "src": "23001:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54067,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "23054:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 54068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23063:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 54069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23067:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 54064,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "23036:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 54066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29338,
                      "src": "23036:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) external"
                      }
                    },
                    "id": 54070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23036:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54071,
                  "nodeType": "ExpressionStatement",
                  "src": "23036:34:68"
                },
                {
                  "assignments": [
                    54073,
                    54075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54073,
                      "mutability": "mutable",
                      "name": "newQuoteAmount",
                      "nameLocation": "23142:14:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 54091,
                      "src": "23134:22:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54072,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23134:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 54075,
                      "mutability": "mutable",
                      "name": "newPayoutAmount",
                      "nameLocation": "23166:15:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 54091,
                      "src": "23158:23:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54074,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23158:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54080,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54078,
                        "name": "regBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51993,
                        "src": "23211:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54076,
                        "name": "callback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51991,
                        "src": "23185:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondCallback_$29471",
                          "typeString": "contract BondCallback"
                        }
                      },
                      "id": 54077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountsForMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29442,
                      "src": "23185:25:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 54079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23185:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23133:86:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54082,
                        "name": "newQuoteAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54073,
                        "src": "23238:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 54083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23254:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 54081,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "23229:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23229:28:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54085,
                  "nodeType": "ExpressionStatement",
                  "src": "23229:28:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54087,
                        "name": "newPayoutAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54075,
                        "src": "23276:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 54088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23293:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 54086,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "23267:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 54089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23267:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54090,
                  "nodeType": "ExpressionStatement",
                  "src": "23267:29:68"
                }
              ]
            },
            "documentation": {
              "id": 54023,
              "nodeType": "StructuredDocumentation",
              "src": "22447:38:68",
              "text": "DONE\n [X] amountsForMarket"
            },
            "functionSelector": "3be22132",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_amountsForMarket",
            "nameLocation": "22499:32:68",
            "parameters": {
              "id": 54024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22531:2:68"
            },
            "returnParameters": {
              "id": 54025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22541:0:68"
            },
            "scope": 54093,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 51934,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3456,
              "src": "1661:4:68"
            },
            "id": 51935,
            "nodeType": "InheritanceSpecifier",
            "src": "1661:4:68"
          }
        ],
        "canonicalName": "BondCallbackTest",
        "contractDependencies": [
          22009,
          22057,
          23747,
          26749,
          28279,
          28720,
          29471,
          33152,
          37078,
          38003,
          38051,
          38603,
          45385,
          51933
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54093,
          3456,
          2022,
          1786
        ],
        "name": "BondCallbackTest",
        "nameLocation": "1641:16:68",
        "scope": 54094,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 68
}